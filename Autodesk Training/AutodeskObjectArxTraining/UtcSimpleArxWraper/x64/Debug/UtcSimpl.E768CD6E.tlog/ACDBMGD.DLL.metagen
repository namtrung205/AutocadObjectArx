  Autodesk.AutoCAD.DatabaseServices.Entity.resources - Embedded, ContainedInManifestFile, 
ImageRuntimeVersion: v4.0.30319
Assembly Acdbmgd, Version=24.0.*, Culture=Invariant Language (Invariant Country): 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Assembly System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly PresentationCore, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35: 
	hash=None, flags=None
Assembly WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35: 
	hash=None, flags=None
Assembly PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35: 
	hash=None, flags=None
Assembly Microsoft.VisualBasic, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Class Autodesk.AutoCAD.DatabaseServices.MultiModesGripPE: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetGripModes(Entity, GripData, GripModeCollection, UInt32&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CurrentModeId(Entity, GripData): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CurrentMode(Entity, GripData): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetCurrentMode(Entity, GripData, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetGripType(Entity, GripData): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(Entity): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocDependencyBody
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsRelevantChangeOverride 'get ' : 
    Int32 GetCurrentlyUsedEntityNameFormat 'get ' : 
    Boolean IsReferenceOnly 'set' : 
    Double GetMeasuredValue 'get ' : 
    Boolean IsConstraintActive 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[] SubentityConstrainedGeoms 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ConstrainedGeometry[] ConstrainedGeoms 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Variable 'get ' : 
    Boolean IsEntityAttachmentChangedOverride 'get ' : 
    Double EntityMeasurementOverride 'get ' : 
    System.String EntityTextOverride 'get set' : 
  Methods:
    get_EntityTextOverride(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_EntityTextOverride(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_EntityMeasurementOverride(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsEntityAttachmentChangedOverride(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    UpdateDependentOnObjectOverride(): PrivateScope, Public, Virtual, HideBySig
    Constraint(): PrivateScope, Public, HideBySig
    get_Variable(): PrivateScope, Public, HideBySig, SpecialName
    get_ConstrainedGeoms(): PrivateScope, Public, HideBySig, SpecialName
    get_SubentityConstrainedGeoms(): PrivateScope, Public, HideBySig, SpecialName
    GetSubentityGeoms(Vector3d): PrivateScope, Public, HideBySig
    GetVariableNameAndExpression(String&, String&, String): PrivateScope, Public, HideBySig
    GetEntityNameAndExpression(String&, String&): PrivateScope, Public, HideBySig
    SetVariableNameAndExpression(String, String): PrivateScope, Public, HideBySig
    SetEntityNameAndExpression(String, String, String): PrivateScope, Public, HideBySig
    SetNameAndExpression(String, String): PrivateScope, Public, HideBySig
    ValidateEntityText(String): PrivateScope, Public, HideBySig
    ComposeEntityText(Int32): PrivateScope, Public, HideBySig
    SetVariableValueToMeasuredValue(): PrivateScope, Public, HideBySig
    DeactivateConstraint(): PrivateScope, Public, HideBySig
    ReactivateConstraint(): PrivateScope, Public, HideBySig
    get_IsConstraintActive(): PrivateScope, Public, HideBySig, SpecialName
    get_GetMeasuredValue(): PrivateScope, Public, HideBySig, SpecialName
    set_IsReferenceOnly(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    GetNameAndExpressionFromEntityText(String, Boolean(HasFieldMarshal), Double, Boolean(HasFieldMarshal), String&, String&): PrivateScope, Public, Static, HideBySig
    get_GetCurrentlyUsedEntityNameFormat(): PrivateScope, Public, HideBySig, SpecialName
    DragStatus(DragStatus): PrivateScope, Public, HideBySig
    GetFromEntity(ObjectId): PrivateScope, Public, Static, HideBySig
    EntityAttachmentPointMoved(SubentityGeometry[], Double): PrivateScope, Public, HideBySig
    get_IsRelevantChangeOverride(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    EvaluateOverride(): PrivateScope, Public, Virtual, HideBySig
    ModifiedOverride(DBObject): PrivateScope, Public, Virtual, HideBySig
    ErasedOverride(DBObject, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig
    SubErase(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DwgInFields(DwgFiler): PrivateScope, Public, Virtual, HideBySig
    DwgOutFields(DwgFiler): PrivateScope, Public, Virtual, HideBySig
    DxfInFields(DxfFiler): PrivateScope, Public, Virtual, HideBySig
    DxfOutFields(DxfFiler): PrivateScope, Public, Virtual, HideBySig
    FormatToCurrentPrecision(String, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    SetEraseDimensionIfDependencyIsErased(Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    GetEraseDimensionIfDependencyIsErased(): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AssocValueProviderPE: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CanGetValue(DBObject, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CanSetValue(DBObject, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetValue(DBObject, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetValue(DBObject, String, ResultBuffer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.AssocDependencyBody: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsRelevantChangeOverride 'get ' : 
    Boolean HasCachedValueOverride 'get ' : 
    Boolean IsActionEvaluationInProgress 'get ' : 
    Boolean IsAttachedToObject 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId DependentOnObject 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId OwningAction 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.AssocStatus Status 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ParentDependency 'get ' : 
  Methods:
    get_ParentDependency(): PrivateScope, Public, HideBySig, SpecialName
    get_Status(): PrivateScope, Public, HideBySig, SpecialName
    SetStatus(AssocStatus, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_OwningAction(): PrivateScope, Public, HideBySig, SpecialName
    get_DependentOnObject(): PrivateScope, Public, HideBySig, SpecialName
    get_IsAttachedToObject(): PrivateScope, Public, HideBySig, SpecialName
    get_IsActionEvaluationInProgress(): PrivateScope, Public, HideBySig, SpecialName
    currentEvaluationCallback(): PrivateScope, Public, HideBySig
    DwgInFields(DwgFiler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DwgOutFields(DwgFiler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DxfInFields(DxfFiler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DxfOutFields(DxfFiler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EvaluateOverride(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UpdateDependentOnObjectOverride(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_HasCachedValueOverride(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsRelevantChangeOverride(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsDependentOnTheSameThingAsOverride(AssocDependency): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsEqualToOverride(AssocDependency): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ErasedOverride(DBObject, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ModifiedOverride(DBObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClonedOverride(DBObject, DBObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.AssocActionBody: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection OwnedParams 'get ' : 
    Int32 ParamCount 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId OwningNetwork 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.AssocStatus Status 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ParentAction 'get ' : 
  Methods:
    get_ParentAction(): PrivateScope, Public, HideBySig, SpecialName
    GetParentAction(ObjectId): PrivateScope, Public, Static, HideBySig
    get_Status(): PrivateScope, Public, HideBySig, SpecialName
    set_Status(AssocStatus): PrivateScope, Public, HideBySig, SpecialName
    SetStatus(AssocStatus, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_OwningNetwork(): PrivateScope, Public, HideBySig, SpecialName
    GetDependencies(Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    AddDependency(ObjectId, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    RemoveDependency(ObjectId, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    RemoveAllDependencies(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    EvaluateDependencies(): PrivateScope, Public, HideBySig
    IsActionEvaluationInProgress(): PrivateScope, Public, HideBySig
    currentEvaluationCallback(): PrivateScope, Public, HideBySig
    HasAnyErasedOrBrokenDependencies(): PrivateScope, Public, HideBySig
    CreateActionAndActionBodyAndPostToDatabase(RXClass, ObjectId, ObjectId, ObjectId): PrivateScope, Public, Static, HideBySig
    GetActionBodiesOnObject(DBObject, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), ObjectId&(Out), ObjectIdCollection&(Out), ObjectIdCollection&(Out)): PrivateScope, Public, Static, HideBySig
    DwgInFields(DwgFiler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DwgOutFields(DwgFiler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DxfInFields(DxfFiler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DxfOutFields(DxfFiler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EvaluateOverride(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetDependenciesOverride(Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetDependentObjectsOverride(Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    RemoveAllDependenciesOverride(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsOwnedDependencyOverride(AssocDependency): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsExternalDependencyOverride(AssocDependency): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasDependencyCachedValueOverride(AssocDependency): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsRelevantDependencyChangeOverride(AssocDependency): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AreDependenciesOnTheSameThingOverride(AssocDependency, AssocDependency): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AreDependenciesEqualOverride(AssocDependency, AssocDependency): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EvaluateDependencyOverride(AssocDependency): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DependentObjectClonedOverride(AssocDependency, DBObject, DBObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddMoreObjectsToDeepCloneOverride(IdMapping, ObjectIdCollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PostProcessAfterDeepCloneOverride(IdMapping): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PostProcessAfterDeepCloneCancelOverride(IdMapping): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OwnedDependencyStatusChangedOverride(AssocDependency, AssocStatus): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsEqualToOverride(AssocAction): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EvaluationPriorityOverride(AssocEvaluationPriority&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDependentActionsToEvaluateOverride(ActionsToEvaluateCallback): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TransformActionByOverride(Matrix3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DragStatusOverride(DragStatus): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveAllParams(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_ParamCount(): PrivateScope, Public, HideBySig, SpecialName
    get_OwnedParams(): PrivateScope, Public, HideBySig, SpecialName
    AddParam(ObjectId, Int32&): PrivateScope, Public, HideBySig
    RemoveParam(ObjectId, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ParamsAtName(String): PrivateScope, Public, HideBySig
    ParamAtName(String, Int32): PrivateScope, Public, HideBySig
    ParamAtName(String): PrivateScope, Public, HideBySig
    ParamAtIndex(Int32): PrivateScope, Public, HideBySig
    OwnedValueParamNames(): PrivateScope, Public, HideBySig
    GetValueParam(String, Int32): PrivateScope, Public, HideBySig
    GetValueParam(String): PrivateScope, Public, HideBySig
    GetValueParamArray(String): PrivateScope, Public, HideBySig
    SetValueParam(String, ValueParam, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetValueParam(String, ValueParam, Boolean(HasFieldMarshal), Int32): PrivateScope, Public, HideBySig
    SetValueParamArray(String, ValueParam[], Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetValueParamUnitType(String): PrivateScope, Public, HideBySig
    SetValueParamUnitType(String, UnitType): PrivateScope, Public, HideBySig
    RemoveValueParam(String): PrivateScope, Public, HideBySig
    ValueParamInputVariables(String): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AssocDependencyPE: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AllowsDependencies(DBObject, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityIdPE: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateNewPersSubent(Entity, CompoundObjectId, SubentityId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTransientSubentityIds(Entity, AssocPersSubentityId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAllSubentities(Entity, SubentityType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEdgeVertexSubentities(Entity, SubentityId, SubentityId&, SubentityId&, SubentityId[]&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSplineEdgeVertexSubentities(Entity, SubentityId, SubentityId&, SubentityId&, SubentityId[]&, SubentityId[]&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetVertexSubentityGeometry(Entity, SubentityId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEdgeSubentityGeometry(Entity, SubentityId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFaceSubentityGeometry(Entity, SubentityId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetVertexSubentityGeometry(Entity, SubentityId, Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetEdgeSubentityGeometry(Entity, SubentityId, Curve3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetFaceSubentityGeometry(Entity, SubentityId, Surface): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSubentGeometryXform(Entity, ObjectId[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MirrorPersSubent(Entity, AssocPersSubentityId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRigidSetState(Entity): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRigidSetTransform(Entity): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetRigidSetTransform(Entity, Matrix3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityId: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsNull 'get ' : 
  Methods:
    GetTransientSubentIds(Entity): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SubentType(Entity): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    TransientSubentCount(Entity): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsNull(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    IsEqualTo(Entity, AssocPersSubentityId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Mirror(Entity): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateObjectAndDwgInFields(Database, DwgFiler, AssocPersSubentityId&): PrivateScope, Public, Static, HideBySig
    CreateObjectAndDxfInFields(DxfFiler, AssocPersSubentityId&): PrivateScope, Public, Static, HideBySig
    DwgOutFields(DwgFiler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DwgInFields(DwgFiler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DxfOutFields(DxfFiler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DxfInFields(DxfFiler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Audit(AuditInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.GraphicsInterface.GdiDrawObject: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Properties:
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
  Methods:
    Draw(IntPtr, Rectangle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Width(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.DimensionStyleOverrule: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.Overrule
  Methods:
    DimensionStyle(Dimension): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetDimensionStyle(Dimension, ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetDimstyleData(Dimension, ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetDimstyleData(Dimension, DimStyleTableRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDimstyleData(Dimension, DimStyleTableRecord): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetXDataFilter(String): PrivateScope, Public, Final, Virtual, HideBySig
    SetExtensionDictionaryEntryFilter(String): PrivateScope, Public, Final, Virtual, HideBySig
    SetCustomFilter(): PrivateScope, Public, Final, Virtual, HideBySig
    SetIdFilter(ObjectId[]): PrivateScope, Public, Final, Virtual, HideBySig
    SetNoFilter(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.ObjectOverrule: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.Overrule
  Methods:
    Open(DBObject, OpenMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Close(DBObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Cancel(DBObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Erase(DBObject, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeepClone(DBObject, DBObject, IdMapping, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WblockClone(DBObject, RXObject, IdMapping, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetXDataFilter(String): PrivateScope, Public, Final, Virtual, HideBySig
    SetExtensionDictionaryEntryFilter(String): PrivateScope, Public, Final, Virtual, HideBySig
    SetCustomFilter(): PrivateScope, Public, Final, Virtual, HideBySig
    SetIdFilter(ObjectId[]): PrivateScope, Public, Final, Virtual, HideBySig
    SetNoFilter(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.GeometryOverrule: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.Overrule
  Methods:
    IntersectWith(Entity, Entity, Intersect, Plane, Point3dCollection, IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IntersectWith(Entity, Entity, Intersect, Point3dCollection, IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetGeomExtents(Entity): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetXDataFilter(String): PrivateScope, Public, Final, Virtual, HideBySig
    SetExtensionDictionaryEntryFilter(String): PrivateScope, Public, Final, Virtual, HideBySig
    SetCustomFilter(): PrivateScope, Public, Final, Virtual, HideBySig
    SetIdFilter(ObjectId[]): PrivateScope, Public, Final, Virtual, HideBySig
    SetNoFilter(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.VisibilityOverrule: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.Overrule
  Methods:
    Visibility(Entity): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetVisibility(Entity, Visibility, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetXDataFilter(String): PrivateScope, Public, Final, Virtual, HideBySig
    SetExtensionDictionaryEntryFilter(String): PrivateScope, Public, Final, Virtual, HideBySig
    SetCustomFilter(): PrivateScope, Public, Final, Virtual, HideBySig
    SetIdFilter(ObjectId[]): PrivateScope, Public, Final, Virtual, HideBySig
    SetNoFilter(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.HighlightStateOverrule: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.Overrule
  Methods:
    PushHighlight(Entity, FullSubentityPath, HighlightStyle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PopHighlight(Entity, FullSubentityPath): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HighlightState(Entity, FullSubentityPath): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetXDataFilter(String): PrivateScope, Public, Final, Virtual, HideBySig
    SetExtensionDictionaryEntryFilter(String): PrivateScope, Public, Final, Virtual, HideBySig
    SetCustomFilter(): PrivateScope, Public, Final, Virtual, HideBySig
    SetIdFilter(ObjectId[]): PrivateScope, Public, Final, Virtual, HideBySig
    SetNoFilter(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.HighlightOverrule: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.Overrule
  Methods:
    Highlight(Entity, FullSubentityPath, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Unhighlight(Entity, FullSubentityPath, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetXDataFilter(String): PrivateScope, Public, Final, Virtual, HideBySig
    SetExtensionDictionaryEntryFilter(String): PrivateScope, Public, Final, Virtual, HideBySig
    SetCustomFilter(): PrivateScope, Public, Final, Virtual, HideBySig
    SetIdFilter(ObjectId[]): PrivateScope, Public, Final, Virtual, HideBySig
    SetNoFilter(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.SubentityOverrule: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.Overrule
  Methods:
    AddSubentPaths(Entity, FullSubentityPath[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeleteSubentPaths(Entity, FullSubentityPath[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TransformSubentPathsBy(Entity, FullSubentityPath[], Matrix3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetGripPointsAtSubentPath(Entity, FullSubentityPath, GripDataCollection, Double, Int32, Vector3d, GetGripPointsFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MoveGripPointsAtSubentPaths(Entity, FullSubentityPath[], GripDataCollection, Vector3d, MoveGripPointsFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSubentPathsAtGsMarker(Entity, SubentityType, IntPtr, Point3d, Matrix3d, ObjectId[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetGsMarkersAtSubentPath(Entity, FullSubentityPath): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SubentPtr(Entity, FullSubentityPath): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnSubentGripStatusChanged(Entity, GripStatus, FullSubentityPath): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCompoundObjectTransform(Entity): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSubentPathGeomExtents(Entity, FullSubentityPath): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSubentClassId(Entity, FullSubentityPath): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetXDataFilter(String): PrivateScope, Public, Final, Virtual, HideBySig
    SetExtensionDictionaryEntryFilter(String): PrivateScope, Public, Final, Virtual, HideBySig
    SetCustomFilter(): PrivateScope, Public, Final, Virtual, HideBySig
    SetIdFilter(ObjectId[]): PrivateScope, Public, Final, Virtual, HideBySig
    SetNoFilter(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.GripOverrule: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.Overrule
  Methods:
    GetGripPoints(Entity, GripDataCollection, Double, Int32, Vector3d, GetGripPointsFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetGripPoints(Entity, Point3dCollection, IntegerCollection, IntegerCollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MoveGripPointsAt(Entity, GripDataCollection, Vector3d, MoveGripPointsFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MoveGripPointsAt(Entity, IntegerCollection, Vector3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetStretchPoints(Entity, Point3dCollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MoveStretchPointsAt(Entity, IntegerCollection, Vector3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnGripStatusChanged(Entity, GripStatus): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetXDataFilter(String): PrivateScope, Public, Final, Virtual, HideBySig
    SetExtensionDictionaryEntryFilter(String): PrivateScope, Public, Final, Virtual, HideBySig
    SetCustomFilter(): PrivateScope, Public, Final, Virtual, HideBySig
    SetIdFilter(ObjectId[]): PrivateScope, Public, Final, Virtual, HideBySig
    SetNoFilter(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.TransformOverrule: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.Overrule
  Methods:
    TransformBy(Entity, Matrix3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTransformedCopy(Entity, Matrix3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Explode(Entity, DBObjectCollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CloneMeForDragging(Entity): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HideMeForDragging(Entity): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetXDataFilter(String): PrivateScope, Public, Final, Virtual, HideBySig
    SetExtensionDictionaryEntryFilter(String): PrivateScope, Public, Final, Virtual, HideBySig
    SetCustomFilter(): PrivateScope, Public, Final, Virtual, HideBySig
    SetIdFilter(ObjectId[]): PrivateScope, Public, Final, Virtual, HideBySig
    SetNoFilter(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.OsnapOverrule: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.Overrule
  Methods:
    GetObjectSnapPoints(Entity, ObjectSnapModes, IntPtr, Point3d, Point3d, Matrix3d, Point3dCollection, IntegerCollection, Matrix3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetObjectSnapPoints(Entity, ObjectSnapModes, IntPtr, Point3d, Point3d, Matrix3d, Point3dCollection, IntegerCollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsContentSnappable(Entity): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetXDataFilter(String): PrivateScope, Public, Final, Virtual, HideBySig
    SetExtensionDictionaryEntryFilter(String): PrivateScope, Public, Final, Virtual, HideBySig
    SetCustomFilter(): PrivateScope, Public, Final, Virtual, HideBySig
    SetIdFilter(ObjectId[]): PrivateScope, Public, Final, Virtual, HideBySig
    SetNoFilter(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.PropertiesOverrule: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.Overrule
  Methods:
    List(Entity): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetClassID(DBObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetXDataFilter(String): PrivateScope, Public, Final, Virtual, HideBySig
    SetExtensionDictionaryEntryFilter(String): PrivateScope, Public, Final, Virtual, HideBySig
    SetCustomFilter(): PrivateScope, Public, Final, Virtual, HideBySig
    SetIdFilter(ObjectId[]): PrivateScope, Public, Final, Virtual, HideBySig
    SetNoFilter(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.GraphicsInterface.DrawableOverrule: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.Overrule
  Methods:
    SetAttributes(Drawable, DrawableTraits): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WorldDraw(Drawable, WorldDraw): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ViewportDraw(Drawable, ViewportDraw): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ViewportDrawLogicalFlags(Drawable, ViewportDraw): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetXDataFilter(String): PrivateScope, Public, Final, Virtual, HideBySig
    SetExtensionDictionaryEntryFilter(String): PrivateScope, Public, Final, Virtual, HideBySig
    SetCustomFilter(): PrivateScope, Public, Final, Virtual, HideBySig
    SetIdFilter(ObjectId[]): PrivateScope, Public, Final, Virtual, HideBySig
    SetNoFilter(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.DataAdapterProvider: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Methods:
    GetDataAdapter(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Autodesk.AutoCAD.DatabaseServices.DataAdapter: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Properties:
    System.String Description 'get ' : 
    System.String Name 'get ' : 
    System.String DataAdapterId 'get ' : 
  Methods:
    get_DataAdapterId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Description(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    IsValid(DataLink): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateDataObject(DataLink): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Update(DataLink, LinkedData, UpdateDirection, UpdateOption): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSourceFiles(DataLink, DataLinkGetSourceContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RepathSourceFiles(DataLink, String, PathOption): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SourceFileModified(DataLink, String, UpdateAction&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Autodesk.AutoCAD.GraphicsInterface.Glyph: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.Drawable
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId Id 'get ' : 
    Boolean IsPersistent 'get ' : 
  Methods:
    get_IsPersistent(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Id(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    SetLocation(Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Autodesk.AutoCAD.GraphicsInterface.ContextualColors: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Properties:
    Autodesk.AutoCAD.Colors.Color LightDistanceColor 'get ' : 
    Autodesk.AutoCAD.Colors.Color LightShapeColor 'get ' : 
    Autodesk.AutoCAD.Colors.Color WebMeshMissingColor 'get ' : 
    Autodesk.AutoCAD.Colors.Color WebMeshColor 'get ' : 
    Int32 CameraClipping 'get ' IsLong : 
    Int32 CameraFrustrum 'get ' IsLong : 
    Int32 CameraGlyphs 'get ' IsLong : 
    Int32 LightEndLimit 'get ' IsLong : 
    Int32 LightStartLimit 'get ' IsLong : 
    Int32 LightFalloff 'get ' IsLong : 
    Int32 LightHotspot 'get ' IsLong : 
    Int32 LightGlyphs 'get ' IsLong : 
    Int32 GridAxisLineTintXYZ 'get ' : 
    Int32 GridMinorLineTintXYZ 'get ' : 
    Int32 GridMajorLineTintXYZ 'get ' : 
    Int32 GridAxisLines 'get ' IsLong : 
    Int32 GridMinorLines 'get ' IsLong : 
    Int32 GridMajorLines 'get ' IsLong : 
  Methods:
    get_GridMajorLines(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_GridMinorLines(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_GridAxisLines(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_GridMajorLineTintXYZ(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_GridMinorLineTintXYZ(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_GridAxisLineTintXYZ(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LightGlyphs(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LightHotspot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LightFalloff(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LightStartLimit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LightEndLimit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CameraGlyphs(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CameraFrustrum(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CameraClipping(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    SetContextFlags(Int32 IsLong, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FlagsSet(Int32 IsLong): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_WebMeshColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_WebMeshMissingColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LightShapeColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LightDistanceColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.Viewport: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Properties:
    Autodesk.AutoCAD.Geometry.Vector3d ViewDirection 'get ' : 
    Double LinetypeGenerationCriteria 'get ' : 
    Double LinetypeScaleMultiplier 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.FrontAndBackClipping FrontAndBackClipping 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Extents2d DeviceContextViewportCorners 'get ' : 
    Int32 AcadWindowId 'get ' : 
    IntPtr ViewportId 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d CameraUpVector 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d CameraTarget 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d CameraLocation 'get ' : 
    Boolean IsPerspective 'get ' : 
    Autodesk.AutoCAD.Geometry.Matrix3d EyeToWorldTransform 'get ' : 
    Autodesk.AutoCAD.Geometry.Matrix3d WorldToEyeTransform 'get ' : 
    Autodesk.AutoCAD.Geometry.Matrix3d EyeToModelTransform 'get ' : 
    Autodesk.AutoCAD.Geometry.Matrix3d ModelToEyeTransform 'get ' : 
  Methods:
    get_ModelToEyeTransform(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_EyeToModelTransform(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_WorldToEyeTransform(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_EyeToWorldTransform(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsPerspective(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    DoPerspective(Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DoInversePerspective(Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetNumPixelsInUnitSquare(Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_CameraLocation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CameraTarget(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CameraUpVector(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ViewportId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_AcadWindowId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DeviceContextViewportCorners(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_FrontAndBackClipping(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LinetypeScaleMultiplier(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LinetypeGenerationCriteria(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    LayerVisible(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_ViewDirection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.ViewportGeometry: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.Geometry
  Methods:
    PolylineEye(Point3dCollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    PolygonEye(Point3dCollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeviceContextPolyline(Point3dCollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeviceContextPolygon(Point3dCollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DeviceContextRasterImage(Point3d, Vector3d, Vector3d, Matrix2d, ObjectId, ImageOrg, Int32, Int32, Int16, Boolean(HasFieldMarshal), ImageSource, Vector3d, ImageOrg, Matrix2d, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Autodesk.AutoCAD.GraphicsInterface.WorldGeometry: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.Geometry
  Methods:
    SetExtents(Extents3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    StartAttributesSegment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Autodesk.AutoCAD.GraphicsInterface.ViewportDraw: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.CommonDraw
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId ViewportObjectId 'get ' : 
    Int32 SequenceNumber 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.ViewportGeometry Geometry 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.Viewport Viewport 'get ' : 
  Methods:
    get_Viewport(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Geometry(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SequenceNumber(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    IsValidId(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_ViewportObjectId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.DrawableTraits: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.SubEntityTraits
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.SelectionFlags SelectionFlags 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.Linetype LinePattern 'get set' : 
  Methods:
    SetupForEntity(Entity): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddLight(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_LinePattern(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LinePattern(Linetype): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SelectionFlags(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_SelectionFlags(SelectionFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    SetHighlightProperty(HighlightProperty, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetHighlightProperty(HighlightProperty): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Autodesk.AutoCAD.GraphicsInterface.SubEntityTraits: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.Fill Fill 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId LineType 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Layer 'get set' : 
    Autodesk.AutoCAD.Colors.Transparency Transparency 'get set' : 
    Autodesk.AutoCAD.Colors.EntityColor TrueColor 'get set' : 
    Int16 Color 'get set' : 
    Boolean SelectionOnlyGeometry 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.ShadowFlags ShadowFlags 'get set' : 
    Int32 DrawFlags 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId VisualStyle 'get set' : 
    Boolean Sectionable 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.Mapper Mapper 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Material 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.PlotStyleDescriptor PlotStyleDescriptor 'get set' : 
    Double Thickness 'get set' : 
    Double LineTypeScale 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.FillType FillType 'get set' : 
  Methods:
    SetSelectionMarker(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_FillType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_FillType(FillType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LineWeight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LineWeight(LineWeight): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LineTypeScale(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LineTypeScale(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Thickness(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Thickness(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_PlotStyleDescriptor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_PlotStyleDescriptor(PlotStyleDescriptor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Material(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Material(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Mapper(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Mapper(Mapper): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Sectionable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Sectionable(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_VisualStyle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_VisualStyle(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DrawFlags(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_DrawFlags(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ShadowFlags(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ShadowFlags(ShadowFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SelectionOnlyGeometry(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_SelectionOnlyGeometry(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Color(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Color(Int16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_TrueColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_TrueColor(EntityColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Transparency(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Transparency(Transparency): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Layer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Layer(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LineType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LineType(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Fill(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Fill(Fill): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.WorldDraw: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.CommonDraw
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.WorldGeometry Geometry 'get ' : 
  Methods:
    get_Geometry(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.DwgFiler: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Properties:
    Int64 Position 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion ExtendedMinorVersion 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.FullDwgVersion DwgVersion 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.FilerType FilerType 'get ' : 
    Autodesk.AutoCAD.Runtime.ErrorStatus FilerStatus 'get set' : 
  Methods:
    get_FilerStatus(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_FilerStatus(ErrorStatus): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_FilerType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    ResetFilerStatus(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_DwgVersion(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ExtendedMinorVersion(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ReadHardOwnershipId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteHardOwnershipId(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadSoftOwnershipId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteSoftOwnershipId(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadHardPointerId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteHardPointerId(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadSoftPointerId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteSoftPointerId(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteString(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadHandle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteHandle(Handle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadInt64(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteInt64(Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadInt32(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteInt32(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadInt16(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteInt16(Int16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadUInt64(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteUInt64(UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadUInt32(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteUInt32(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadUInt16(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteUInt16(UInt16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadByte(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadBoolean(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteBoolean(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadDouble(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteDouble(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadPoint2d(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WritePoint2d(Point2d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadPoint3d(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WritePoint3d(Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadVector2d(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteVector2d(Vector2d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadVector3d(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteVector3d(Vector3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadScale3d(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteScale3d(Scale3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadBytes(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteBytes(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadBinaryChunk(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteBinaryChunk(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ReadAddress(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WriteAddress(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Seek(Int64, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Position(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.ViewportTraits: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.DrawableTraits
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.ToneOperatorParameters ToneOperatorParameters 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId RenderSettings 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId RenderEnvironment 'get set' : 
    Double Contrast 'get set' : 
    Double Brightness 'get set' : 
    Autodesk.AutoCAD.Colors.Color AmbientLightColor 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.DefaultLightingType DefaultLightingType 'get set' : 
    Boolean DefaultLightingOn 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Background 'get set' : 
  Methods:
    get_Background(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Background(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DefaultLightingOn(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_DefaultLightingOn(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DefaultLightingType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_DefaultLightingType(DefaultLightingType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_AmbientLightColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_AmbientLightColor(Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Brightness(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Brightness(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Contrast(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Contrast(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_RenderEnvironment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_RenderEnvironment(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_RenderSettings(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_RenderSettings(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ToneOperatorParameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ToneOperatorParameters(ToneOperatorParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.WebLightTraits: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.PointLightTraits
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean WebHorzAng90to270 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.WebSymmetry WebSymmetry 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.WebFileType WebFileType 'get set' : 
    Double WebFlux 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d WebRotation 'get set' : 
    System.String WebFile 'get set' : 
  Methods:
    get_WebFile(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_WebFile(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_WebRotation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_WebRotation(Vector3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_WebFlux(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_WebFlux(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_WebFileType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_WebFileType(WebFileType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_WebSymmetry(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_WebSymmetry(WebSymmetry): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_WebHorzAng90to270(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_WebHorzAng90to270(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.SpotLightTraits: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.StandardLightTraits
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.ColorRGB LampColor 'get set' : 
    Double PhysicalIntensity 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.LightAttenuation Attenuation 'get set' : 
    Double Falloff 'get ' : 
    Double Hotspot 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d TargetLocation 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Position 'get set' : 
  Methods:
    get_Position(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Position(Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_TargetLocation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_TargetLocation(Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    SetHotspotAndFalloff(Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Hotspot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Falloff(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Attenuation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Attenuation(LightAttenuation): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_PhysicalIntensity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_PhysicalIntensity(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LampColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LampColor(ColorRGB): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.PointLightTraits: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.StandardLightTraits
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean HasTarget 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d TargetLocation 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.ColorRGB LampColor 'get set' : 
    Double PhysicalIntensity 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.LightAttenuation Attenuation 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Position 'get set' : 
  Methods:
    get_Position(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Position(Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Attenuation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Attenuation(LightAttenuation): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_PhysicalIntensity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_PhysicalIntensity(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LampColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LampColor(ColorRGB): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_TargetLocation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_TargetLocation(Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_HasTarget(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_HasTarget(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.DistantLightTraits: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.StandardLightTraits
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.SkyParameters SkyParameters 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.ColorRGB LampColor 'get set' : 
    Double PhysicalIntensity 'get set' : 
    Boolean IsSunlight 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d LightDirection 'get set' : 
  Methods:
    get_LightDirection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LightDirection(Vector3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsSunlight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_IsSunlight(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_PhysicalIntensity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_PhysicalIntensity(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LampColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LampColor(ColorRGB): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SkyParameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_SkyParameters(SkyParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.StandardLightTraits: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.LightTraits
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.ShadowParameters Shadow 'get set' : 
    Autodesk.AutoCAD.Colors.Color LightColor 'get set' : 
    Double Intensity 'get set' : 
  Methods:
    get_Intensity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Intensity(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LightColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LightColor(Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Shadow(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Shadow(ShadowParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.LightTraits: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean On 'get set' : 
  Methods:
    get_On(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_On(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.SolidBackgroundTraits: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits
  Properties:
    Autodesk.AutoCAD.Colors.EntityColor ColorSolid 'get set' : 
  Methods:
    get_ColorSolid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ColorSolid(EntityColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.IBLBackgroundTraits: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId SecondaryBackground 'get set' : 
    Boolean DisplayImage 'get set' : 
    Double Rotation 'get set' : 
    System.String IBLImageName 'get set' : 
    Boolean Enable 'get set' : 
  Methods:
    get_Enable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Enable(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IBLImageName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_IBLImageName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Rotation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Rotation(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DisplayImage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_DisplayImage(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_SecondaryBackground(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SecondaryBackground(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.RenderEnvironmentTraits: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.MaterialTexture EnvironmentMap 'get set' : 
    Double FarPercentage 'get set' : 
    Double NearPercentage 'get set' : 
    Double FarDistance 'get set' : 
    Double NearDistance 'get set' : 
    Autodesk.AutoCAD.Colors.EntityColor FogColor 'get set' : 
    Boolean IsBackground 'get set' : 
    Boolean Enable 'get set' : 
  Methods:
    get_Enable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Enable(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsBackground(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_IsBackground(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_FogColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_FogColor(EntityColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_NearDistance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_NearDistance(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_FarDistance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_FarDistance(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_NearPercentage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_NearPercentage(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_FarPercentage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_FarPercentage(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_EnvironmentMap(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_EnvironmentMap(MaterialTexture): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.RapidRTRenderSettingsTraits: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits
  Properties:
    Single FilterHeight 'get set' : 
    Single FilterWidth 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.RapidRTFilterType FilterType 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.RapidRTLightingMode LightingMode 'get set' : 
    Int32 RenderLevel 'get set' : 
    Int32 RenderTime 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.RapidRTQuitCondition QuitCondition 'get set' : 
  Methods:
    get_QuitCondition(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_QuitCondition(RapidRTQuitCondition): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_RenderTime(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_RenderTime(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_RenderLevel(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_RenderLevel(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LightingMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LightingMode(RapidRTLightingMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_FilterType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_FilterType(RapidRTFilterType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_FilterWidth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_FilterWidth(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_FilterHeight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_FilterHeight(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.RenderSettingsTraits: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits
  Properties:
    Double ModelScaleFactor 'get set' : 
    Boolean DiagnosticBackgroundEnabled 'get set' : 
    Boolean ShadowsEnabled 'get set' : 
    Boolean BackFacesEnabled 'get set' : 
    Boolean TextureSampling 'get set' : 
    Boolean MaterialEnabled 'get set' : 
  Methods:
    get_MaterialEnabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_MaterialEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_TextureSampling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_TextureSampling(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_BackFacesEnabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_BackFacesEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ShadowsEnabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ShadowsEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DiagnosticBackgroundEnabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_DiagnosticBackgroundEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ModelScaleFactor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ModelScaleFactor(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.MaterialTraits: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.FinalGatherMode FinalGather 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.GlobalIlluminationMode GlobalIllumination 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialNormalMapComponent NormalMap 'get set' : 
    Double Luminance 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.LuminanceMode LuminanceMode 'get set' : 
    Boolean TwoSided 'get set' : 
    Double TransmittanceScale 'get set' : 
    Double ReflectanceScale 'get set' : 
    Double IndirectBumpScale 'get set' : 
    Double ColorBleedScale 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialOpacityComponent Opacity 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialRefractionComponent Refraction 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialSpecularComponent Specular 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialDiffuseComponent Diffuse 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.Mode Mode 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.ChannelFlags ChannelFlags 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.IlluminationModel IlluminationModel 'get set' : 
    Double Reflectivity 'get set' : 
    Double SelfIllumination 'get set' : 
    Double Translucence 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialMap Bump 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialMap Reflection 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialColor Ambient 'get set' : 
  Methods:
    get_Ambient(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Ambient(MaterialColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Reflection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Reflection(MaterialMap): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Bump(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Bump(MaterialMap): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Translucence(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Translucence(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SelfIllumination(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_SelfIllumination(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Reflectivity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Reflectivity(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IlluminationModel(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_IlluminationModel(IlluminationModel): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ChannelFlags(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ChannelFlags(ChannelFlags): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Mode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Mode(Mode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Diffuse(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Diffuse(MaterialDiffuseComponent): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Specular(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Specular(MaterialSpecularComponent): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Refraction(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Refraction(MaterialRefractionComponent): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Opacity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Opacity(MaterialOpacityComponent): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ColorBleedScale(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ColorBleedScale(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IndirectBumpScale(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_IndirectBumpScale(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ReflectanceScale(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ReflectanceScale(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_TransmittanceScale(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_TransmittanceScale(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_TwoSided(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_TwoSided(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LuminanceMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_LuminanceMode(LuminanceMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Luminance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Luminance(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_NormalMap(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_NormalMap(MaterialNormalMapComponent): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_GlobalIllumination(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_GlobalIllumination(GlobalIlluminationMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_FinalGather(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_FinalGather(FinalGatherMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.SkyBackgroundTraits: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.SkyParameters SkyParameters 'get set' : 
  Methods:
    get_SkyParameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_SkyParameters(SkyParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.ImageBackgroundTraits: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits
  Properties:
    Double YScale 'get set' : 
    Double XScale 'get set' : 
    Double YOffset 'get set' : 
    Double XOffset 'get set' : 
    Boolean UseTiling 'get set' : 
    Boolean MaintainAspectRatio 'get set' : 
    Boolean FitToScreen 'get set' : 
    System.String ImageFilename 'get set' : 
  Methods:
    get_ImageFilename(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ImageFilename(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_FitToScreen(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_FitToScreen(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_MaintainAspectRatio(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_MaintainAspectRatio(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_UseTiling(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_UseTiling(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_XOffset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_XOffset(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_YOffset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_YOffset(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_XScale(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_XScale(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_YScale(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_YScale(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.GroundPlaneBackgroundTraits: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits
  Properties:
    Autodesk.AutoCAD.Colors.EntityColor ColorGroundPlaneFar 'get set' : 
    Autodesk.AutoCAD.Colors.EntityColor ColorGroundPlaneNear 'get set' : 
    Autodesk.AutoCAD.Colors.EntityColor ColorUndergroundAzimuth 'get set' : 
    Autodesk.AutoCAD.Colors.EntityColor ColorUndergroundHorizon 'get set' : 
    Autodesk.AutoCAD.Colors.EntityColor ColorSkyHorizon 'get set' : 
    Autodesk.AutoCAD.Colors.EntityColor ColorSkyZenith 'get set' : 
  Methods:
    get_ColorSkyZenith(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ColorSkyZenith(EntityColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ColorSkyHorizon(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ColorSkyHorizon(EntityColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ColorUndergroundHorizon(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ColorUndergroundHorizon(EntityColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ColorUndergroundAzimuth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ColorUndergroundAzimuth(EntityColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ColorGroundPlaneNear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ColorGroundPlaneNear(EntityColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ColorGroundPlaneFar(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ColorGroundPlaneFar(EntityColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.GradientBackgroundTraits: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits
  Properties:
    Double Rotation 'get set' : 
    Double Height 'get set' : 
    Double Horizon 'get set' : 
    Autodesk.AutoCAD.Colors.EntityColor ColorBottom 'get set' : 
    Autodesk.AutoCAD.Colors.EntityColor ColorMiddle 'get set' : 
    Autodesk.AutoCAD.Colors.EntityColor ColorTop 'get set' : 
  Methods:
    get_ColorTop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ColorTop(EntityColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ColorMiddle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ColorMiddle(EntityColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ColorBottom(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ColorBottom(EntityColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Horizon(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Horizon(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Height(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Rotation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Rotation(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.HostApplicationServices: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Properties:
    System.String ColorBookLocation 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ModelerFlavor ModelerFlavor 'get ' : 
    System.String FontMapFileName 'get ' : 
    System.String AlternateFontName 'get ' : 
    System.String AllUsersRootFolder 'get ' : 
    System.String LocalRootFolder 'get ' : 
    System.String RoamableRootFolder 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Database WorkingDatabase 'get set' : 
    System.String releaseMarketVersion 'get ' : 
    System.String UserRegistryProductRootKey 'get ' : 
    System.String MachineRegistryProductRootKey 'get ' : 
    System.String CompanyName 'get ' : 
    System.String Product 'get ' : 
    System.String Program 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.HostApplicationServices Current 'get set' : 
  Methods:
    get_Current(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_Current(HostApplicationServices): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Program(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Product(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CompanyName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MachineRegistryProductRootKey(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_UserRegistryProductRootKey(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_releaseMarketVersion(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    FindFile(String, Database, FindFileHint): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_WorkingDatabase(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_WorkingDatabase(Database): PrivateScope, Public, Static, HideBySig, SpecialName
    get_RoamableRootFolder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LocalRootFolder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AllUsersRootFolder(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AlternateFontName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FontMapFileName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ModelerFlavor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    LoadApplication(String, ApplicationLoadReasons, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsUrl(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetUrl(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRemoteFile(Uri, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PutRemoteFile(Uri, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPassword(String, PasswordOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEnvironmentVariable(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UserBreak(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_ColorBookLocation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    FatalError(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NotifyCorruptDrawingFoundOnOpen(ObjectId, ErrorStatus): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface Autodesk.AutoCAD.Runtime.IMenuItem: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Properties:
    System.Collections.Generic.IEnumerable`1[Autodesk.AutoCAD.Runtime.IMenuItem] Items 'get ' : 
    System.Drawing.Icon Icon 'get set' : 
    Boolean Checked 'get set' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
    System.String Text 'get set' : 
  Events:
    System.EventHandler Click: SpecialName
  Methods:
    get_Text(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Text(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Checked(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Checked(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Icon(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Icon(Icon): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    add_Click(EventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    remove_Click(EventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    OnClicked(EventArgs): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Items(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.PointCloudColorSchemeChangedEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(PointCloudColorMap): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(PointCloudColorMap, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.Geometry.Vector3dCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.Geometry.Vector3d[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.IEnumerable
  Fields:
    Int32 DefaultSize = 10 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Capacity 'get set' : 
    Int32 Count 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Item [Int32] 'get set' : 
    Boolean IsReadOnly 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsSynchronized 'get ' : 
    System.Object SyncRoot 'get ' : 
  Methods:
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Vector3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    RemoveAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Capacity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Capacity(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TrimToSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(Vector3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddRange(Vector3d[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IndexOf(Vector3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, Vector3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(Vector3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(Vector3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyTo(Vector3d[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Autodesk.AutoCAD.Geometry.Vector3d: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.Geometry.PlanarEntity, Autodesk.AutoCAD.Geometry.Vector2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IFormattable
  Properties:
    Int32 LargestElement 'get ' : 
    Double LengthSqrd 'get ' : 
    Double Length 'get ' : 
    Double Coordinate [Int32] 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d ZAxis 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d YAxis 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d XAxis 'get ' : 
    Double Z   'get ' : 
    Double Y   'get ' : 
    Double X   'get ' : 
  Methods:
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    get_Z(): PrivateScope, Public, HideBySig, SpecialName
    get_XAxis(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_YAxis(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ZAxis(): PrivateScope, Public, Static, HideBySig, SpecialName
    Convert2d(PlanarEntity): PrivateScope, Public, HideBySig
    AngleOnPlane(PlanarEntity): PrivateScope, Public, HideBySig
    TransformBy(Matrix3d): PrivateScope, Public, HideBySig
    RotateBy(Double, Vector3d): PrivateScope, Public, HideBySig
    Mirror(Vector3d): PrivateScope, Public, HideBySig
    MultiplyBy(Double): PrivateScope, Public, HideBySig
    Add(Vector3d): PrivateScope, Public, HideBySig
    Subtract(Vector3d): PrivateScope, Public, HideBySig
    DivideBy(Double): PrivateScope, Public, HideBySig
    get_Coordinate(Int32): PrivateScope, Public, HideBySig, SpecialName
    Negate(): PrivateScope, Public, HideBySig
    GetPerpendicularVector(): PrivateScope, Public, HideBySig
    GetAngleTo(Vector3d, Vector3d): PrivateScope, Public, HideBySig
    GetAngleTo(Vector3d): PrivateScope, Public, HideBySig
    GetNormal(): PrivateScope, Public, HideBySig
    GetNormal(Tolerance): PrivateScope, Public, HideBySig
    IsUnitLength(): PrivateScope, Public, HideBySig
    IsUnitLength(Tolerance): PrivateScope, Public, HideBySig
    IsZeroLength(): PrivateScope, Public, HideBySig
    IsZeroLength(Tolerance): PrivateScope, Public, HideBySig
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_LengthSqrd(): PrivateScope, Public, HideBySig, SpecialName
    IsParallelTo(Vector3d): PrivateScope, Public, HideBySig
    IsParallelTo(Vector3d, Tolerance): PrivateScope, Public, HideBySig
    IsCodirectionalTo(Vector3d): PrivateScope, Public, HideBySig
    IsCodirectionalTo(Vector3d, Tolerance): PrivateScope, Public, HideBySig
    IsPerpendicularTo(Vector3d): PrivateScope, Public, HideBySig
    IsPerpendicularTo(Vector3d, Tolerance): PrivateScope, Public, HideBySig
    DotProduct(Vector3d): PrivateScope, Public, HideBySig
    CrossProduct(Vector3d): PrivateScope, Public, HideBySig
    ProjectTo(Vector3d, Vector3d): PrivateScope, Public, HideBySig
    OrthoProjectTo(Vector3d): PrivateScope, Public, HideBySig
    IsEqualTo(Vector3d): PrivateScope, Public, HideBySig
    IsEqualTo(Vector3d, Tolerance): PrivateScope, Public, HideBySig
    get_LargestElement(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Inequality(Vector3d, Vector3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Vector3d, Vector3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Vector3d, Vector3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_UnaryNegation(Vector3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vector3d, Vector3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Matrix3d, Vector3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Double, Vector3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vector3d, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vector3d, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.DoubleCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Double[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.IEnumerable
  Fields:
    Int32 DefaultSize = 10 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Capacity 'get set' : 
    Int32 Count 'get ' : 
    Double Item [Int32] 'get set' : 
    Boolean IsReadOnly 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsSynchronized 'get ' : 
    System.Object SyncRoot 'get ' : 
  Methods:
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    RemoveAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Capacity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Capacity(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TrimToSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddRange(Double[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IndexOf(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyTo(Double[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.GraphicsInterface.HatchPatternDefinition: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(Double, Double, Double, Double, Double, Autodesk.AutoCAD.Geometry.DoubleCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.DoubleCollection DashList 'get ' : 
    Double OffsetY 'get ' : 
    Double OffsetX 'get ' : 
    Double BaseY 'get ' : 
    Double BaseX 'get ' : 
    Double Angle 'get ' : 
  Methods:
    get_Angle(): PrivateScope, Public, HideBySig, SpecialName
    get_BaseX(): PrivateScope, Public, HideBySig, SpecialName
    get_BaseY(): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    get_DashList(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.Colors.Color: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable
    System.ICloneable
  Properties:
    System.String DictionaryKey 'get ' : 
    Int32 DictionaryKeyLength 'get ' : 
    Autodesk.AutoCAD.Colors.EntityColor EntityColor 'get ' : 
    Boolean HasBookName 'get ' : 
    Boolean HasColorName 'get ' : 
    System.String ColorNameForDisplay 'get ' : 
    System.String BookName 'get ' : 
    System.String ColorName 'get ' : 
    Int16 PenIndex 'get ' : 
    Int16 ColorIndex 'get ' : 
    Byte Blue  'get ' : 
    Byte Green 'get ' : 
    Byte Red   'get ' : 
    Boolean IsNone 'get ' : 
    Boolean IsForeground 'get ' : 
    Boolean IsByPen 'get ' : 
    Boolean IsByAci 'get ' : 
    Boolean IsByBlock 'get ' : 
    Boolean IsByLayer 'get ' : 
    Boolean IsByColor 'get ' : 
    System.String Explanation 'get ' : 
    System.String Description 'get ' : 
    Autodesk.AutoCAD.Colors.ColorMethod ColorMethod 'get ' : 
    System.Drawing.Color ColorValue 'get ' : 
  Methods:
    FromColor(Color): PrivateScope, Public, Static, HideBySig
    FromColor(Color): PrivateScope, Public, Static, HideBySig
    FromEntityColor(EntityColor): PrivateScope, Public, Static, HideBySig
    FromColorIndex(ColorMethod, Int16): PrivateScope, Public, Static, HideBySig
    FromRgb(Byte, Byte, Byte): PrivateScope, Public, Static, HideBySig
    FromDictionaryName(String): PrivateScope, Public, Static, HideBySig
    FromNames(String, String): PrivateScope, Public, Static, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Inequality(Color, Color): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Color, Color): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(Color, Color): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(Color, Color): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_ColorValue(): PrivateScope, Public, HideBySig, SpecialName
    get_ColorMethod(): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    get_Explanation(): PrivateScope, Public, HideBySig, SpecialName
    get_IsByColor(): PrivateScope, Public, HideBySig, SpecialName
    get_IsByLayer(): PrivateScope, Public, HideBySig, SpecialName
    get_IsByBlock(): PrivateScope, Public, HideBySig, SpecialName
    get_IsByAci(): PrivateScope, Public, HideBySig, SpecialName
    get_IsByPen(): PrivateScope, Public, HideBySig, SpecialName
    get_IsForeground(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNone(): PrivateScope, Public, HideBySig, SpecialName
    get_Red(): PrivateScope, Public, HideBySig, SpecialName
    get_Green(): PrivateScope, Public, HideBySig, SpecialName
    get_Blue(): PrivateScope, Public, HideBySig, SpecialName
    get_ColorIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_PenIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_ColorName(): PrivateScope, Public, HideBySig, SpecialName
    get_BookName(): PrivateScope, Public, HideBySig, SpecialName
    get_ColorNameForDisplay(): PrivateScope, Public, HideBySig, SpecialName
    get_HasColorName(): PrivateScope, Public, HideBySig, SpecialName
    get_HasBookName(): PrivateScope, Public, HideBySig, SpecialName
    get_EntityColor(): PrivateScope, Public, HideBySig, SpecialName
    get_DictionaryKeyLength(): PrivateScope, Public, HideBySig, SpecialName
    get_DictionaryKey(): PrivateScope, Public, HideBySig, SpecialName
    DwgIn(DwgFiler): PrivateScope, Public, Static, HideBySig
    DwgOut(DwgFiler): PrivateScope, Public, HideBySig
    DxfIn(DxfFiler, Int32): PrivateScope, Public, Static, HideBySig
    DxfOut(DxfFiler, Int32): PrivateScope, Public, HideBySig
    Audit(AuditInfo): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Runtime.PointCloudExtractResult: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Autodesk.AutoCAD.Runtime.ProfileCurve2d[] Curves : Public
    Autodesk.AutoCAD.Geometry.Matrix3d transform : Public
Class Autodesk.AutoCAD.Runtime.ExtractOption: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Autodesk.AutoCAD.Runtime.ExtractionType ExtractType : Public
    UInt32 ProcessPoints : Public
    Double FillGap : Public
    UInt32 SnapAngle : Public
    Double MiniumSegmentLength : Public
    Boolean UseLineSegmentOnly : Public
Interface Autodesk.AutoCAD.Runtime.IPointCloudExtractionProgressCallback: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Methods:
    UpdateProgress(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UpdateCaption(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Cancelled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Cancel(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    UpdateRemainTime(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    End(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Autodesk.AutoCAD.DatabaseServices.AutoConstrainEvaluationCallback: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Boolean IsEvaluationCancelled 'get ' : 
  Methods:
    GetConstraintPriorityOverride(ConstraintType, ConstrainedGeometry[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAutoConstrainPriority(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsEvaluationCancelled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetTotalConstraints(GeometricalConstraint[]&): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintCallback: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(AcDbAssoc2dConstraintCallback*, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    CanBeRelaxed(ExplicitConstraint): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ConstraintDeactivated(ExplicitConstraint, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.ActionsToEvaluateCallback: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    NeedsToEvaluate(ObjectId, AssocStatus, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AssocEvaluationCallback: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    EvaluationMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginActionEvaluation(AssocAction): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndActionEvaluation(AssocAction): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetActionEvaluationErrorStatus(AssocAction, ErrorStatus, ObjectId, DBObject, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetActionEvaluationErrorStatus(AssocAction, ErrorStatus): PrivateScope, Public, HideBySig
    BeginActionEvaluationUsingObject(AssocAction, ObjectId, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), DBObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EndActionEvaluationUsingObject(AssocAction, ObjectId, DBObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DraggingState(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CancelActionEvaluation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetTransformationType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.Geometry.Curve3d: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Entity3d
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d EndPoint 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d StartPoint 'get ' : 
    Boolean HasEndPoint 'get ' : 
    Boolean HasStartPoint 'get ' : 
    Autodesk.AutoCAD.Geometry.BoundBlock3d OrthoBoundBlock 'get ' : 
    Autodesk.AutoCAD.Geometry.BoundBlock3d BoundBlock 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    GetInterval(): PrivateScope, Public, HideBySig
    SetInterval(Interval): PrivateScope, Public, HideBySig
    GetReverseParameterCurve(): PrivateScope, Public, HideBySig
    GetDistanceTo(Curve3d): PrivateScope, Public, HideBySig
    GetDistanceTo(Curve3d, Tolerance): PrivateScope, Public, HideBySig
    GetDistanceTo(Point3d): PrivateScope, Public, HideBySig
    GetDistanceTo(Point3d, Tolerance): PrivateScope, Public, HideBySig
    GetClosestPointTo(Curve3d): PrivateScope, Public, HideBySig
    GetClosestPointTo(Curve3d, Tolerance): PrivateScope, Public, HideBySig
    GetClosestPointTo(Point3d): PrivateScope, Public, HideBySig
    GetClosestPointTo(Point3d, Tolerance): PrivateScope, Public, HideBySig
    GetProjectedClosestPointTo(Curve3d, Vector3d): PrivateScope, Public, HideBySig
    GetProjectedClosestPointTo(Curve3d, Vector3d, Tolerance): PrivateScope, Public, HideBySig
    GetProjectedClosestPointTo(Point3d, Vector3d): PrivateScope, Public, HideBySig
    GetProjectedClosestPointTo(Point3d, Vector3d, Tolerance): PrivateScope, Public, HideBySig
    GetNormalPoint(Point3d): PrivateScope, Public, HideBySig
    GetNormalPoint(Point3d, Tolerance): PrivateScope, Public, HideBySig
    get_BoundBlock(): PrivateScope, Public, HideBySig, SpecialName
    GetBoundBlockOf(Interval): PrivateScope, Public, HideBySig
    get_OrthoBoundBlock(): PrivateScope, Public, HideBySig, SpecialName
    GetOrthoBoundBlockOf(Interval): PrivateScope, Public, HideBySig
    GetProjectedEntity(Plane, Vector3d): PrivateScope, Public, HideBySig
    GetProjectedEntity(Plane, Vector3d, Tolerance): PrivateScope, Public, HideBySig
    GetOrthoProjectEntity(Plane): PrivateScope, Public, HideBySig
    GetOrthoProjectEntity(Plane, Tolerance): PrivateScope, Public, HideBySig
    IsOn(Double): PrivateScope, Public, HideBySig
    IsOn(Double, Tolerance): PrivateScope, Public, HideBySig
    IsOn(Point3d, Double&(Out)): PrivateScope, Public, HideBySig
    IsOn(Point3d, Double&(Out), Tolerance): PrivateScope, Public, HideBySig
    IsOn(Point3d): PrivateScope, Public, HideBySig
    IsOn(Point3d, Tolerance): PrivateScope, Public, HideBySig
    GetParameterOf(Point3d): PrivateScope, Public, HideBySig
    GetParameterOf(Point3d, Tolerance): PrivateScope, Public, HideBySig
    GetTrimmedOffset(Double, Vector3d, OffsetCurveExtensionType): PrivateScope, Public, HideBySig
    GetTrimmedOffset(Double, Vector3d, OffsetCurveExtensionType, Tolerance): PrivateScope, Public, HideBySig
    IsClosed(): PrivateScope, Public, HideBySig
    IsClosed(Tolerance): PrivateScope, Public, HideBySig
    IsPlanar(Plane&(Out)): PrivateScope, Public, HideBySig
    IsPlanar(Plane&(Out), Tolerance): PrivateScope, Public, HideBySig
    IsLinear(Line3d&(Out)): PrivateScope, Public, HideBySig
    IsLinear(Line3d&(Out), Tolerance): PrivateScope, Public, HideBySig
    IsCoplanarWith(Curve3d, Plane&(Out)): PrivateScope, Public, HideBySig
    IsCoplanarWith(Curve3d, Plane&(Out), Tolerance): PrivateScope, Public, HideBySig
    IsPeriodic(Double&(Out)): PrivateScope, Public, HideBySig
    IsDegenerate(Entity3d&(Out)): PrivateScope, Public, HideBySig
    IsDegenerate(Entity3d&(Out), Tolerance): PrivateScope, Public, HideBySig
    GetLength(Double, Double, Double): PrivateScope, Public, HideBySig
    GetParameterAtLength(Double, Double, Boolean(HasFieldMarshal), Double): PrivateScope, Public, HideBySig
    GetArea(Double, Double): PrivateScope, Public, HideBySig
    GetArea(Double, Double, Tolerance): PrivateScope, Public, HideBySig
    GetSplitCurves(Double): PrivateScope, Public, HideBySig
    Explode(Interval): PrivateScope, Public, HideBySig
    get_HasStartPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_HasEndPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_StartPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_EndPoint(): PrivateScope, Public, HideBySig, SpecialName
    EvaluatePoint(Double): PrivateScope, Public, HideBySig
    GetSamplePoints(Int32): PrivateScope, Public, HideBySig
    GetSamplePoints(Double, Double, Double): PrivateScope, Public, HideBySig
    GetNewSamplePoints(Double, Double, Double): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.Surface: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Entity3d
  Properties:
    Autodesk.AutoCAD.Geometry.Surface ReverseNormal 'get ' : 
    Boolean IsNormalReversed 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    GetClosestPointTo(Point3d): PrivateScope, Public, HideBySig
    GetClosestPointTo(Point3d, Tolerance): PrivateScope, Public, HideBySig
    GetEnvelope(): PrivateScope, Public, HideBySig
    ParameterOf(Point3d): PrivateScope, Public, HideBySig
    ParameterOf(Point3d, Tolerance): PrivateScope, Public, HideBySig
    IsOn(Point3d, Point2d): PrivateScope, Public, HideBySig
    IsOn(Point3d, Point2d, Tolerance): PrivateScope, Public, HideBySig
    ClosestPointTo(Point3d): PrivateScope, Public, HideBySig
    ClosestPointTo(Point3d, Tolerance): PrivateScope, Public, HideBySig
    DistanceTo(Point3d): PrivateScope, Public, HideBySig
    DistanceTo(Point3d, Tolerance): PrivateScope, Public, HideBySig
    get_IsNormalReversed(): PrivateScope, Public, HideBySig, SpecialName
    get_ReverseNormal(): PrivateScope, Public, HideBySig, SpecialName
    IsClosedInU(): PrivateScope, Public, HideBySig
    IsClosedInU(Tolerance): PrivateScope, Public, HideBySig
    IsClosedInV(): PrivateScope, Public, HideBySig
    IsClosedInV(Tolerance): PrivateScope, Public, HideBySig
    EvaluatePoint(Point2d, Int32, Vector3dCollection&, Vector3d&): PrivateScope, Public, HideBySig
    EvaluatePoint(Point2d, Int32, Vector3dCollection&): PrivateScope, Public, HideBySig
    EvaluatePoint(Point2d): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AssocVariableCallback: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    CanBeErased(AssocVariable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ValidateNameAndExpression(AssocVariable, String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.GraphicsInterface.Context: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Properties:
    Boolean SupportsTrueTypeText 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ByBlockPlotStyleNameId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.LineWeight ByBlockLineWeight 'get ' : 
    Autodesk.AutoCAD.Colors.EntityColor EffectiveColor 'get ' : 
    Boolean IsNesting 'get ' : 
    Boolean IsBoundaryClipping 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Database Database 'get ' : 
    Boolean IsPlotGeneration 'get ' : 
    Boolean IsPostScriptOut 'get ' : 
  Methods:
    get_IsPostScriptOut(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsPlotGeneration(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Database(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsBoundaryClipping(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    DisableFastMoveDrag(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsNesting(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EffectiveColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ByBlockLineWeight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ByBlockPlotStyleNameId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SupportsTrueTypeText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Autodesk.AutoCAD.Geometry.IntegerCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.IEnumerable
  Fields:
    Int32 DefaultSize = 10 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Capacity 'get set' : 
    Int32 Count 'get ' : 
    Int32 Item [Int32] 'get set' : 
    Boolean IsReadOnly 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsSynchronized 'get ' : 
    System.Object SyncRoot 'get ' : 
  Methods:
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    RemoveAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Capacity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Capacity(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TrimToSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddRange(Int32[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IndexOf(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyTo(Int32[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.Geometry.Point2dCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2d[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.IEnumerable
  Fields:
    Int32 DefaultSize = 10 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Capacity 'get set' : 
    Int32 Count 'get ' : 
    Autodesk.AutoCAD.Geometry.Point2d Item [Int32] 'get set' : 
    Boolean IsReadOnly 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsSynchronized 'get ' : 
    System.Object SyncRoot 'get ' : 
  Methods:
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Point2d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    RemoveAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Capacity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Capacity(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TrimToSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(Point2d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddRange(Point2d[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IndexOf(Point2d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, Point2d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(Point2d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(Point2d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyTo(Point2d[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Autodesk.AutoCAD.Geometry.Point2d: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IFormattable
  Properties:
    Autodesk.AutoCAD.Geometry.Point2d Origin 'get ' : 
    Double Coordinate [Int32] 'get ' : 
    Double Y   'get ' : 
    Double X   'get ' : 
  Methods:
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    get_Coordinate(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Origin(): PrivateScope, Public, Static, HideBySig, SpecialName
    TransformBy(Matrix2d): PrivateScope, Public, HideBySig
    RotateBy(Double, Point2d): PrivateScope, Public, HideBySig
    Mirror(Line2d): PrivateScope, Public, HideBySig
    ScaleBy(Double, Point2d): PrivateScope, Public, HideBySig
    MultiplyBy(Double): PrivateScope, Public, HideBySig
    DivideBy(Double): PrivateScope, Public, HideBySig
    Add(Vector2d): PrivateScope, Public, HideBySig
    Subtract(Vector2d): PrivateScope, Public, HideBySig
    GetAsVector(): PrivateScope, Public, HideBySig
    GetDistanceTo(Point2d): PrivateScope, Public, HideBySig
    GetVectorTo(Point2d): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    IsEqualTo(Point2d): PrivateScope, Public, HideBySig
    IsEqualTo(Point2d, Tolerance): PrivateScope, Public, HideBySig
    op_Inequality(Point2d, Point2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Point2d, Point2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Point2d, Vector2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Point2d, Point2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Point2d, Vector2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Matrix2d, Point2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Double, Point2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Point2d, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Point2d, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.Vector2dCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.Geometry.Vector2d[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.IEnumerable
  Fields:
    Int32 DefaultSize = 10 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Capacity 'get set' : 
    Int32 Count 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector2d Item [Int32] 'get set' : 
    Boolean IsReadOnly 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsSynchronized 'get ' : 
    System.Object SyncRoot 'get ' : 
  Methods:
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Vector2d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    RemoveAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Capacity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Capacity(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TrimToSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(Vector2d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddRange(Vector2d[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IndexOf(Vector2d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, Vector2d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(Vector2d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(Vector2d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyTo(Vector2d[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Autodesk.AutoCAD.DatabaseServices.ObjectId: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable`1[Autodesk.AutoCAD.DatabaseServices.ObjectId]
    System.Dynamic.IDynamicMetaObjectProvider
  Properties:
    Boolean IsResident 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Null 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Handle NonForwardedHandle 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Handle Handle 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Database OriginalDatabase 'get ' : 
    Boolean ObjectLeftOnDisk 'get ' : 
    Boolean IsEffectivelyErased 'get ' : 
    Boolean IsErased 'get ' : 
    Boolean IsWellBehaved 'get ' : 
    Boolean IsValid 'get ' : 
    Boolean IsNull 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Database Database 'get ' : 
    IntPtr OldIdPtr 'get ' : 
    Int64 OldId 'get ' :  (Obsolete)
    Autodesk.AutoCAD.Runtime.RXClass ObjectClass 'get ' : 
  Methods:
    get_ObjectClass(): PrivateScope, Public, HideBySig, SpecialName
    Open(OpenMode, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig (Obsolete)
    Open(OpenMode, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig (Obsolete)
    Open(OpenMode): PrivateScope, Public, HideBySig (Obsolete)
    GetObject(OpenMode, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetObject(OpenMode, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetObject(OpenMode): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Inequality(ObjectId, ObjectId): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(ObjectId, ObjectId): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    get_OldId(): PrivateScope, Public, HideBySig, SpecialName
    get_OldIdPtr(): PrivateScope, Public, HideBySig, SpecialName
    get_Database(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNull(): PrivateScope, Public, HideBySig, SpecialName
    get_IsValid(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWellBehaved(): PrivateScope, Public, HideBySig, SpecialName
    op_LessThan(ObjectId, ObjectId): PrivateScope, Public, Static, HideBySig, SpecialName
    Compare(ObjectId): PrivateScope, Public, HideBySig
    CompareTo(ObjectId): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_GreaterThan(ObjectId, ObjectId): PrivateScope, Public, Static, HideBySig, SpecialName
    ConvertToRedirectedId(): PrivateScope, Public, HideBySig
    get_IsErased(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEffectivelyErased(): PrivateScope, Public, HideBySig, SpecialName
    get_ObjectLeftOnDisk(): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalDatabase(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_NonForwardedHandle(): PrivateScope, Public, HideBySig, SpecialName
    get_Null(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsResident(): PrivateScope, Public, HideBySig, SpecialName
    GetMetaObject(Expression): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.GraphicsInterface.EdgeData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetTrueColors(EntityColor[]): PrivateScope, Public, HideBySig
    SetLayers(ObjectId[]): PrivateScope, Public, HideBySig
    SetLineTypes(ObjectId[]): PrivateScope, Public, HideBySig
    GetTrueColors(): PrivateScope, Public, HideBySig
    GetLayers(): PrivateScope, Public, HideBySig
    GetLineTypes(): PrivateScope, Public, HideBySig
    GetSelectionMarkers(): PrivateScope, Public, HideBySig
    GetVisibility(): PrivateScope, Public, HideBySig
    SetSelectionMarkers(IntPtr[]): PrivateScope, Public, HideBySig
    SetVisibility(Byte[]): PrivateScope, Public, HideBySig
    SetColors(Int16[]): PrivateScope, Public, HideBySig
    GetColors(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.GraphicsInterface.FaceData: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetColors(Int16[]): PrivateScope, Public, HideBySig
    SetTrueColors(EntityColor[]): PrivateScope, Public, HideBySig
    SetLayers(ObjectId[]): PrivateScope, Public, HideBySig
    SetNormalVectors(Vector3d[]): PrivateScope, Public, HideBySig
    SetVisibility(Byte[]): PrivateScope, Public, HideBySig
    GetColors(): PrivateScope, Public, HideBySig
    GetLayers(): PrivateScope, Public, HideBySig
    GetSelectionMarkers(): PrivateScope, Public, HideBySig
    SetSelectionMarkers(IntPtr[]): PrivateScope, Public, HideBySig
    GetNormalVectors(): PrivateScope, Public, HideBySig
    GetTrueColors(): PrivateScope, Public, HideBySig
    GetVisibility(): PrivateScope, Public, HideBySig
    SetMaterials(ObjectId[]): PrivateScope, Public, HideBySig
    GetMaterials(): PrivateScope, Public, HideBySig
    SetMappers(Mapper[]): PrivateScope, Public, HideBySig
    GetMappers(): PrivateScope, Public, HideBySig
    SetTransparency(Transparency[]): PrivateScope, Public, HideBySig
    GetTransparency(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.GraphicsInterface.VertexData: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.OrientationType OrientationFlag 'get set' : 
  Methods:
    SetNormalVectors(Vector3d[]): PrivateScope, Public, HideBySig
    get_OrientationFlag(): PrivateScope, Public, HideBySig, SpecialName
    set_OrientationFlag(OrientationType): PrivateScope, Public, HideBySig, SpecialName
    SetTrueColors(EntityColor[]): PrivateScope, Public, HideBySig
    GetTrueColors(): PrivateScope, Public, HideBySig
    GetNormalVectors(): PrivateScope, Public, HideBySig
    set_MappingCoords(MapChannel, Point3d[]): PrivateScope, Public, HideBySig
    get_MappingCoords(MapChannel): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.IntPtrCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(IntPtr[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.IEnumerable
  Fields:
    Int32 DefaultSize = 10 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Capacity 'get set' : 
    Int32 Count 'get ' : 
    IntPtr Item [Int32] 'get set' : 
    Boolean IsReadOnly 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsSynchronized 'get ' : 
    System.Object SyncRoot 'get ' : 
  Methods:
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    RemoveAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Capacity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Capacity(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TrimToSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddRange(IntPtr[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IndexOf(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyTo(IntPtr[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.Geometry.UInt32Collection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(UInt32[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.IEnumerable
  Fields:
    Int32 DefaultSize = 10 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Capacity 'get set' : 
    Int32 Count 'get ' : 
    UInt32 Item [Int32] 'get set' : 
    Boolean IsReadOnly 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsSynchronized 'get ' : 
    System.Object SyncRoot 'get ' : 
  Methods:
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    RemoveAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Capacity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Capacity(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TrimToSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddRange(UInt32[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IndexOf(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyTo(UInt32[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.Colors.EntityColorCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.Colors.EntityColor[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.IEnumerable
  Fields:
    Int32 DefaultSize = 10 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Capacity 'get set' : 
    Int32 Count 'get ' : 
    Autodesk.AutoCAD.Colors.EntityColor Item [Int32] 'get set' : 
    Boolean IsReadOnly 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsSynchronized 'get ' : 
    System.Object SyncRoot 'get ' : 
  Methods:
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, EntityColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    RemoveAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Capacity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Capacity(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TrimToSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(EntityColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddRange(EntityColor[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IndexOf(EntityColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, EntityColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(EntityColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(EntityColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyTo(EntityColor[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.Colors.TransparencyCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.Colors.Transparency[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.IEnumerable
  Fields:
    Int32 DefaultSize = 10 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Capacity 'get set' : 
    Int32 Count 'get ' : 
    Autodesk.AutoCAD.Colors.Transparency Item [Int32] 'get set' : 
    Boolean IsReadOnly 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsSynchronized 'get ' : 
    System.Object SyncRoot 'get ' : 
  Methods:
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Transparency): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    RemoveAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Capacity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Capacity(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TrimToSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(Transparency): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddRange(Transparency[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IndexOf(Transparency): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, Transparency): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(Transparency): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(Transparency): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyTo(Transparency[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Autodesk.AutoCAD.DatabaseServices.FullSubentityPath: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId[], Autodesk.AutoCAD.DatabaseServices.SubentityId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.SubentityId SubentId 'get ' : 
    Boolean IsNull 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.FullSubentityPath Null 'get ' : 
  Methods:
    CopyToUnmanagedObject(IntPtr): PrivateScope, Public, HideBySig
    get_Null(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsNull(): PrivateScope, Public, HideBySig, SpecialName
    GetObjectIds(): PrivateScope, Public, HideBySig
    get_SubentId(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    op_Inequality(FullSubentityPath, FullSubentityPath): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(FullSubentityPath, FullSubentityPath): PrivateScope, Public, Static, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.VertexRef: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.SubentRef
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.Entity): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.CompoundObjectId, Autodesk.AutoCAD.DatabaseServices.SubentityId, Autodesk.AutoCAD.Geometry.Point3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.CompoundObjectId, Autodesk.AutoCAD.DatabaseServices.SubentityId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.CompoundObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d Point 'get ' : 
  Methods:
    get_Point(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.EdgeRef: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.SubentRef
    Void .ctor(Autodesk.AutoCAD.Geometry.Curve3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.Entity): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.CompoundObjectId, Autodesk.AutoCAD.DatabaseServices.SubentityId, Autodesk.AutoCAD.DatabaseServices.SubentityId, Autodesk.AutoCAD.Geometry.Curve3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.CompoundObjectId, Autodesk.AutoCAD.DatabaseServices.SubentityId, Autodesk.AutoCAD.DatabaseServices.SubentityId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.CompoundObjectId, Autodesk.AutoCAD.DatabaseServices.SubentityId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.CompoundObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Curve3d Curve 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.SubentityId FaceSubentity 'get set' : 
  Methods:
    get_FaceSubentity(): PrivateScope, Public, HideBySig, SpecialName
    set_FaceSubentity(SubentityId): PrivateScope, Public, HideBySig, SpecialName
    get_Curve(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.ResultBuffer: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.TypedValue[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerable
    System.IFormattable
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    GetEnumerator(): PrivateScope, Public, HideBySig
    Add(Object): PrivateScope, Public, HideBySig
    Add(TypedValue): PrivateScope, Public, HideBySig
    AsArray(): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Inequality(ResultBuffer, ResultBuffer): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(ResultBuffer, ResultBuffer): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.CustomObjectSnapMode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(System.String, System.String, System.String, Autodesk.AutoCAD.GraphicsInterface.Glyph, System.Drawing.Bitmap, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.String, Autodesk.AutoCAD.GraphicsInterface.Glyph): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String DisplayString 'get ' : 
    System.Drawing.Bitmap Bitmap 'get ' : 
    Int32 GlyphSize 'get ' : 
    System.String ToolTipText 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.Glyph Glyph 'get ' : 
    System.String GlobalModeString 'get ' : 
    System.String LocalModeString 'get ' : 
  Methods:
    get_LocalModeString(): PrivateScope, Public, HideBySig, SpecialName
    get_GlobalModeString(): PrivateScope, Public, HideBySig, SpecialName
    get_Glyph(): PrivateScope, Public, HideBySig, SpecialName
    get_ToolTipText(): PrivateScope, Public, HideBySig, SpecialName
    get_GlyphSize(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Bitmap(): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayString(): PrivateScope, Public, HideBySig, SpecialName
    ApplyToEntityType(RXClass, AddObjectSnapInfo): PrivateScope, Public, HideBySig
    RemoveFromEntityType(RXClass): PrivateScope, Public, HideBySig
    Activate(String): PrivateScope, Public, Static, HideBySig
    Deactivate(String): PrivateScope, Public, Static, HideBySig
    IsActive(String): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AddObjectSnapInfo: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(ObjectSnapContext, ObjectSnapInfo): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(ObjectSnapContext, ObjectSnapInfo, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.SecurityParameters: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(System.String, System.String, System.String, System.String, System.String, System.String, System.String, Autodesk.AutoCAD.DatabaseServices.SecurityActions, Autodesk.AutoCAD.DatabaseServices.SecurityAlgorithm, UInt32, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
  Properties:
    System.String TimeServer 'get set' : 
    System.String Comment 'get set' : 
    System.String SerialNumber 'get set' : 
    System.String Issuer 'get set' : 
    System.String Subject 'get set' : 
    Int32 KeyLength 'get set' IsLong : 
    Autodesk.AutoCAD.DatabaseServices.SecurityAlgorithm Algorithm 'get set' : 
    System.String ProviderName 'get set' : 
    Int32 ProviderType 'get set' IsLong : 
    System.String Password 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.SecurityActions Action 'get set' : 
  Methods:
    get_Action(): PrivateScope, Public, HideBySig, SpecialName
    set_Action(SecurityActions): PrivateScope, Public, HideBySig, SpecialName
    get_Password(): PrivateScope, Public, HideBySig, SpecialName
    set_Password(String): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderType(): PrivateScope, Public, HideBySig, SpecialName
    set_ProviderType(Int32 IsLong): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderName(): PrivateScope, Public, HideBySig, SpecialName
    set_ProviderName(String): PrivateScope, Public, HideBySig, SpecialName
    get_Algorithm(): PrivateScope, Public, HideBySig, SpecialName
    set_Algorithm(SecurityAlgorithm): PrivateScope, Public, HideBySig, SpecialName
    get_KeyLength(): PrivateScope, Public, HideBySig, SpecialName
    set_KeyLength(Int32 IsLong): PrivateScope, Public, HideBySig, SpecialName
    get_Subject(): PrivateScope, Public, HideBySig, SpecialName
    set_Subject(String): PrivateScope, Public, HideBySig, SpecialName
    get_Issuer(): PrivateScope, Public, HideBySig, SpecialName
    set_Issuer(String): PrivateScope, Public, HideBySig, SpecialName
    get_SerialNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_SerialNumber(String): PrivateScope, Public, HideBySig, SpecialName
    get_Comment(): PrivateScope, Public, HideBySig, SpecialName
    set_Comment(String): PrivateScope, Public, HideBySig, SpecialName
    get_TimeServer(): PrivateScope, Public, HideBySig, SpecialName
    set_TimeServer(String): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Inequality(SecurityParameters, SecurityParameters): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(SecurityParameters, SecurityParameters): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.CellRange: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Interfaces:
    Autodesk.AutoCAD.DatabaseServices.ISubObject
    System.Collections.Generic.IEnumerable`1[Autodesk.AutoCAD.DatabaseServices.CellReference]
    System.Collections.IEnumerable
  Properties:
    System.Nullable`1[System.Boolean] IsMerged 'get ' : 
    Boolean IsSingleCell 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Cell Item [Int32, Int32] 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.CellBorders Borders 'get ' : 
    Boolean CanInsertColumn 'get ' : 
    Boolean CanInsertRow 'get ' : 
    Boolean CanDeleteColumns 'get ' : 
    Boolean CanDeleteRows 'get ' : 
    System.Nullable`1[System.Boolean] IsEmpty 'get ' : 
    System.Nullable`1[System.Boolean] IsFormatEditable 'get ' : 
    System.Nullable`1[System.Boolean] IsContentEditable 'get ' : 
    System.Nullable`1[System.Boolean] IsLinked 'get ' : 
    System.Nullable`1[Autodesk.AutoCAD.DatabaseServices.ObjectId] TextStyleId 'get set' : 
    System.Nullable`1[System.Double] TextHeight 'get set' : 
    System.Nullable`1[System.Boolean] IsMergeAllEnabled 'get set' : 
    System.Nullable`1[Autodesk.AutoCAD.DatabaseServices.DataTypeParameter] DataType 'get set' : 
    System.String DataFormat 'get set' : 
    System.Nullable`1[Autodesk.AutoCAD.DatabaseServices.CellContentLayout] ContentLayout 'get set' : 
    System.Nullable`1[Autodesk.AutoCAD.DatabaseServices.CellStates] State 'get set' : 
    Autodesk.AutoCAD.Colors.Color ContentColor 'get set' : 
    Autodesk.AutoCAD.Colors.Color BackgroundColor 'get set' : 
    System.Nullable`1[System.Boolean] IsBackgroundColorNone 'get set' : 
    System.Nullable`1[Autodesk.AutoCAD.DatabaseServices.CellAlignment] Alignment 'get set' : 
    System.String Style 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.Cell BottomRightPlusOne 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Cell BottomRight 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Cell TopLeft 'get ' : 
    Int32 RightColumn 'get ' : 
    Int32 BottomRow 'get ' : 
    Int32 LeftColumn 'get ' : 
    Int32 TopRow 'get ' : 
    Boolean IsNull 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Table ParentTable 'get ' : 
  Methods:
    Create(Table, Int32, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    op_Equality(CellRange, CellRange): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(CellRange, CellRange): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IEnumerableGetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_ParentTable(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNull(): PrivateScope, Public, HideBySig, SpecialName
    get_TopRow(): PrivateScope, Public, HideBySig, SpecialName
    get_LeftColumn(): PrivateScope, Public, HideBySig, SpecialName
    get_BottomRow(): PrivateScope, Public, HideBySig, SpecialName
    get_RightColumn(): PrivateScope, Public, HideBySig, SpecialName
    get_TopLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_BottomRight(): PrivateScope, Public, HideBySig, SpecialName
    get_BottomRightPlusOne(): PrivateScope, Public, HideBySig, SpecialName
    GetStyleOverrides(): PrivateScope, Public, HideBySig
    ClearStyleOverrides(): PrivateScope, Public, HideBySig
    get_Style(): PrivateScope, Public, HideBySig, SpecialName
    set_Style(String): PrivateScope, Public, HideBySig, SpecialName
    GetCustomData(String): PrivateScope, Public, HideBySig
    SetCustomData(String, Object): PrivateScope, Public, HideBySig
    get_Alignment(): PrivateScope, Public, HideBySig, SpecialName
    set_Alignment(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_IsBackgroundColorNone(): PrivateScope, Public, HideBySig, SpecialName
    set_IsBackgroundColorNone(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_BackgroundColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BackgroundColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ContentColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ContentColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_State(): PrivateScope, Public, HideBySig, SpecialName
    set_State(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ContentLayout(): PrivateScope, Public, HideBySig, SpecialName
    set_ContentLayout(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_DataFormat(): PrivateScope, Public, HideBySig, SpecialName
    set_DataFormat(String): PrivateScope, Public, HideBySig, SpecialName
    get_DataType(): PrivateScope, Public, HideBySig, SpecialName
    set_DataType(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_IsMergeAllEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_IsMergeAllEnabled(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_TextHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_TextHeight(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_TextStyleId(): PrivateScope, Public, HideBySig, SpecialName
    set_TextStyleId(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_IsLinked(): PrivateScope, Public, HideBySig, SpecialName
    get_IsContentEditable(): PrivateScope, Public, HideBySig, SpecialName
    get_IsFormatEditable(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    get_CanDeleteRows(): PrivateScope, Public, HideBySig, SpecialName
    get_CanDeleteColumns(): PrivateScope, Public, HideBySig, SpecialName
    get_CanInsertRow(): PrivateScope, Public, HideBySig, SpecialName
    get_CanInsertColumn(): PrivateScope, Public, HideBySig, SpecialName
    get_Borders(): PrivateScope, Public, HideBySig, SpecialName
    DeleteContent(): PrivateScope, Public, HideBySig
    get_Item(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IsSingleCell(): PrivateScope, Public, HideBySig, SpecialName
    get_IsMerged(): PrivateScope, Public, HideBySig, SpecialName
    GetDataLink(): PrivateScope, Public, HideBySig
    SetDataLink(ObjectId, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.GripData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Properties:
    Boolean IsPerViewport 'get set' : 
    Boolean GizmosEnabled 'get set' : 
    Boolean HotGripInvokesRightClick 'get set' : 
    Boolean ForcedPickOn 'get set' : 
    Boolean TriggerGrip 'get set' : 
    Boolean DrawAtDragImageGripPoint 'get set' : 
    Boolean ModeKeywordsDisabled 'get set' : 
    Boolean RubberBandLineDisabled 'get set' : 
    Boolean SkipWhenShared 'get set' : 
    System.Nullable`1[Autodesk.AutoCAD.Geometry.Point3d] AlternateBasePoint 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d GripPoint 'get set' : 
  Methods:
    get_GripPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_GripPoint(Point3d): PrivateScope, Public, HideBySig, SpecialName
    OnHotGrip(ObjectId, Context): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnHover(ObjectId, Context): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnRightClick(GripDataCollection, ObjectIdCollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WorldDraw(WorldDraw, ObjectId, DrawType, Nullable`1, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ViewportDraw(ViewportDraw, ObjectId, DrawType, Nullable`1, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OnGripStatusChanged(ObjectId, Status): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTooltip(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetHoverDimensionData(ObjectId, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetHotGripDimensionData(ObjectId, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_AlternateBasePoint(): PrivateScope, Public, HideBySig, SpecialName
    set_AlternateBasePoint(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_SkipWhenShared(): PrivateScope, Public, HideBySig, SpecialName
    set_SkipWhenShared(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_RubberBandLineDisabled(): PrivateScope, Public, HideBySig, SpecialName
    set_RubberBandLineDisabled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ModeKeywordsDisabled(): PrivateScope, Public, HideBySig, SpecialName
    set_ModeKeywordsDisabled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_DrawAtDragImageGripPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_DrawAtDragImageGripPoint(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_TriggerGrip(): PrivateScope, Public, HideBySig, SpecialName
    set_TriggerGrip(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ForcedPickOn(): PrivateScope, Public, HideBySig, SpecialName
    set_ForcedPickOn(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HotGripInvokesRightClick(): PrivateScope, Public, HideBySig, SpecialName
    set_HotGripInvokesRightClick(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_GizmosEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_GizmosEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsPerViewport(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPerViewport(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.LayerStateEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, LayerStateEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, LayerStateEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.LayerStateDeletedEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, LayerStateDeletedEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, LayerStateDeletedEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.LayerStateRenameEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, LayerStateRenameEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, LayerStateRenameEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.LayerStateManager: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.Database): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String LastRestoredLayerState 'get ' : 
  Events:
    Autodesk.AutoCAD.DatabaseServices.LayerStateRenameEventHandler AbortLayerStateRename: SpecialName
    Autodesk.AutoCAD.DatabaseServices.LayerStateRenameEventHandler LayerStateRenamed: SpecialName
    Autodesk.AutoCAD.DatabaseServices.LayerStateRenameEventHandler LayerStateToBeRenamed: SpecialName
    Autodesk.AutoCAD.DatabaseServices.LayerStateEventHandler AbortLayerStateDelete: SpecialName
    Autodesk.AutoCAD.DatabaseServices.LayerStateDeletedEventHandler LayerStateDeleted: SpecialName
    Autodesk.AutoCAD.DatabaseServices.LayerStateEventHandler LayerStateToBeDeleted: SpecialName
    Autodesk.AutoCAD.DatabaseServices.LayerStateEventHandler AbortLayerStateRestore: SpecialName
    Autodesk.AutoCAD.DatabaseServices.LayerStateEventHandler LayerStateRestored: SpecialName
    Autodesk.AutoCAD.DatabaseServices.LayerStateEventHandler LayerStateToBeRestored: SpecialName
    Autodesk.AutoCAD.DatabaseServices.LayerStateEventHandler LayerStateCompareFailed: SpecialName
    Autodesk.AutoCAD.DatabaseServices.LayerStateEventHandler LayerStateCreated: SpecialName
  Methods:
    LayerStatesDictionaryId(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    HasLayerState(String): PrivateScope, Public, HideBySig
    SetLayerStateMask(String, LayerStateMasks): PrivateScope, Public, HideBySig
    GetLayerStateMask(String): PrivateScope, Public, HideBySig
    DeleteLayerState(String): PrivateScope, Public, HideBySig
    RenameLayerState(String, String): PrivateScope, Public, HideBySig
    ImportLayerState(String): PrivateScope, Public, HideBySig
    ExportLayerState(String, String): PrivateScope, Public, HideBySig
    SaveLayerState(String, LayerStateMasks, ObjectId): PrivateScope, Public, HideBySig
    RestoreLayerState(String, ObjectId, Int32, LayerStateMasks): PrivateScope, Public, HideBySig
    SetLayerStateDescription(String, String): PrivateScope, Public, HideBySig
    GetLayerStateDescription(String): PrivateScope, Public, HideBySig
    LayerStateHasViewportData(String): PrivateScope, Public, HideBySig
    ImportLayerStateFromDb(String, Database): PrivateScope, Public, HideBySig
    GetLayerStateNames(Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetLayerStateLayers(String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    CompareLayerStateToDb(String, ObjectId): PrivateScope, Public, HideBySig
    get_LastRestoredLayerState(): PrivateScope, Public, HideBySig, SpecialName
    add_LayerStateCreated(LayerStateEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_LayerStateCreated(LayerStateEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_LayerStateCompareFailed(LayerStateEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_LayerStateCompareFailed(LayerStateEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_LayerStateToBeRestored(LayerStateEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_LayerStateToBeRestored(LayerStateEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_LayerStateRestored(LayerStateEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_LayerStateRestored(LayerStateEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_AbortLayerStateRestore(LayerStateEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_AbortLayerStateRestore(LayerStateEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_LayerStateToBeDeleted(LayerStateEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_LayerStateToBeDeleted(LayerStateEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_LayerStateDeleted(LayerStateDeletedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_LayerStateDeleted(LayerStateDeletedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_AbortLayerStateDelete(LayerStateEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_AbortLayerStateDelete(LayerStateEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_LayerStateToBeRenamed(LayerStateRenameEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_LayerStateToBeRenamed(LayerStateRenameEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_LayerStateRenamed(LayerStateRenameEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_LayerStateRenamed(LayerStateRenameEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_AbortLayerStateRename(LayerStateRenameEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_AbortLayerStateRename(LayerStateRenameEventHandler): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.LayoutEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Properties:
    System.String Name 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Id 'get ' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.LayoutRenamedEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Properties:
    System.String NewName 'get ' : 
    System.String Name 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Id 'get ' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_NewName(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.LayoutCopiedEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Properties:
    System.String NewName 'get ' : 
    System.String Name 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId NewId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Id 'get ' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    get_NewId(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_NewName(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.PlotStyleTableChangedEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Properties:
    System.String NewName 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Id 'get ' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    get_NewName(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.PlotStyleTableChangedEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, PlotStyleTableChangedEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, PlotStyleTableChangedEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.LayoutRenamedEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, LayoutRenamedEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, LayoutRenamedEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.LayoutCopiedEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, LayoutCopiedEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, LayoutCopiedEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.LayoutEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, LayoutEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, LayoutEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.Geometry.Int32Collection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.IEnumerable
  Fields:
    Int32 DefaultSize = 10 : Public, Static, Literal, HasDefault
  Properties:
    Int32 Capacity 'get set' : 
    Int32 Count 'get ' : 
    Int32 Item [Int32] 'get set' : 
    Boolean IsReadOnly 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Boolean IsSynchronized 'get ' : 
    System.Object SyncRoot 'get ' : 
  Methods:
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    RemoveAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Capacity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Capacity(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TrimToSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddRange(Int32[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IndexOf(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Insert(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyTo(Int32[], Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.Runtime.RXClass: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Properties:
    Autodesk.AutoCAD.Runtime.RXClass MyParent 'get ' : 
    Int32 ProxyFlags 'get ' : 
    System.Version ClassVersion 'get ' : 
    System.String Name 'get ' : 
    System.String DxfName 'get ' : 
    System.String AppName 'get ' : 
  Events:
    Autodesk.AutoCAD.DatabaseServices.EntityAlignmentEventHandler EntityAlignment: SpecialName
  Methods:
    AddX(RXClass, RXObject): PrivateScope, Public, HideBySig
    GetX(RXClass): PrivateScope, Public, HideBySig
    DelX(RXClass): PrivateScope, Public, HideBySig
    QueryX(RXClass): PrivateScope, Public, HideBySig
    get_AppName(): PrivateScope, Public, HideBySig, SpecialName
    get_DxfName(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_ClassVersion(): PrivateScope, Public, HideBySig, SpecialName
    get_ProxyFlags(): PrivateScope, Public, HideBySig, SpecialName
    IsDerivedFrom(RXClass): PrivateScope, Public, HideBySig
    get_MyParent(): PrivateScope, Public, HideBySig, SpecialName
    add_EntityAlignment(EntityAlignmentEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_EntityAlignment(EntityAlignmentEventHandler): PrivateScope, Public, HideBySig, SpecialName
    Create(): PrivateScope, Public, HideBySig
    GetRuntimeType(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Runtime.DynamicLinker: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Properties:
    Int32 ProductLcid 'get ' : 
  Events:
    Autodesk.AutoCAD.Runtime.ModuleUnloadAbortedEventHandler ModuleUnloadAborted: SpecialName
    Autodesk.AutoCAD.Runtime.ModuleUnloadedEventHandler ModuleUnloaded: SpecialName
    Autodesk.AutoCAD.Runtime.ModuleUnloadingEventHandler ModuleUnloading: SpecialName
    Autodesk.AutoCAD.Runtime.ModuleLoadAbortedEventHandler ModuleLoadAborted: SpecialName
    Autodesk.AutoCAD.Runtime.ModuleLoadedEventHandler ModuleLoaded: SpecialName
    Autodesk.AutoCAD.Runtime.ModuleLoadingEventHandler ModuleLoading: SpecialName
  Methods:
    LoadModule(String, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    UnloadModule(String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    IsModuleLoaded(String): PrivateScope, Public, HideBySig
    GetLoadedModules(): PrivateScope, Public, HideBySig
    LoadApp(String, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    UnloadApp(String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    IsApplicationLocked(String): PrivateScope, Public, HideBySig
    IsAppMdiAware(String): PrivateScope, Public, HideBySig
    IsAppBusy(String): PrivateScope, Public, HideBySig
    SetAppBusy(String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_ProductLcid(): PrivateScope, Public, HideBySig, SpecialName
    add_ModuleLoading(ModuleLoadingEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ModuleLoading(ModuleLoadingEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_ModuleLoaded(ModuleLoadedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ModuleLoaded(ModuleLoadedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_ModuleLoadAborted(ModuleLoadAbortedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ModuleLoadAborted(ModuleLoadAbortedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_ModuleUnloading(ModuleUnloadingEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ModuleUnloading(ModuleUnloadingEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_ModuleUnloaded(ModuleUnloadedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ModuleUnloaded(ModuleUnloadedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_ModuleUnloadAborted(ModuleUnloadAbortedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ModuleUnloadAborted(ModuleUnloadAbortedEventHandler): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.Runtime.DisposableWrapper: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :System.MarshalByRefObject
  Interfaces:
    System.IDisposable
  Properties:
    Boolean AutoDelete 'get set' : 
    Boolean IsDisposed 'get ' : 
    IntPtr UnmanagedObject 'get ' : 
  Methods:
    get_UnmanagedObject(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDisposed(): PrivateScope, Public, HideBySig, SpecialName
    get_AutoDelete(): PrivateScope, Public, HideBySig, SpecialName
    Create(Type, IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, HasSecurity
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Inequality(DisposableWrapper, DisposableWrapper): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(DisposableWrapper, DisposableWrapper): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.Runtime.Variables: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Interfaces:
    System.Collections.Generic.IEnumerable`1[Autodesk.AutoCAD.Runtime.Variable]
    System.Collections.IEnumerable
  Properties:
    Autodesk.AutoCAD.Runtime.Variable Item [System.String] 'get ' : 
  Events:
    Autodesk.AutoCAD.Runtime.VariableChangingEventHandler Changing: SpecialName
    Autodesk.AutoCAD.Runtime.VariableChangedEventHandler Changed: SpecialName
  Methods:
    GetAllNames(): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    Reset(StorageType): PrivateScope, Public, HideBySig
    add_Changed(VariableChangedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Changed(VariableChangedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_Changing(VariableChangingEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Changing(VariableChangingEventHandler): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.Runtime.Variable: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(IntPtr, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    RangeInfo Range 'get ' : 
    Int16 TypeFlags 'get ' : 
    StorageType Storage 'get ' : 
    SecondaryTypeInfo SecondaryType 'get ' : 
    Int16 PrimaryType 'get ' : 
    System.String Name 'get ' : 
    Boolean IsLocked 'get ' : 
    Boolean IsReadOnly 'get set' : 
    System.Object Value 'get set' : 
  Events:
    Autodesk.AutoCAD.Runtime.VariableChangingEventHandler Changing: SpecialName
    Autodesk.AutoCAD.Runtime.VariableChangedEventHandler Changed: SpecialName
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Object): PrivateScope, Public, HideBySig, SpecialName
    get_IsReadOnly(): PrivateScope, Public, HideBySig, SpecialName
    set_IsReadOnly(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsLocked(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_PrimaryType(): PrivateScope, Public, HideBySig, SpecialName
    get_SecondaryType(): PrivateScope, Public, HideBySig, SpecialName
    get_Storage(): PrivateScope, Public, HideBySig, SpecialName
    get_TypeFlags(): PrivateScope, Public, HideBySig, SpecialName
    get_Range(): PrivateScope, Public, HideBySig, SpecialName
    Reset(): PrivateScope, Public, HideBySig
    add_Changed(VariableChangedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Changed(VariableChangedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_Changing(VariableChangingEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Changing(VariableChangingEventHandler): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.Internal.DrawingCompare: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Autodesk.AutoCAD.DatabaseServices.Internal.ObjectDiffEventHandler m_ObjectDiffEvent : Public
  Events:
    Autodesk.AutoCAD.DatabaseServices.Internal.ObjectDiffEventHandler ObjectDiffEvent: SpecialName
  Methods:
    CompareDwgFiles(String IsConst, String IsConst): PrivateScope, Public, HideBySig
    OnDiffDetected(Int32, UInt64* IsImplicitlyDereferenced, Int32): PrivateScope, Public, HideBySig
    add_ObjectDiffEvent(ObjectDiffEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ObjectDiffEvent(ObjectDiffEventHandler): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.Runtime.WrapperAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String WrappedClass 'get ' : 
  Methods:
    get_WrappedClass(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.LineWeightConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.ComponentModel.TypeConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CanConvertFrom(ITypeDescriptorContext, Type): PrivateScope, Public, Virtual, HideBySig
    ConvertFrom(ITypeDescriptorContext, CultureInfo, Object): PrivateScope, Public, Virtual, HideBySig
    ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type): PrivateScope, Public, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.EnumConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.ComponentModel.EnumConverter
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CanConvertFrom(ITypeDescriptorContext, Type): PrivateScope, Public, Virtual, HideBySig
    ConvertFrom(ITypeDescriptorContext, CultureInfo, Object): PrivateScope, Public, Virtual, HideBySig
    ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type): PrivateScope, Public, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.UnitsConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.ComponentModel.TypeConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CanConvertFrom(ITypeDescriptorContext, Type): PrivateScope, Public, Virtual, HideBySig
    ConvertFrom(ITypeDescriptorContext, CultureInfo, Object): PrivateScope, Public, Virtual, HideBySig
    ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type): PrivateScope, Public, Virtual, HideBySig
    GetConversionFactor(UnitsValue, UnitsValue): PrivateScope, Public, Static, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.UnitsValue: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.UnitsValue Undefined = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitsValue Inches = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitsValue Feet = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitsValue Miles = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitsValue Millimeters = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitsValue Centimeters = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitsValue Meters = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitsValue Kilometers = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitsValue MicroInches = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitsValue Mils = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitsValue Yards = 10 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitsValue Angstroms = 11 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitsValue Nanometers = 12 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitsValue Microns = 13 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitsValue Decimeters = 14 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitsValue Dekameters = 15 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitsValue Hectometers = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitsValue Gigameters = 17 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitsValue Astronomical = 18 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitsValue LightYears = 19 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitsValue Parsecs = 20 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitsValue USSurveyFeet = 21 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitsValue USSurveyInch = 22 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitsValue USSurveyYard = 23 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitsValue USSurveyMile = 24 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.Runtime.Exception: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(Autodesk.AutoCAD.Runtime.ErrorStatus, System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Runtime.ErrorStatus, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Runtime.ErrorStatus): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Runtime.ErrorStatus ErrorStatus 'get set' : 
  Methods:
    get_ErrorStatus(): PrivateScope, Public, HideBySig, SpecialName
    set_ErrorStatus(ErrorStatus): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
Struct Autodesk.AutoCAD.Runtime.ErrorStatus: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.Runtime.ErrorStatus OK = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NotImplementedYet = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NotApplicable = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidInput = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus AmbiguousInput = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus AmbiguousOutput = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus OutOfMemory = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus BufferTooSmall = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidOpenState = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus EntityInInactiveLayout = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus HandleExists = 10 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NullHandle = 11 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus BrokenHandle = 12 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus UnknownHandle = 13 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus HandleInUse = 14 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NullObjectPointer = 15 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NullObjectId = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NullBlockName = 17 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus ContainerNotEmpty = 18 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NullEntityPointer = 20 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus IllegalEntityType = 21 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus KeyNotFound = 22 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DuplicateKey = 23 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidIndex = 24 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DuplicateIndex = 25 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus AlreadyInDB = 26 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus OutOfDisk = 27 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DeletedEntry = 28 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NegativeValueNotAllowed = 29 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidExtents = 30 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidAdsName = 31 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidSymbolTableName = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidKey = 33 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus WrongObjectType = 34 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus WrongDatabase = 35 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus ObjectToBeDeleted = 36 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidDwgVersion = 37 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus AnonymousEntry = 38 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus IllegalReplacement = 39 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus EndOfObject = 40 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus EndOfFile = 41 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus IsReading = 42 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus IsWriting = 43 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NotOpenForRead = 44 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NotOpenForWrite = 45 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NotThatKindOfClass = 46 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidBlockName = 47 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus MissingDxfField = 48 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DuplicateDxfField = 49 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidDxfCode = 50 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidResultBuffer = 51 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus BadDxfSequence = 52 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus FilerError = 53 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus VertexAfterFace = 54 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidFaceVertexIndex = 55 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidMeshVertexIndex = 56 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus OtherObjectsBusy = 57 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus MustFirstAddBlockToDB = 58 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus CannotNestBlockDefinitions = 59 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DwgRecoveredOK = 60 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DwgNotRecoverable = 61 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DxfPartiallyRead = 62 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DxfReadAborted = 63 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DxbPartiallyRead = 64 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DwgCrcDoesNotMatch = 65 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DwgSentinelDoesNotMatch = 66 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DwgObjectImproperlyRead = 67 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NoInputFiler = 68 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DwgNeedsAFullSave = 69 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DxbReadAborted = 70 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus FileLockedByAutoCAD = 71 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus FileAccessErr = 72 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus FileSystemErr = 73 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus FileInternalErr = 74 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus FileTooManyOpen = 75 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus FileNotFound = 76 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DwkLockFileFound = 77 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus WasErased = 80 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus PermanentlyErased = 81 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus WasOpenForRead = 82 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus WasOpenForWrite = 83 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus WasOpenForUndo = 84 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus WasNotifying = 85 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus WasOpenForNotify = 86 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus OnLockedLayer = 87 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus MustOpenThruOwner = 88 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus SubentitiesStillOpen = 89 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus AtMaxReaders = 90 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus IsWriteProtected = 91 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus IsXRefObject = 92 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NotAnEntity = 93 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus HadMultipleReaders = 94 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DuplicateRecordName = 95 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus XRefDependent = 96 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus SelfReference = 97 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus MissingSymbolTable = 98 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus MissingSymbolTableRecord = 99 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus WasNotOpenForWrite = 100 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus CloseWasNotifying = 101 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus CloseModifyAborted = 102 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus ClosePartialFailure = 103 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus CloseFailObjectDamaged = 104 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus CannotBeErasedByCaller = 105 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus CannotBeResurrected = 106 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus WasNotErased = 107 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InsertAfter = 110 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus FixedAllErrors = 120 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus LeftErrorsUnfixed = 122 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus UnrecoverableErrors = 123 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NoDatabase = 124 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus ExternalDataSizeExceeded = 125 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus RegisteredApplicationIdNotFound = 126 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus RepeatEntity = 127 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus RecordNotInTable = 128 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus IteratorDone = 129 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NullIterator = 130 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NotInBlock = 131 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus OwnerNotInDatabase = 132 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus OwnerNotOpenForRead = 133 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus OwnerNotOpenForWrite = 134 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus ExplodeBeforeTransform = 135 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus CannotScaleNonUniformly = 136 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NotInDatabase = 137 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NotCurrentDatabase = 138 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus IsAnEntity = 139 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus CannotChangeActiveViewport = 140 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NotInPaperspace = 141 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus CommandWasInProgress = 142 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus GeneralModelingFailure = 150 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus OutOfRange = 151 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NonCoplanarGeometry = 152 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DegenerateGeometry = 153 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidAxis = 154 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus PointNotOnEntity = 155 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus SingularPoint = 156 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidOffset = 157 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NonPlanarEntity = 158 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus CannotExplodeEntity = 159 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus StringTooLong = 160 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidSymTableFlag = 161 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus UndefinedLineType = 162 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidTextStyle = 163 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus TooFewLineTypeElements = 164 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus TooManyLineTypeElements = 165 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus ExcessiveItemCount = 166 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus IgnoredLinetypeRedefinition = 167 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus BadUcs = 168 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus BadPaperspaceView = 169 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus SomeInputDataLeftUnread = 170 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NoInternalSpace = 171 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidDimStyle = 172 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidLayer = 173 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus UserBreak = 180 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DwgNeedsRecovery = 190 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DeleteEntity = 191 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidFix = 192 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus FiniteStateMachineError = 193 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus BadLayerName = 200 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus LayerGroupCodeMissing = 201 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus BadColorIndex = 202 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus BadLinetypeName = 203 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus BadLinetypeScale = 204 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus BadVisibilityValue = 205 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus ProperClassSeparatorExpected = 206 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus BadLineWeightValue = 207 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus BadColor = 208 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus PagerError = 210 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus OutOfPagerMemory = 211 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus PagerWriteError = 212 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus WasNotForwarding = 213 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidIdMap = 220 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidOwnerObject = 221 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus OwnerNotSet = 222 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus WrongSubentityType = 230 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus TooManyVertices = 231 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus TooFewVertices = 232 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NoActiveTransactions = 250 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NotTopTransaction = 251 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus TransactionOpenWhileCommandEnded = 252 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InProcessOfCommitting = 253 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NotNewlyCreated = 254 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus LongTransReferenceError = 255 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NoWorkSet = 256 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus AlreadyInGroup = 260 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NotInGroup = 261 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidInterfaceId = 290 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidNormal = 291 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidStyle = 292 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus CannotRestoreFromAcisFile = 300 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus MakeMeProxy = 301 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NlsFileNotAvailable = 302 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NotAllowedForThisProxy = 303 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NotSupportedInDwgApi = 310 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus PolyWidthLost = 311 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NullExtents = 312 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus BadDwgHeader = 314 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus LockViolation = 320 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus LockConflict = 321 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DatabaseObjectsOpen = 322 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus LockChangeInProgress = 323 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus Vetoed = 325 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NoDocument = 330 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NotFromThisDocument = 331 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus LispActive = 332 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus TargetDocNotQuiescent = 333 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DocumentSwitchDisabled = 334 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidContext = 335 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus CreateFailed = 337 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus CreateInvalidName = 338 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus SetFailed = 340 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DelDoesNotExist = 342 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DelIsModelSpace = 343 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DelLastLayout = 344 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DelUnableToSetCurrent = 345 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DelUnableToFind = 346 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus RenameDoesNotExist = 348 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus RenameIsModelSpace = 349 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus RenameInvalidLayoutName = 350 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus RenameLayoutAlreadyExists = 351 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus RenameInvalidName = 352 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus CopyDoesNotExist = 354 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus CopyIsModelSpace = 355 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus CopyFailed = 356 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus CopyInvalidName = 357 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus CopyNameExists = 358 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus ProfileDoesNotExist = 359 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidFileExtension = 360 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidProfileName = 361 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus FileExists = 362 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus ProfileIsInUse = 363 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus CantOpenFile = 364 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NoFileName = 365 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus RegistryAccessError = 366 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus RegistryCreateError = 367 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus BadDxfFile = 368 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus UnknownDxfFileFormat = 369 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus MissingDxfSection = 370 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidDxfSectionName = 371 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NotDxfHeaderGroupCode = 372 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus UndefinedDxfGroupCode = 373 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NotInitializedYet = 374 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidDxf2dPoint = 375 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidDxf3dPoint = 376 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus BadlyNestedAppData = 378 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus IncompleteBlockDefinition = 379 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus IncompleteComplexObject = 380 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus BlockDefInEntitySection = 381 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NoBlockBegin = 382 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DuplicateLayerName = 383 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus BadPlotStyleName = 384 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DuplicateBlockName = 385 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus BadPlotStyleType = 386 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus BadPlotStyleNameHandle = 387 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus UndefineShapeName = 388 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DuplicateBlockDefinition = 389 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus MissingBlockName = 390 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus BinaryDataSizeExceeded = 391 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus ObjectIsReferenced = 392 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NoThumbnailBitmap = 393 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus GuidNoAddress = 394 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus MustBe0to2 = 395 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus MustBe0to3 = 396 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus MustBe0to4 = 397 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus MustBe0to5 = 398 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus MustBe0to8 = 399 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus MustBe1to8 = 400 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus MustBe1to15 = 401 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus MustBePositive = 402 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus MustBeNonNegative = 403 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus MustBeNonZero = 404 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus MustBe1to6 = 405 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NoPlotStyleTranslationTable = 406 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus PlotStyleInColorDependentMode = 407 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus MaxLayouts = 408 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NoClassId = 409 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus UndoOperationNotAvailable = 410 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus UndoNoGroupBegin = 411 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus HatchTooDense = 420 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus OpenFileCancelled = 430 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NotHandled = 431 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus MakeMeProxyAndResurrect = 432 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus FileSharingViolation = 433 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus UnsupportedFileFormat = 434 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus ObsoleteFileFormat = 435 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus FileMissingSections = 436 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus RepeatedDwgRead = 437 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus WrongCellType = 440 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus CannotChangeColumnType = 441 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus RowsMustMatchColumns = 442 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DwgShareDemandLoad = 500 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DwgShareReadAccess = 501 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DwgShareWriteAccess = 502 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus LoadFailed = 503 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DeviceNotFound = 504 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NoCurrentConfig = 505 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NullPtr = 506 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NoLayout = 507 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus IncompatiblePlotSettings = 508 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NonePlotDevice = 509 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NoMatchingMedia = 510 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidView = 511 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidWindowArea = 512 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidPlotArea = 513 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus CustomSizeNotPossible = 514 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus PageCancelled = 515 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus PlotCancelled = 516 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidEngineState = 517 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus PlotAlreadyStarted = 518 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NoErrorHandler = 519 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidPlotInfo = 520 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NumberOfCopiesNotSupported = 521 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus LayoutNotCurrent = 522 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus GraphicsNotGenerated = 523 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus CannotPlotToFile = 524 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus MustPlotToFile = 525 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NotMultiPageCapable = 526 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus BackgroundPlotInProgress = 527 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus SubSelectionSetEmpty = 550 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NoIntersections = 551 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus EmbeddedIntersections = 552 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidObjectId = 600 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InvalidXrefObjectId = 601 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NoViewAssociation = 602 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus NoLabelBlock = 603 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus UnableToSetViewAssociation = 604 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus UnableToGetViewAssociation = 605 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus UnableToSetLabelBlock = 606 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus UnableToGetLabelBlock = 607 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus UnableToRemoveAssociation = 608 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus UnableToSyncModelView = 609 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DataLinkAdapterNotFound = 650 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DataLinkInvalidAdapterId = 651 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DataLinkNotFound = 652 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DataLinkBadConnectionString = 653 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DataLinkNotUpdatedYet = 654 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DataLinkSourceNotFound = 655 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DataLinkConnectionFailed = 656 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DataLinkSourceIsWriteProtected = 658 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus DataLinkOtherError = 660 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus SecInitializationFailure = 1001 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus SecErrorReadingFile = 1002 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus SecErrorWritingFile = 1003 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus SecInvalidDigitalId = 1101 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus SecErrorGeneratingTimestamp = 1102 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus SecErrorComputingSignature = 1103 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus SecErrorWritingSignature = 1104 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus SecErrorEncryptingData = 1201 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus SecErrorCipherNotSupported = 1202 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus SecErrorDecryptingData = 1203 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetBase = 20000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetOK = 20000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetInCache = 20001 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetFileNotFound = 20002 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetBadPath = 20003 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetTooManyOpenFiles = 20004 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetFileAccessDenied = 20005 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetInvalidFileHandle = 20006 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetDirectoryFull = 20007 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetHardwareError = 20008 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetSharingViolation = 20009 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetDiskFull = 20010 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetFileGenericError = 20011 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetValidUrl = 20012 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetNotAnUrl = 20013 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetNoWinInternet = 20014 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetOldWinInternet = 20015 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetNoInternetSupport = 20016 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetNotImplemented = 20017 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetProtocolNotSupported = 20018 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetCreateInternetSessionFailed = 20019 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetInternetSessionConnectFailed = 20020 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetInternetSessionOpenFailed = 20021 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetInvalidAccessType = 20022 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetFileOpenFailed = 20023 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetHttpOpenRequestFailed = 20024 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetUserCancelledTransfer = 20025 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetHttpBadRequest = 20026 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetHttpAccessDenied = 20027 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetHttpPaymentRequired = 20028 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetHttpRequestForbidden = 20029 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetHttpObjectNotFound = 20030 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetHttpBadMethod = 20031 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetHttpNoAcceptableResponse = 20032 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetHttpProxyAuthorizationRequired = 20033 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetHttpTimedOut = 20034 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetHttpConflict = 20035 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetHttpResourceGone = 20036 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetHttpLengthRequired = 20037 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetHttpPreconditionFailure = 20038 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetHttpRequestTooLarge = 20039 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetHttpUriTooLong = 20040 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetHttpUnsupportedMedia = 20041 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetHttpServerError = 20042 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetHttpNotSupported = 20043 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetHttpBadGateway = 20044 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetHttpServiceUnavailable = 20045 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetHttpGatewayTimeout = 20046 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetHttpVersionNotSupported = 20047 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetInternetError = 20048 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetGenericException = 20049 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus InternetUnknownError = 20050 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus AlreadyActive = 20051 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ErrorStatus AlreadyInactive = 20052 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.Runtime.Interop: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    Check(Int32): PrivateScope, Public, Static, HideBySig
    CheckAdsForCancel(Int32): PrivateScope, Public, Static, HideBySig
    CheckAds(Int32): PrivateScope, Public, Static, HideBySig
    CheckBool(Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    CheckBoolean(Int32): PrivateScope, Public, Static, HideBySig
    CheckNull(IntPtr): PrivateScope, Public, Static, HideBySig
    ThrowExceptionForErrorStatus(Int32): PrivateScope, Public, Static, HideBySig
    SetAutoDelete(DisposableWrapper, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, HasSecurity
    AttachUnmanagedObject(DisposableWrapper, IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, HasSecurity
    DetachUnmanagedObject(DisposableWrapper): PrivateScope, Public, Static, HideBySig, HasSecurity
Class Autodesk.AutoCAD.Runtime.ExtensionApplicationAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type Type 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.Runtime.SecuredApplicationAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String, System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ClientPublicKey 'get ' : 
    System.String ClientSignature 'get ' : 
    System.String OurSignature 'get ' : 
    System.String License 'get ' : 
  Methods:
    get_License(): PrivateScope, Public, HideBySig, SpecialName
    get_OurSignature(): PrivateScope, Public, HideBySig, SpecialName
    get_ClientSignature(): PrivateScope, Public, HideBySig, SpecialName
    get_ClientPublicKey(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.ObjectTypeAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type ObjectType 'get ' : 
  Methods:
    get_ObjectType(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.UnitTypeAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.UnitType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.UnitType UnitType 'get ' : 
  Methods:
    get_UnitType(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.UnitType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.UnitType Unitless = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitType Distance = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitType Angle = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitType Area = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitType Volume = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitType Currency = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitType Percentage = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnitType AngleNotTransformed = 65536 : Public, Static, Literal, HasDefault
Interface Autodesk.AutoCAD.DatabaseServices.ISpecialValueConverter: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Methods:
    ConvertToLocal(Object, String, Boolean&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    ConvertToGlobal(Object, String, Boolean&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetSpecialValues(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Autodesk.AutoCAD.DatabaseServices.ModifiesOwnerAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Autodesk.AutoCAD.Geometry.Tolerance: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Tolerance Global 'get set' : 
    Double EqualVector 'get ' : 
    Double EqualPoint 'get ' : 
  Methods:
    get_EqualPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_EqualVector(): PrivateScope, Public, HideBySig, SpecialName
    get_Global(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_Global(Tolerance): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Autodesk.AutoCAD.Geometry.Matrix2d: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IFormattable
  Properties:
    Double ElementAt [Int32, Int32] 'get ' : 
    Autodesk.AutoCAD.Geometry.CoordinateSystem2d CoordinateSystem2d 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector2d Translation 'get ' : 
  Methods:
    Multiply(Matrix2d): PrivateScope, Public, HideBySig
    PreMultiplyBy(Matrix2d): PrivateScope, Public, HideBySig
    PostMultiplyBy(Matrix2d): PrivateScope, Public, HideBySig
    Inverse(): PrivateScope, Public, HideBySig
    IsSingular(): PrivateScope, Public, HideBySig
    IsSingular(Tolerance): PrivateScope, Public, HideBySig
    Transpose(): PrivateScope, Public, HideBySig
    IsUniscaledOrtho(): PrivateScope, Public, HideBySig
    IsUniscaledOrtho(Tolerance): PrivateScope, Public, HideBySig
    IsScaledOrtho(): PrivateScope, Public, HideBySig
    IsScaledOrtho(Tolerance): PrivateScope, Public, HideBySig
    GetScale(): PrivateScope, Public, HideBySig
    GetDeterminant(): PrivateScope, Public, HideBySig
    get_Translation(): PrivateScope, Public, HideBySig, SpecialName
    IsConformal(Matrix2dInfo): PrivateScope, Public, HideBySig
    get_CoordinateSystem2d(): PrivateScope, Public, HideBySig, SpecialName
    Displacement(Vector2d): PrivateScope, Public, Static, HideBySig
    Rotation(Double, Point2d): PrivateScope, Public, Static, HideBySig
    Scaling(Double, Point2d): PrivateScope, Public, Static, HideBySig
    Mirroring(Line2d): PrivateScope, Public, Static, HideBySig
    Mirroring(Point2d): PrivateScope, Public, Static, HideBySig
    AlignCoordinateSystem(Point2d, Vector2d, Vector2d, Point2d, Vector2d, Vector2d): PrivateScope, Public, Static, HideBySig
    get_ElementAt(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    IsEqualTo(Matrix2d): PrivateScope, Public, HideBySig
    IsEqualTo(Matrix2d, Tolerance): PrivateScope, Public, HideBySig
    op_Inequality(Matrix2d, Matrix2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Matrix2d, Matrix2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Matrix2d, Matrix2d): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.Line2d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.LinearEntity2d
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2d, Autodesk.AutoCAD.Geometry.Point2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2d, Autodesk.AutoCAD.Geometry.Vector2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    Set(Point2d, Point2d): PrivateScope, Public, HideBySig
    Set(Point2d, Vector2d): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.Geometry.Vector2d: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IFormattable
  Properties:
    Double LengthSqrd 'get ' : 
    Double Length 'get ' : 
    Double Angle 'get ' : 
    Double Coordinate [Int32] 'get ' : 
    Double Y   'get ' : 
    Double X   'get ' : 
    Autodesk.AutoCAD.Geometry.Vector2d YAxis 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector2d XAxis 'get ' : 
  Methods:
    get_XAxis(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_YAxis(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    TransformBy(Matrix2d): PrivateScope, Public, HideBySig
    RotateBy(Double): PrivateScope, Public, HideBySig
    Mirror(Vector2d): PrivateScope, Public, HideBySig
    Add(Vector2d): PrivateScope, Public, HideBySig
    Subtract(Vector2d): PrivateScope, Public, HideBySig
    DivideBy(Double): PrivateScope, Public, HideBySig
    MultiplyBy(Double): PrivateScope, Public, HideBySig
    get_Coordinate(Int32): PrivateScope, Public, HideBySig, SpecialName
    Negate(): PrivateScope, Public, HideBySig
    GetPerpendicularVector(): PrivateScope, Public, HideBySig
    get_Angle(): PrivateScope, Public, HideBySig, SpecialName
    GetAngleTo(Vector2d): PrivateScope, Public, HideBySig
    GetNormal(): PrivateScope, Public, HideBySig
    GetNormal(Tolerance): PrivateScope, Public, HideBySig
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_LengthSqrd(): PrivateScope, Public, HideBySig, SpecialName
    IsUnitLength(): PrivateScope, Public, HideBySig
    IsUnitLength(Tolerance): PrivateScope, Public, HideBySig
    IsZeroLength(): PrivateScope, Public, HideBySig
    IsZeroLength(Tolerance): PrivateScope, Public, HideBySig
    IsParallelTo(Vector2d): PrivateScope, Public, HideBySig
    IsParallelTo(Vector2d, Tolerance): PrivateScope, Public, HideBySig
    IsCodirectionalTo(Vector2d): PrivateScope, Public, HideBySig
    IsCodirectionalTo(Vector2d, Tolerance): PrivateScope, Public, HideBySig
    IsPerpendicularTo(Vector2d): PrivateScope, Public, HideBySig
    IsPerpendicularTo(Vector2d, Tolerance): PrivateScope, Public, HideBySig
    IsEqualTo(Vector2d): PrivateScope, Public, HideBySig
    IsEqualTo(Vector2d, Tolerance): PrivateScope, Public, HideBySig
    DotProduct(Vector2d): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Inequality(Vector2d, Vector2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Vector2d, Vector2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Vector2d, Vector2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_UnaryNegation(Vector2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Vector2d, Vector2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Matrix2d, Vector2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Double, Vector2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Vector2d, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Vector2d, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.Extents2d: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2d, Autodesk.AutoCAD.Geometry.Point2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IFormattable
  Properties:
    Autodesk.AutoCAD.Geometry.Point2d MaxPoint 'get ' : 
    Autodesk.AutoCAD.Geometry.Point2d MinPoint 'get ' : 
  Methods:
    get_MinPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxPoint(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    IsEqualTo(Extents2d): PrivateScope, Public, HideBySig
    IsEqualTo(Extents2d, Tolerance): PrivateScope, Public, HideBySig
    op_Inequality(Extents2d, Extents2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Extents2d, Extents2d): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.Geometry.PlanarEntity: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Surface
  Properties:
    Autodesk.AutoCAD.Geometry.PlanarEquationCoefficients Coefficients 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d PointOnPlane 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    IsPerpendicularTo(PlanarEntity): PrivateScope, Public, HideBySig
    IsPerpendicularTo(PlanarEntity, Tolerance): PrivateScope, Public, HideBySig
    IsPerpendicularTo(LinearEntity3d): PrivateScope, Public, HideBySig
    IsPerpendicularTo(LinearEntity3d, Tolerance): PrivateScope, Public, HideBySig
    IsParallelTo(PlanarEntity): PrivateScope, Public, HideBySig
    IsParallelTo(PlanarEntity, Tolerance): PrivateScope, Public, HideBySig
    IsParallelTo(LinearEntity3d): PrivateScope, Public, HideBySig
    IsParallelTo(LinearEntity3d, Tolerance): PrivateScope, Public, HideBySig
    IntersectWith(LinearEntity3d): PrivateScope, Public, HideBySig
    IntersectWith(LinearEntity3d, Tolerance): PrivateScope, Public, HideBySig
    ClosestPointToLinearEntity(LinearEntity3d): PrivateScope, Public, HideBySig
    ClosestPointToLinearEntity(LinearEntity3d, Tolerance): PrivateScope, Public, HideBySig
    ClosestPointToPlanarEntity(PlanarEntity): PrivateScope, Public, HideBySig
    ClosestPointToPlanarEntity(PlanarEntity, Tolerance): PrivateScope, Public, HideBySig
    IsCoplanarTo(PlanarEntity): PrivateScope, Public, HideBySig
    IsCoplanarTo(PlanarEntity, Tolerance): PrivateScope, Public, HideBySig
    get_PointOnPlane(): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    get_Coefficients(): PrivateScope, Public, HideBySig, SpecialName
    GetCoordinateSystem(): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.Geometry.Matrix3d: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IFormattable
  Properties:
    Double ElementAt [Int32, Int32] 'get ' : 
    Double Normal 'get ' : 
    Autodesk.AutoCAD.Geometry.CoordinateSystem3d CoordinateSystem3d 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Translation 'get ' : 
    Autodesk.AutoCAD.Geometry.Matrix3d Identity 'get ' : 
  Methods:
    get_Identity(): PrivateScope, Public, Static, HideBySig, SpecialName
    PreMultiplyBy(Matrix3d): PrivateScope, Public, HideBySig
    PostMultiplyBy(Matrix3d): PrivateScope, Public, HideBySig
    Inverse(): PrivateScope, Public, HideBySig
    IsSingular(): PrivateScope, Public, HideBySig
    IsSingular(Tolerance): PrivateScope, Public, HideBySig
    Transpose(): PrivateScope, Public, HideBySig
    IsEqualTo(Matrix3d): PrivateScope, Public, HideBySig
    IsEqualTo(Matrix3d, Tolerance): PrivateScope, Public, HideBySig
    IsUniscaledOrtho(): PrivateScope, Public, HideBySig
    IsUniscaledOrtho(Tolerance): PrivateScope, Public, HideBySig
    IsScaledOrtho(): PrivateScope, Public, HideBySig
    IsScaledOrtho(Tolerance): PrivateScope, Public, HideBySig
    GetDeterminant(): PrivateScope, Public, HideBySig
    get_Translation(): PrivateScope, Public, HideBySig, SpecialName
    get_CoordinateSystem3d(): PrivateScope, Public, HideBySig, SpecialName
    Displacement(Vector3d): PrivateScope, Public, Static, HideBySig
    Rotation(Double, Vector3d, Point3d): PrivateScope, Public, Static, HideBySig
    Scaling(Double, Point3d): PrivateScope, Public, Static, HideBySig
    Mirroring(Point3d): PrivateScope, Public, Static, HideBySig
    Mirroring(Plane): PrivateScope, Public, Static, HideBySig
    Mirroring(Line3d): PrivateScope, Public, Static, HideBySig
    WorldToPlane(Vector3d): PrivateScope, Public, Static, HideBySig
    WorldToPlane(Plane): PrivateScope, Public, Static, HideBySig
    PlaneToWorld(Vector3d): PrivateScope, Public, Static, HideBySig
    PlaneToWorld(Plane): PrivateScope, Public, Static, HideBySig
    Projection(Plane, Vector3d): PrivateScope, Public, Static, HideBySig
    AlignCoordinateSystem(Point3d, Vector3d, Vector3d, Vector3d, Point3d, Vector3d, Vector3d, Vector3d): PrivateScope, Public, Static, HideBySig
    GetScale(): PrivateScope, Public, HideBySig
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    get_ElementAt(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    IsInverse(Matrix3d): PrivateScope, Public, HideBySig
    IsInverse(Matrix3d, Tolerance): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Inequality(Matrix3d, Matrix3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Matrix3d, Matrix3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Matrix3d, Matrix3d): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.Geometry.Point3d: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.Geometry.PlanarEntity, Autodesk.AutoCAD.Geometry.Point2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IFormattable
  Properties:
    Double Coordinate [Int32] 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d Origin 'get ' : 
    Double Z   'get ' : 
    Double Y   'get ' : 
    Double X   'get ' : 
  Methods:
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    get_Z(): PrivateScope, Public, HideBySig, SpecialName
    get_Origin(): PrivateScope, Public, Static, HideBySig, SpecialName
    TransformBy(Matrix3d): PrivateScope, Public, HideBySig
    RotateBy(Double, Vector3d, Point3d): PrivateScope, Public, HideBySig
    ScaleBy(Double, Point3d): PrivateScope, Public, HideBySig
    get_Coordinate(Int32): PrivateScope, Public, HideBySig, SpecialName
    MultiplyBy(Double): PrivateScope, Public, HideBySig
    DivideBy(Double): PrivateScope, Public, HideBySig
    Add(Vector3d): PrivateScope, Public, HideBySig
    Subtract(Vector3d): PrivateScope, Public, HideBySig
    GetAsVector(): PrivateScope, Public, HideBySig
    DistanceTo(Point3d): PrivateScope, Public, HideBySig
    GetVectorTo(Point3d): PrivateScope, Public, HideBySig
    IsEqualTo(Point3d): PrivateScope, Public, HideBySig
    IsEqualTo(Point3d, Tolerance): PrivateScope, Public, HideBySig
    Convert2d(PlanarEntity): PrivateScope, Public, HideBySig
    OrthoProject(Plane): PrivateScope, Public, HideBySig
    Project(Plane, Vector3d): PrivateScope, Public, HideBySig
    Mirror(Plane): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Inequality(Point3d, Point3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Point3d, Point3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Point3d, Point3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Point3d, Vector3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Point3d, Vector3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Matrix3d, Point3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Double, Point3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Point3d, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Point3d, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.Plane: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.PlanarEntity
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Vector3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Vector3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Plane): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    GetSignedDistanceTo(Point3d): PrivateScope, Public, HideBySig
    IntersectWith(BoundedPlane): PrivateScope, Public, HideBySig
    IntersectWith(BoundedPlane, Tolerance): PrivateScope, Public, HideBySig
    IntersectWith(Plane): PrivateScope, Public, HideBySig
    IntersectWith(Plane, Tolerance): PrivateScope, Public, HideBySig
    Set(Point3d, Vector3d, Vector3d): PrivateScope, Public, HideBySig
    Set(Double, Double, Double, Double): PrivateScope, Public, HideBySig
    Set(Point3d, Point3d, Point3d): PrivateScope, Public, HideBySig
    Set(Point3d, Vector3d): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.Extents3d: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IFormattable
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d MaxPoint 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d MinPoint 'get ' : 
  Methods:
    get_MinPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxPoint(): PrivateScope, Public, HideBySig, SpecialName
    Set(Point3d, Point3d): PrivateScope, Public, HideBySig
    AddPoint(Point3d): PrivateScope, Public, HideBySig
    AddExtents(Extents3d): PrivateScope, Public, HideBySig
    AddBlockExtents(BlockTableRecord): PrivateScope, Public, HideBySig
    ExpandBy(Vector3d): PrivateScope, Public, HideBySig
    TransformBy(Matrix3d): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    IsEqualTo(Extents3d): PrivateScope, Public, HideBySig
    IsEqualTo(Extents3d, Tolerance): PrivateScope, Public, HideBySig
    op_Inequality(Extents3d, Extents3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Extents3d, Extents3d): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.BlockTableRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.SymbolTableRecord
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerable
  Fields:
    System.String ModelSpace IsConst IsConst : Public, Static
    System.String PaperSpace IsConst IsConst : Public, Static
  Properties:
    Autodesk.AutoCAD.DatabaseServices.HyperLinkCollection Hyperlinks 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.BlockTableRecord IncludingErased 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.UnitsValue Units 'get set' : 
    Boolean IsDynamicBlock 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.BlockScaling BlockScaling 'get set' : 
    Boolean Explodable 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId DrawOrderTableId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.XrefStatus XrefStatus 'get ' : 
    Boolean IsUnloaded 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId LayoutId 'get set' : 
    Boolean IsLayout 'get ' : 
    Boolean IsFromOverlayReference 'get set' : 
    Boolean IsFromExternalReference 'get ' : 
    Boolean IsAnonymous 'get ' : 
    System.Drawing.Bitmap PreviewIcon 'get set' : 
    Boolean HasPreviewIcon 'get ' : 
    Boolean HasAttributeDefinitions 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId BlockEndId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId BlockBeginId 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d Origin 'get set' : 
    System.String PathName 'get set' : 
    System.String Comments 'get set' : 
  Events:
    Autodesk.AutoCAD.DatabaseServices.BlockInsertionPointsEventHandler BlockInsertionPoints: SpecialName
  Methods:
    GetEnumerator(): PrivateScope, Public, HideBySig
    AppendEntity(Entity): PrivateScope, Public, HideBySig
    get_Comments(): PrivateScope, Public, HideBySig, SpecialName
    set_Comments(String): PrivateScope, Public, HideBySig, SpecialName
    get_PathName(): PrivateScope, Public, HideBySig, SpecialName
    set_PathName(String): PrivateScope, Public, HideBySig, SpecialName
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    set_Origin(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_BlockBeginId(): PrivateScope, Public, HideBySig, SpecialName
    get_BlockEndId(): PrivateScope, Public, HideBySig, SpecialName
    get_HasAttributeDefinitions(): PrivateScope, Public, HideBySig, SpecialName
    get_HasPreviewIcon(): PrivateScope, Public, HideBySig, SpecialName
    get_PreviewIcon(): PrivateScope, Public, HideBySig, SpecialName
    set_PreviewIcon(Bitmap): PrivateScope, Public, HideBySig, SpecialName
    get_IsAnonymous(): PrivateScope, Public, HideBySig, SpecialName
    get_IsFromExternalReference(): PrivateScope, Public, HideBySig, SpecialName
    get_IsFromOverlayReference(): PrivateScope, Public, HideBySig, SpecialName
    set_IsFromOverlayReference(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsLayout(): PrivateScope, Public, HideBySig, SpecialName
    get_LayoutId(): PrivateScope, Public, HideBySig, SpecialName
    set_LayoutId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    GetBlockReferenceIds(Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetErasedBlockReferenceIds(): PrivateScope, Public, HideBySig
    GetAnonymousBlockIds(): PrivateScope, Public, HideBySig
    GetXrefDatabase(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_IsUnloaded(): PrivateScope, Public, HideBySig, SpecialName
    set_IsUnloaded(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_XrefStatus(): PrivateScope, Public, HideBySig, SpecialName
    get_DrawOrderTableId(): PrivateScope, Public, HideBySig, SpecialName
    get_Explodable(): PrivateScope, Public, HideBySig, SpecialName
    set_Explodable(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_BlockScaling(): PrivateScope, Public, HideBySig, SpecialName
    set_BlockScaling(BlockScaling): PrivateScope, Public, HideBySig, SpecialName
    get_IsDynamicBlock(): PrivateScope, Public, HideBySig, SpecialName
    add_BlockInsertionPoints(BlockInsertionPointsEventHandler): PrivateScope, Public, Static, HideBySig, SpecialName
    remove_BlockInsertionPoints(BlockInsertionPointsEventHandler): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Units(): PrivateScope, Public, HideBySig, SpecialName
    set_Units(UnitsValue): PrivateScope, Public, HideBySig, SpecialName
    AssumeOwnershipOf(ObjectIdCollection): PrivateScope, Public, HideBySig
    get_IncludingErased(): PrivateScope, Public, HideBySig, SpecialName
    UpdateAnonymousBlocks(): PrivateScope, Public, HideBySig
    get_Hyperlinks(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.Runtime.RXObject: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Interfaces:
    System.ICloneable
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    GetClass(Type): PrivateScope, Public, Static, HideBySig
    X(RXClass): PrivateScope, Public, HideBySig
    QueryX(RXClass): PrivateScope, Public, HideBySig
    GetRXClass(): PrivateScope, Public, HideBySig
    CompareTo(Object): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyFrom(RXObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Autodesk.AutoCAD.DatabaseServices.Handle: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsOne 'get ' : 
    Int64 Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    op_Inequality(Handle, Handle): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Handle, Handle): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsOne(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
Interface Autodesk.AutoCAD.DatabaseServices.ISubObject: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Properties:
    System.Object Parent 'get set' : 
  Methods:
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Parent(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.OpenModeAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.OpenMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.OpenMode OpenMode 'get ' : 
  Methods:
    get_OpenMode(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.OpenMode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.OpenMode ForRead = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.OpenMode ForWrite = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.OpenMode ForNotify = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.CallerMustCloseAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.DBObject: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.Drawable
  Properties:
    Autodesk.AutoCAD.DatabaseServices.PaperOrientationStates PaperOrientation 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.AnnotativeStates Annotative 'get set' : 
    Boolean HasFields 'get ' : 
    System.Object AcadObject 'get ' : 
    System.Guid ClassID 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.FullDwgVersion ObjectBirthVersion 'get ' : 
    Boolean HasSaveVersionOverride 'get set' : 
    Boolean IsObjectIdsInFlux 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.DwgFiler UndoFiler 'get ' : 
    Boolean IsAProxy 'get ' : 
    Boolean IsTransactionResident 'get ' : 
    Boolean IsReallyClosing 'get ' : 
    Boolean IsCancelling 'get ' : 
    Boolean IsUndoing 'get ' : 
    Boolean IsNotifying 'get ' : 
    Boolean IsNewObject 'get ' : 
    Boolean IsModifiedGraphics 'get ' : 
    Boolean IsModifiedXData 'get ' : 
    Boolean IsModified 'get ' : 
    Boolean IsNotifyEnabled 'get ' : 
    Boolean IsWriteEnabled 'get ' : 
    Boolean IsReadEnabled 'get ' : 
    Boolean IsErased 'get ' : 
    Boolean IsEraseStatusToggled 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ResultBuffer XData 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.DuplicateRecordCloning MergeStyle 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ExtensionDictionary 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.Drawable Drawable 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Database Database 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Handle Handle 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId OwnerId 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ObjectId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Id 'get ' : 
    Boolean IsPersistent 'get ' : 
  Events:
    Autodesk.AutoCAD.DatabaseServices.ObjectClosedEventHandler ObjectClosed: SpecialName
    System.EventHandler Reappended: SpecialName
    System.EventHandler Unappended: SpecialName
    System.EventHandler ModifiedXData: SpecialName
    System.EventHandler ModifyUndone: SpecialName
    Autodesk.AutoCAD.DatabaseServices.ObjectEventHandler SubObjectModified: SpecialName
    System.EventHandler Modified: SpecialName
    System.EventHandler OpenedForModify: SpecialName
    System.EventHandler Goodbye: SpecialName
    Autodesk.AutoCAD.DatabaseServices.ObjectErasedEventHandler Erased: SpecialName
    Autodesk.AutoCAD.DatabaseServices.ObjectEventHandler Copied: SpecialName
    System.EventHandler Cancelled: SpecialName
  Methods:
    ResetScaleDependentProperties(): PrivateScope, Public, HideBySig
    get_PaperOrientation(): PrivateScope, Public, HideBySig, SpecialName
    SetPaperOrientation(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ApplyPaperOrientationTransform(Viewport): PrivateScope, Public, HideBySig
    SupportsCollection(String): PrivateScope, Public, HideBySig
    HasContext(ObjectContext): PrivateScope, Public, HideBySig
    AddContext(ObjectContext): PrivateScope, Public, HideBySig
    RemoveContext(ObjectContext): PrivateScope, Public, HideBySig
    GetEventExtender(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    add_Cancelled(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Cancelled(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_Copied(ObjectEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Copied(ObjectEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_Erased(ObjectErasedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Erased(ObjectErasedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_Goodbye(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Goodbye(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_OpenedForModify(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_OpenedForModify(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_Modified(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Modified(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_SubObjectModified(ObjectEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_SubObjectModified(ObjectEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_ModifyUndone(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ModifyUndone(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_ModifiedXData(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ModifiedXData(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_Unappended(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Unappended(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_Reappended(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Reappended(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_ObjectClosed(ObjectClosedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ObjectClosed(ObjectClosedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    GetParameterInterface(String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_IsPersistent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Id(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ObjectId(): PrivateScope, Public, HideBySig, SpecialName
    get_OwnerId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_OwnerId(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_Database(): PrivateScope, Public, HideBySig, SpecialName
    DeepClone(DBObject, IdMapping, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    WblockClone(RXObject, IdMapping, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    DecomposeForSave(DwgVersion): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Drawable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CreateExtensionDictionary(): PrivateScope, Public, HideBySig
    get_ExtensionDictionary(): PrivateScope, Public, HideBySig, SpecialName
    ReleaseExtensionDictionary(): PrivateScope, Public, HideBySig
    UpgradeOpen(): PrivateScope, Public, HideBySig
    UpgradeFromNotify(): PrivateScope, Public, HideBySig
    DowngradeOpen(): PrivateScope, Public, HideBySig
    DowngradeToNotify(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Cancel(): PrivateScope, Public, HideBySig (Obsolete)
    Close(): PrivateScope, Public, HideBySig (Obsolete)
    CloseAndPage(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig (Obsolete)
    Erase(): PrivateScope, Public, HideBySig
    Erase(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    HandOverTo(DBObject, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SwapIdWith(ObjectId, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SwapReferences(IdMapping): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Audit(AuditInfo): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DwgIn(DwgFiler): PrivateScope, Public, HideBySig
    DwgOut(DwgFiler): PrivateScope, Public, HideBySig
    DxfIn(DxfFiler): PrivateScope, Public, HideBySig
    DxfOut(DxfFiler): PrivateScope, Public, HideBySig
    get_MergeStyle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MergeStyle(DuplicateRecordCloning): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_XData(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_XData(ResultBuffer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    XDataTransformBy(Matrix3d): PrivateScope, Public, HideBySig
    GetXDataForApplication(String): PrivateScope, Public, HideBySig
    GetBinaryDataForKey(String): PrivateScope, Public, HideBySig
    SetBinaryDataForKey(String, Byte[]): PrivateScope, Public, HideBySig
    get_IsEraseStatusToggled(): PrivateScope, Public, HideBySig, SpecialName
    get_IsErased(): PrivateScope, Public, HideBySig, SpecialName
    get_IsReadEnabled(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWriteEnabled(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNotifyEnabled(): PrivateScope, Public, HideBySig, SpecialName
    get_IsModified(): PrivateScope, Public, HideBySig, SpecialName
    get_IsModifiedXData(): PrivateScope, Public, HideBySig, SpecialName
    get_IsModifiedGraphics(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNewObject(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNotifying(): PrivateScope, Public, HideBySig, SpecialName
    get_IsUndoing(): PrivateScope, Public, HideBySig, SpecialName
    get_IsCancelling(): PrivateScope, Public, HideBySig, SpecialName
    get_IsReallyClosing(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTransactionResident(): PrivateScope, Public, HideBySig, SpecialName
    get_IsAProxy(): PrivateScope, Public, HideBySig, SpecialName
    DisableUndoRecording(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_UndoFiler(): PrivateScope, Public, HideBySig, SpecialName
    ApplyPartialUndo(DwgFiler, RXClass): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasPersistentReactor(ObjectId): PrivateScope, Public, HideBySig
    GetReactors(): PrivateScope, Public, HideBySig (Obsolete)
    GetTransientReactors(): PrivateScope, Public, HideBySig
    GetPersistentReactorIds(): PrivateScope, Public, HideBySig
    SetObjectIdsInFlux(): PrivateScope, Public, HideBySig
    get_IsObjectIdsInFlux(): PrivateScope, Public, HideBySig, SpecialName
    get_HasSaveVersionOverride(): PrivateScope, Public, HideBySig, SpecialName
    set_HasSaveVersionOverride(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    GetObjectSaveVersion(DxfFiler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetObjectSaveVersion(DwgFiler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_ObjectBirthVersion(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ClassID(): PrivateScope, Public, HideBySig, SpecialName
    get_AcadObject(): PrivateScope, Public, HideBySig, SpecialName
    FromAcadObject(Object): PrivateScope, Public, Static, HideBySig
    IsCustomObject(ObjectId): PrivateScope, Public, Static, HideBySig
    GetField(String): PrivateScope, Public, HideBySig
    GetField(): PrivateScope, Public, HideBySig
    SetField(String, Field): PrivateScope, Public, HideBySig
    SetField(Field): PrivateScope, Public, HideBySig
    get_HasFields(): PrivateScope, Public, HideBySig, SpecialName
    RemoveField(ObjectId): PrivateScope, Public, HideBySig
    RemoveField(String): PrivateScope, Public, HideBySig
    RemoveField(): PrivateScope, Public, HideBySig
    get_Annotative(): PrivateScope, Public, HideBySig, SpecialName
    set_Annotative(AnnotativeStates): PrivateScope, Public, HideBySig, SpecialName
    SetFromStyle(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.Database: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
    Void .ctor(Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Dynamic.IDynamicMetaObjectProvider
  Properties:
    Autodesk.AutoCAD.DatabaseServices.DbHomeView HomeView 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId GeoDataObject 'get ' : 
    Int32 UpdateThumbnail 'get set' : 
    Double MsOleScale 'get set' : 
    Int32 LayerNotify 'get set' : 
    Int32 LayerEval 'get set' : 
    Int32 Indexctl 'get set' : 
    Int32 PdfFrame 'get set' : 
    Int32 DgnFrame 'get set' : 
    Int32 DwfFrame 'get set' : 
    Boolean MsLtScale 'get set' : 
    Boolean AnnotativeDwg 'get set' : 
    Boolean AnnoAllVisible 'get set' : 
    Double ShadowPlaneLocation 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Cmaterial 'get set' : 
    Int32 Cshadow 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.TimeZone TimeZone 'get set' : 
    Double LoftMag2 'get set' : 
    Double LoftMag1 'get set' : 
    Double LoftAng2 'get set' : 
    Double LoftAng1 'get set' : 
    Int32 LoftNormals 'get set' : 
    Int32 LoftParam 'get set' : 
    Double PsolHeight 'get set' : 
    Double PsolWidth 'get set' : 
    Int32 ShowHist 'get set' : 
    Int32 SolidHist 'get set' : 
    Int32 DxEval 'get set' : 
    Double StepSize 'get set' : 
    Double StepsPerSec 'get set' : 
    Boolean CameraDisplay 'get set' : 
    Double LensLength 'get set' : 
    Double CameraHeight 'get set' : 
    Autodesk.AutoCAD.LayerManager.LayerFilterTree LayerFilters 'get set' : 
    Byte DrawOrderCtl 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfo SummaryInfo 'get set' : 
    Int32 Dimzin 'get set' : 
    Boolean Dimupt 'get set' : 
    Int32 Dimtzin 'get set' : 
    Boolean Dimtxtdirection 'get set' : 
    Double Dimtxt 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Dimtxsty 'get set' : 
    Double Dimtvp 'get set' : 
    Double Dimtsz 'get set' : 
    Double Dimtp 'get set' : 
    Int32 Dimtolj 'get set' : 
    Boolean Dimtol 'get set' : 
    Boolean Dimtoh 'get set' : 
    Boolean Dimtofl 'get set' : 
    Int32 Dimtmove 'get set' : 
    Double Dimtm 'get set' : 
    Boolean Dimtix 'get set' : 
    Boolean Dimtih 'get set' : 
    Autodesk.AutoCAD.Colors.Color Dimtfillclr 'get set' : 
    Int32 Dimtfill 'get set' : 
    Double Dimtfac 'get set' : 
    Int32 Dimtdec 'get set' : 
    Int32 Dimtad 'get set' : 
    Boolean Dimsoxd 'get set' : 
    Boolean Dimse2 'get set' : 
    Boolean Dimse1 'get set' : 
    Boolean Dimsd2 'get set' : 
    Boolean Dimsd1 'get set' : 
    Double Dimscale 'get set' : 
    Boolean Dimsah 'get set' : 
    Double Dimrnd 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LineWeight Dimlwe 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LineWeight Dimlwd 'get set' : 
    Int32 Dimlunit 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Dimltype 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Dimltex2 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Dimltex1 'get set' : 
    Boolean Dimlim 'get set' : 
    Double Dimlfac 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Dimldrblk 'get set' : 
    Int32 Dimjust 'get set' : 
    Double Dimjogang 'get set' : 
    Double Dimgap 'get set' : 
    Double Dimfxlen 'get set' : 
    Boolean DimfxlenOn 'get set' : 
    Int32 Dimfrac 'get set' : 
    Double Dimexo 'get set' : 
    Double Dimexe 'get set' : 
    Char Dimdsep 'get set' : 
    Double Dimdli 'get set' : 
    Double Dimdle 'get set' : 
    Int32 Dimdec 'get set' : 
    Autodesk.AutoCAD.Colors.Color Dimclrt 'get set' : 
    Autodesk.AutoCAD.Colors.Color Dimclre 'get set' : 
    Autodesk.AutoCAD.Colors.Color Dimclrd 'get set' : 
    Double Dimcen 'get set' : 
    Int32 Dimazin 'get set' : 
    Int32 Dimaunit 'get set' : 
    Int32 Dimatfit 'get set' : 
    Double Dimasz 'get set' : 
    Int32 Dimarcsym 'get set' : 
    System.String Dimapost 'get set' : 
    Int32 Dimaltz 'get set' : 
    Int32 Dimaltu 'get set' : 
    Int32 Dimalttz 'get set' : 
    Int32 Dimalttd 'get set' : 
    Double Dimaltrnd 'get set' : 
    Double Dimaltf 'get set' : 
    Int32 Dimaltd 'get set' : 
    Boolean Dimalt 'get set' : 
    Int32 Dimadec 'get set' : 
    System.Object AcadDatabase 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.AnnotationScale Cannoscale 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId dragvs 'get set' : 
    Boolean LightsInBlocks 'get set' : 
    Byte LightingUnits 'get set' : 
    Int32 TileModeLightSynch 'get set' : 
    Int32 LightGlyphDisplay 'get set' : 
    Double NorthDirection 'get set' : 
    Double Longitude 'get set' : 
    Double Latitude 'get set' : 
    Boolean AllowExtendedNames 'get set' : 
    Int32 IntersectColor 'get set' : 
    Int32 IntersectDisplay 'get set' : 
    Int32 ObscuredLineType 'get set' : 
    Int32 ObscuredColor 'get set' : 
    Int32 HaloGap 'get set' : 
    Int32 HideText 'get set' : 
    Int32 DimAssoc 'get set' : 
    Int32 SortEnts 'get set' : 
    Boolean DwgFileWasSavedByAutodeskSoftware 'get ' : 
    Double ViewportScaleDefault 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId CurrentViewportTableRecordId 'get ' : 
    Boolean PlotStyleMode 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.UnitsValue Insunits 'get set' : 
    Int32 TstackSize 'get set' : 
    Int32 TStackAlign 'get set' : 
    System.String VersionGuid 'get set' : 
    System.String FingerprintGuid 'get set' : 
    Boolean IsPartiallyOpened 'get ' : 
    Boolean IsBeingDestroyed 'get ' : 
    System.String Filename 'get ' : 
    System.String StyleSheet 'get set' : 
    System.String HyperlinkBase 'get set' : 
    System.String ProjectName 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Dimblk2 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Dimblk1 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Dimblk 'get set' : 
    System.String Dimpost 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.OrthographicView UcsOrthographic 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId UcsBase 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Ucsname 'get set' : 
    Autodesk.AutoCAD.Geometry.CoordinateSystem3d Ucs 'set' : 
    Autodesk.AutoCAD.Geometry.Vector3d Ucsydir 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Ucsxdir 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d Ucsorg 'get ' : 
    Double Elevation 'get set' : 
    Autodesk.AutoCAD.Geometry.Point2d Limmax 'get set' : 
    Autodesk.AutoCAD.Geometry.Point2d Limmin 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Extmax 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Extmin 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Insbase 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.OrthographicView PucsOrthographic 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId PucsBase 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Pucsname 'get set' : 
    Autodesk.AutoCAD.Geometry.CoordinateSystem3d Pucs 'set' : 
    Autodesk.AutoCAD.Geometry.Vector3d Pucsydir 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Pucsxdir 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d Pucsorg 'get ' : 
    Double Pelevation 'get set' : 
    Autodesk.AutoCAD.Geometry.Point2d Plimmax 'get set' : 
    Autodesk.AutoCAD.Geometry.Point2d Plimmin 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Pextmax 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Pextmin 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Pinsbase 'get set' : 
    Double Celtscale 'get set' : 
    Double Cmlscale 'get set' : 
    Int32 Cmljust 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId CmlstyleID 'get set' : 
    Autodesk.AutoCAD.Colors.Color Interferecolor 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Interferevpvs 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Interfereobjvs 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId DetailViewStyle 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId SectionViewStyle 'get set' : 
    Double MLeaderscale 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId MLeaderstyle 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Tablestyle 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Dimstyle 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Celtype 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Textstyle 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.PlotStyleDescriptor PlotStyleNameId 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.Handle Handseed 'get set' : 
    Autodesk.AutoCAD.Colors.Transparency Cetransparency 'get set' : 
    Autodesk.AutoCAD.Colors.Color Cecolor 'get set' : 
    System.TimeSpan Tdusrtimer 'get ' : 
    System.TimeSpan Tdindwg 'get ' : 
    System.DateTime Tduupdate 'get ' : 
    System.DateTime Tducreate 'get ' : 
    System.DateTime Tdupdate 'get ' : 
    System.DateTime Tdcreate 'get ' : 
    Autodesk.AutoCAD.Geometry.Point2d HpOrigin 'get set' : 
    Boolean HpInherit 'get set' : 
    System.String Menu 'get ' : 
    Double Facetres 'get set' : 
    Double Chamferd 'get set' : 
    Double Chamferc 'get set' : 
    Double Chamferb 'get set' : 
    Double Chamfera 'get set' : 
    Double Userr5 'get set' : 
    Double Userr4 'get set' : 
    Double Userr3 'get set' : 
    Double Userr2 'get set' : 
    Double Userr1 'get set' : 
    Double Plinewid 'get set' : 
    Double Pdsize 'get set' : 
    Double Angbase 'get set' : 
    Boolean OleStartUp 'get set' : 
    Boolean XrefEditEnabled 'get set' : 
    Boolean LineWeightDisplay 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.JoinStyle JoinStyle 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.EndCap EndCaps 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LineWeight Celweight 'get set' : 
    Double Thickness 'get set' : 
    Double Filletrad 'get set' : 
    Double Sketchinc 'get set' : 
    Double Tracewid 'get set' : 
    Double Textsize 'get set' : 
    Double Ltscale 'get set' : 
    Int32 Isolines 'get set' : 
    Int32 Maxactvp 'get set' : 
    Int32 Unitmode 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.MeasurementValue Measurement 'get set' : 
    Int32 Shadedif 'get set' : 
    Int32 Shadedge 'get set' : 
    Int32 Splinetype 'get set' : 
    Int32 Surftab2 'get set' : 
    Int32 Surftab1 'get set' : 
    Int32 Surftype 'get set' : 
    Int32 Surfv 'get set' : 
    Int32 Surfu 'get set' : 
    Int32 Splinesegs 'get set' : 
    Int32 Useri5 'get set' : 
    Int32 Useri4 'get set' : 
    Int32 Useri3 'get set' : 
    Int32 Useri2 'get set' : 
    Int32 Useri1 'get set' : 
    Int32 Pdmode 'get set' : 
    Int32 Attmode 'get set' : 
    Int32 Auprec 'get set' : 
    Int32 Aunits 'get set' : 
    Int32 Luprec 'get set' : 
    Int32 Lunits 'get set' : 
    Int32 Treedepth 'get set' : 
    Boolean Visretain 'get set' : 
    Boolean Plimcheck 'get set' : 
    Boolean Worldview 'get set' : 
    Boolean Mirrtext 'get set' : 
    Int32 XclipFrame 'get set' : 
    Boolean Splframe 'get set' : 
    Boolean Angdir 'get set' : 
    Boolean Skpoly 'get set' : 
    Boolean Usrtimer 'get set' : 
    Boolean PlineEllipse 'get set' : 
    Boolean DispSilh 'get set' : 
    Int32 Saveproxygraphics 'get set' : 
    Boolean Limcheck 'get set' : 
    Boolean Psltscale 'get set' : 
    Boolean Qtextmode 'get set' : 
    Boolean Fillmode 'get set' : 
    Boolean Regenmode 'get set' : 
    Boolean Orthomode 'get set' : 
    Boolean Plinegen 'get set' : 
    Boolean Dimsho 'get set' : 
    Boolean Dimaso 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.SecurityParameters SecurityParameters 'get set' : 
    Boolean IsEmr 'get ' : 
    Boolean RetainOriginalThumbnailBitmap 'get set' : 
    System.Drawing.Bitmap ThumbnailBitmap 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId XrefBlockId 'get ' : 
    Int32 MaintenanceReleaseVersion 'get ' : 
    Boolean UndoRecording 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion OriginalFileSavedByMaintenanceVersion 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion OriginalFileMaintenanceVersion 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion LastSavedAsMaintenanceVersion 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.DwgVersion OriginalFileSavedByVersion 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.DwgVersion OriginalFileVersion 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.DwgVersion LastSavedAsVersion 'get ' : 
    System.String OriginalFileName 'get ' : 
    Int32 NumberOfSaves 'get ' : 
    Int32 ApproxNumObjects 'get ' : 
    Boolean NeedsRecovery 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.DataLinkManager DataLinkManager 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId DataLinkDictionaryId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId SectionManagerId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId DetailViewStyleDictionaryId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId SectionViewStyleDictionaryId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId MLeaderStyleDictionaryId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId TableStyleDictionaryId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId CurrentSpaceId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId PaperSpaceVportId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ByBlockLinetype 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ByLayerLinetype 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ContinuousLinetype 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId LayerZero 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId PlotSettingsDictionaryId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId NamedObjectsDictionaryId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ColorDictionaryId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId VisualStyleDictionaryId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId MaterialDictionaryId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId PlotStyleNameDictionaryId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId LayoutDictionaryId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId GroupDictionaryId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId MLStyleDictionaryId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId DimStyleTableId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId RegAppTableId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ViewportTableId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId UcsTableId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ViewTableId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId TextStyleTableId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId BlockTableId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Clayer 'get set' : 
    Boolean TileMode 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectContextManager ObjectContextManager 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.LayerStateManager LayerStateManager 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.TransactionManager TransactionManager 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId LinetypeTableId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId LayerTableId 'get ' : 
  Events:
    Autodesk.AutoCAD.DatabaseServices.XrefSubCommandEndEventHandler XrefSubCommandEnd: SpecialName
    Autodesk.AutoCAD.DatabaseServices.XrefSubCommandAbortedEventHandler XrefSubCommandAborted: SpecialName
    Autodesk.AutoCAD.DatabaseServices.XrefPreXrefLockFileEventHandler XrefPreXrefLockFile: SpecialName
    Autodesk.AutoCAD.DatabaseServices.XrefSubCommandStartEventHandler XrefSubCommandStart: SpecialName
    System.EventHandler Disposed: SpecialName
    Autodesk.AutoCAD.DatabaseServices.ProxyResurrectionCompletedEventHandler ProxyResurrectionCompleted: SpecialName
    Autodesk.AutoCAD.DatabaseServices.SystemVariableChangedEventHandler SystemVariableChanged: SpecialName
    Autodesk.AutoCAD.DatabaseServices.SystemVariableChangingEventHandler SystemVariableWillChange: SpecialName
    Autodesk.AutoCAD.DatabaseServices.ObjectErasedEventHandler ObjectErased: SpecialName
    Autodesk.AutoCAD.DatabaseServices.ObjectEventHandler ObjectModified: SpecialName
    Autodesk.AutoCAD.DatabaseServices.ObjectEventHandler ObjectOpenedForModify: SpecialName
    Autodesk.AutoCAD.DatabaseServices.ObjectEventHandler ObjectReappended: SpecialName
    Autodesk.AutoCAD.DatabaseServices.ObjectEventHandler ObjectUnappended: SpecialName
    Autodesk.AutoCAD.DatabaseServices.ObjectEventHandler ObjectAppended: SpecialName
    System.EventHandler XrefRestoreEnded: SpecialName
    System.EventHandler XrefRestoreAborted: SpecialName
    Autodesk.AutoCAD.DatabaseServices.XrefBeginOperationEventHandler XrefBeginRestore: SpecialName
    Autodesk.AutoCAD.DatabaseServices.XrefComandeeredEventHandler XrefComandeered: SpecialName
    Autodesk.AutoCAD.DatabaseServices.XrefRedirectedEventHandler XrefRedirected: SpecialName
    System.EventHandler XrefAttachEnded: SpecialName
    System.EventHandler XrefAttachAborted: SpecialName
    Autodesk.AutoCAD.DatabaseServices.XrefBeginOperationEventHandler XrefBeginOtherAttached: SpecialName
    Autodesk.AutoCAD.DatabaseServices.XrefBeginOperationEventHandler XrefBeginAttached: SpecialName
    System.EventHandler PartialOpenNotice: SpecialName
    System.EventHandler DeepCloneEnded: SpecialName
    System.EventHandler DeepCloneAborted: SpecialName
    Autodesk.AutoCAD.DatabaseServices.IdMappingEventHandler BeginDeepCloneTranslation: SpecialName
    Autodesk.AutoCAD.DatabaseServices.IdMappingEventHandler BeginDeepClone: SpecialName
    Autodesk.AutoCAD.DatabaseServices.BeginWblockObjectsEventHandler BeginWblockObjects: SpecialName
    System.EventHandler WblockEnded: SpecialName
    System.EventHandler WblockAborted: SpecialName
    Autodesk.AutoCAD.DatabaseServices.IdMappingEventHandler WblockMappingAvailable: SpecialName
    Autodesk.AutoCAD.DatabaseServices.BeginWblockEntireDatabaseEventHandler BeginWblockEntireDatabase: SpecialName
    Autodesk.AutoCAD.DatabaseServices.BeginWblockBlockEventHandler BeginWblockBlock: SpecialName
    Autodesk.AutoCAD.DatabaseServices.BeginWblockSelectedObjectsEventHandler BeginWblockSelectedObjects: SpecialName
    Autodesk.AutoCAD.DatabaseServices.WblockNoticeEventHandler WblockNotice: SpecialName
    System.EventHandler InsertEnded: SpecialName
    System.EventHandler InsertAborted: SpecialName
    Autodesk.AutoCAD.DatabaseServices.IdMappingEventHandler InsertMappingAvailable: SpecialName
    Autodesk.AutoCAD.DatabaseServices.BeginInsertEventHandler BeginInsert: SpecialName
    System.EventHandler DxfOutComplete: SpecialName
    System.EventHandler AbortDxfOut: SpecialName
    System.EventHandler BeginDxfOut: SpecialName
    System.EventHandler DxfInComplete: SpecialName
    System.EventHandler AbortDxfIn: SpecialName
    System.EventHandler BeginDxfIn: SpecialName
    System.EventHandler AbortSave: SpecialName
    Autodesk.AutoCAD.DatabaseServices.DatabaseIOEventHandler SaveComplete: SpecialName
    Autodesk.AutoCAD.DatabaseServices.DatabaseIOEventHandler BeginSave: SpecialName
    System.EventHandler DatabaseToBeDestroyed: SpecialName
    System.EventHandler DatabaseConstructed: SpecialName
    System.EventHandler InitialDwgFileOpenComplete: SpecialName
    Autodesk.AutoCAD.DatabaseServices.DatabaseIOEventHandler DwgFileOpened: SpecialName
  Methods:
    remove_InsertMappingAvailable(IdMappingEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_InsertAborted(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_InsertAborted(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_InsertEnded(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_InsertEnded(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_WblockNotice(WblockNoticeEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_WblockNotice(WblockNoticeEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_BeginWblockSelectedObjects(BeginWblockSelectedObjectsEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_BeginWblockSelectedObjects(BeginWblockSelectedObjectsEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_BeginWblockBlock(BeginWblockBlockEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_BeginWblockBlock(BeginWblockBlockEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_BeginWblockEntireDatabase(BeginWblockEntireDatabaseEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_BeginWblockEntireDatabase(BeginWblockEntireDatabaseEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_WblockMappingAvailable(IdMappingEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_WblockMappingAvailable(IdMappingEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_WblockAborted(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_WblockAborted(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_WblockEnded(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_WblockEnded(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_BeginWblockObjects(BeginWblockObjectsEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_BeginWblockObjects(BeginWblockObjectsEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_BeginDeepClone(IdMappingEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_BeginDeepClone(IdMappingEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_BeginDeepCloneTranslation(IdMappingEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_BeginDeepCloneTranslation(IdMappingEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_DeepCloneAborted(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_DeepCloneAborted(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_DeepCloneEnded(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_DeepCloneEnded(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_PartialOpenNotice(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_PartialOpenNotice(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_XrefBeginAttached(XrefBeginOperationEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_XrefBeginAttached(XrefBeginOperationEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_XrefBeginOtherAttached(XrefBeginOperationEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_XrefBeginOtherAttached(XrefBeginOperationEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_XrefAttachAborted(EventHandler): PrivateScope, Public, Static, HideBySig, SpecialName
    remove_XrefAttachAborted(EventHandler): PrivateScope, Public, Static, HideBySig, SpecialName
    add_XrefAttachEnded(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_XrefAttachEnded(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_XrefRedirected(XrefRedirectedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_XrefRedirected(XrefRedirectedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_XrefComandeered(XrefComandeeredEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_XrefComandeered(XrefComandeeredEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_XrefBeginRestore(XrefBeginOperationEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_XrefBeginRestore(XrefBeginOperationEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_XrefRestoreAborted(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_XrefRestoreAborted(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_XrefRestoreEnded(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_XrefRestoreEnded(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_ObjectAppended(ObjectEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ObjectAppended(ObjectEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_ObjectUnappended(ObjectEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ObjectUnappended(ObjectEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_ObjectReappended(ObjectEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ObjectReappended(ObjectEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_ObjectOpenedForModify(ObjectEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ObjectOpenedForModify(ObjectEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_ObjectModified(ObjectEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ObjectModified(ObjectEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_ObjectErased(ObjectErasedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ObjectErased(ObjectErasedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_SystemVariableWillChange(SystemVariableChangingEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_SystemVariableWillChange(SystemVariableChangingEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_SystemVariableChanged(SystemVariableChangedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_SystemVariableChanged(SystemVariableChangedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_ProxyResurrectionCompleted(ProxyResurrectionCompletedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_ProxyResurrectionCompleted(ProxyResurrectionCompletedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_Disposed(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_Disposed(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_XrefSubCommandStart(XrefSubCommandStartEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_XrefSubCommandStart(XrefSubCommandStartEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_XrefPreXrefLockFile(XrefPreXrefLockFileEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_XrefPreXrefLockFile(XrefPreXrefLockFileEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_XrefSubCommandAborted(XrefSubCommandAbortedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_XrefSubCommandAborted(XrefSubCommandAbortedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_XrefSubCommandEnd(XrefSubCommandEndEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_XrefSubCommandEnd(XrefSubCommandEndEventHandler): PrivateScope, Public, HideBySig, SpecialName
    EraseEmptyObjects(Int32): PrivateScope, Public, HideBySig
    CountEmptyObjects(Int32): PrivateScope, Public, HideBySig
    GetMetaObject(Expression): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_PsolWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_PsolWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_PsolHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_PsolHeight(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LoftParam(): PrivateScope, Public, HideBySig, SpecialName
    set_LoftParam(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_LoftNormals(): PrivateScope, Public, HideBySig, SpecialName
    set_LoftNormals(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_LoftAng1(): PrivateScope, Public, HideBySig, SpecialName
    set_LoftAng1(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LoftAng2(): PrivateScope, Public, HideBySig, SpecialName
    set_LoftAng2(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LoftMag1(): PrivateScope, Public, HideBySig, SpecialName
    set_LoftMag1(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LoftMag2(): PrivateScope, Public, HideBySig, SpecialName
    set_LoftMag2(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TimeZone(): PrivateScope, Public, HideBySig, SpecialName
    set_TimeZone(TimeZone): PrivateScope, Public, HideBySig, SpecialName
    TimeZoneOffset(TimeZone): PrivateScope, Public, HideBySig
    TimeZoneDescription(TimeZone): PrivateScope, Public, HideBySig
    SetTimeZoneAsUtcOffset(Double): PrivateScope, Public, HideBySig
    get_Cshadow(): PrivateScope, Public, HideBySig, SpecialName
    set_Cshadow(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Cmaterial(): PrivateScope, Public, HideBySig, SpecialName
    set_Cmaterial(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_ShadowPlaneLocation(): PrivateScope, Public, HideBySig, SpecialName
    set_ShadowPlaneLocation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_AnnoAllVisible(): PrivateScope, Public, HideBySig, SpecialName
    set_AnnoAllVisible(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_AnnotativeDwg(): PrivateScope, Public, HideBySig, SpecialName
    set_AnnotativeDwg(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_MsLtScale(): PrivateScope, Public, HideBySig, SpecialName
    set_MsLtScale(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_DwfFrame(): PrivateScope, Public, HideBySig, SpecialName
    set_DwfFrame(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DgnFrame(): PrivateScope, Public, HideBySig, SpecialName
    set_DgnFrame(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_PdfFrame(): PrivateScope, Public, HideBySig, SpecialName
    set_PdfFrame(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Indexctl(): PrivateScope, Public, HideBySig, SpecialName
    set_Indexctl(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_LayerEval(): PrivateScope, Public, HideBySig, SpecialName
    set_LayerEval(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_LayerNotify(): PrivateScope, Public, HideBySig, SpecialName
    set_LayerNotify(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MsOleScale(): PrivateScope, Public, HideBySig, SpecialName
    set_MsOleScale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_UpdateThumbnail(): PrivateScope, Public, HideBySig, SpecialName
    set_UpdateThumbnail(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_GeoDataObject(): PrivateScope, Public, HideBySig, SpecialName
    get_HomeView(): PrivateScope, Public, HideBySig, SpecialName
    set_HomeView(DbHomeView): PrivateScope, Public, HideBySig, SpecialName
    GetAllDatabases(): PrivateScope, Public, Static, HideBySig
    EvaluateFields(FieldEvaluationContext, String): PrivateScope, Public, HideBySig
    EvaluateFields(FieldEvaluationContext): PrivateScope, Public, HideBySig
    EvaluateFields(): PrivateScope, Public, HideBySig
    add_DwgFileOpened(DatabaseIOEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_DwgFileOpened(DatabaseIOEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_InitialDwgFileOpenComplete(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_InitialDwgFileOpenComplete(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_DatabaseConstructed(EventHandler): PrivateScope, Public, Static, HideBySig, SpecialName
    remove_DatabaseConstructed(EventHandler): PrivateScope, Public, Static, HideBySig, SpecialName
    add_DatabaseToBeDestroyed(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_DatabaseToBeDestroyed(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_BeginSave(DatabaseIOEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_BeginSave(DatabaseIOEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_SaveComplete(DatabaseIOEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_SaveComplete(DatabaseIOEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_AbortSave(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_AbortSave(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_BeginDxfIn(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_BeginDxfIn(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_AbortDxfIn(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_AbortDxfIn(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_DxfInComplete(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_DxfInComplete(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_BeginDxfOut(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_BeginDxfOut(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_AbortDxfOut(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_AbortDxfOut(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_DxfOutComplete(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_DxfOutComplete(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_BeginInsert(BeginInsertEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_BeginInsert(BeginInsertEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_InsertMappingAvailable(IdMappingEventHandler): PrivateScope, Public, HideBySig, SpecialName
    get_Dimlwe(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimlwe(LineWeight): PrivateScope, Public, HideBySig, SpecialName
    get_Dimrnd(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimrnd(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Dimsah(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimsah(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Dimscale(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimscale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Dimsd1(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimsd1(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Dimsd2(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimsd2(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Dimse1(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimse1(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Dimse2(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimse2(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Dimsoxd(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimsoxd(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Dimtad(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimtad(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Dimtdec(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimtdec(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Dimtfac(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimtfac(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Dimtfill(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimtfill(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Dimtfillclr(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimtfillclr(Color): PrivateScope, Public, HideBySig, SpecialName
    get_Dimtih(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimtih(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Dimtix(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimtix(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Dimtm(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimtm(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Dimtmove(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimtmove(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Dimtofl(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimtofl(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Dimtoh(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimtoh(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Dimtol(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimtol(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Dimtolj(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimtolj(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Dimtp(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimtp(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Dimtsz(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimtsz(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Dimtvp(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimtvp(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Dimtxsty(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimtxsty(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_Dimtxt(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimtxt(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Dimtxtdirection(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimtxtdirection(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Dimtzin(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimtzin(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Dimupt(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimupt(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Dimzin(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimzin(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SummaryInfo(): PrivateScope, Public, HideBySig, SpecialName
    set_SummaryInfo(DatabaseSummaryInfo): PrivateScope, Public, HideBySig, SpecialName
    get_DrawOrderCtl(): PrivateScope, Public, HideBySig, SpecialName
    set_DrawOrderCtl(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_LayerFilters(): PrivateScope, Public, HideBySig, SpecialName
    set_LayerFilters(LayerFilterTree): PrivateScope, Public, HideBySig, SpecialName
    get_CameraHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_CameraHeight(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LensLength(): PrivateScope, Public, HideBySig, SpecialName
    set_LensLength(Double): PrivateScope, Public, HideBySig, SpecialName
    get_CameraDisplay(): PrivateScope, Public, HideBySig, SpecialName
    set_CameraDisplay(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_StepsPerSec(): PrivateScope, Public, HideBySig, SpecialName
    set_StepsPerSec(Double): PrivateScope, Public, HideBySig, SpecialName
    get_StepSize(): PrivateScope, Public, HideBySig, SpecialName
    set_StepSize(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DxEval(): PrivateScope, Public, HideBySig, SpecialName
    set_DxEval(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetVisualStyleList(): PrivateScope, Public, HideBySig
    get_SolidHist(): PrivateScope, Public, HideBySig, SpecialName
    set_SolidHist(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ShowHist(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowHist(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_LightsInBlocks(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_dragvs(): PrivateScope, Public, HideBySig, SpecialName
    set_dragvs(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_Cannoscale(): PrivateScope, Public, HideBySig, SpecialName
    set_Cannoscale(AnnotationScale): PrivateScope, Public, HideBySig, SpecialName
    get_AcadDatabase(): PrivateScope, Public, HideBySig, SpecialName
    FromAcadDatabase(Object): PrivateScope, Public, Static, HideBySig
    get_Dimadec(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimadec(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Dimalt(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimalt(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Dimaltd(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimaltd(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Dimaltf(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimaltf(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Dimaltrnd(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimaltrnd(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Dimalttd(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimalttd(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Dimalttz(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimalttz(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Dimaltu(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimaltu(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Dimaltz(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimaltz(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Dimapost(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimapost(String): PrivateScope, Public, HideBySig, SpecialName
    get_Dimarcsym(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimarcsym(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Dimasz(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimasz(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Dimatfit(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimatfit(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Dimaunit(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimaunit(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Dimazin(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimazin(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Dimcen(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimcen(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Dimclrd(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimclrd(Color): PrivateScope, Public, HideBySig, SpecialName
    get_Dimclre(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimclre(Color): PrivateScope, Public, HideBySig, SpecialName
    get_Dimclrt(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimclrt(Color): PrivateScope, Public, HideBySig, SpecialName
    get_Dimdec(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimdec(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Dimdle(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimdle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Dimdli(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimdli(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Dimdsep(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimdsep(Char(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Dimexe(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimexe(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Dimexo(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimexo(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Dimfrac(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimfrac(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DimfxlenOn(): PrivateScope, Public, HideBySig, SpecialName
    set_DimfxlenOn(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Dimfxlen(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimfxlen(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Dimgap(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimgap(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Dimjogang(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimjogang(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Dimjust(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimjust(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Dimldrblk(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimldrblk(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_Dimlfac(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimlfac(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Dimlim(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimlim(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Dimltex1(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimltex1(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_Dimltex2(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimltex2(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_Dimltype(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimltype(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_Dimlunit(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimlunit(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Dimlwd(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimlwd(LineWeight): PrivateScope, Public, HideBySig, SpecialName
    get_Limmin(): PrivateScope, Public, HideBySig, SpecialName
    set_Limmin(Point2d): PrivateScope, Public, HideBySig, SpecialName
    get_Limmax(): PrivateScope, Public, HideBySig, SpecialName
    set_Limmax(Point2d): PrivateScope, Public, HideBySig, SpecialName
    get_Elevation(): PrivateScope, Public, HideBySig, SpecialName
    set_Elevation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Ucsorg(): PrivateScope, Public, HideBySig, SpecialName
    get_Ucsxdir(): PrivateScope, Public, HideBySig, SpecialName
    get_Ucsydir(): PrivateScope, Public, HideBySig, SpecialName
    set_Ucs(CoordinateSystem3d): PrivateScope, Public, HideBySig, SpecialName
    get_Ucsname(): PrivateScope, Public, HideBySig, SpecialName
    set_Ucsname(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_UcsBase(): PrivateScope, Public, HideBySig, SpecialName
    set_UcsBase(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    WorldUcsBaseOrigin(OrthographicView): PrivateScope, Public, HideBySig
    SetWorldUcsBaseOrigin(Point3d, OrthographicView): PrivateScope, Public, HideBySig
    get_UcsOrthographic(): PrivateScope, Public, HideBySig, SpecialName
    get_Dimpost(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimpost(String): PrivateScope, Public, HideBySig, SpecialName
    get_Dimblk(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimblk(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_Dimblk1(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimblk1(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_Dimblk2(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimblk2(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    GetDimRecentStyleList(): PrivateScope, Public, HideBySig
    LoadLineTypeFile(String, String): PrivateScope, Public, HideBySig
    get_ProjectName(): PrivateScope, Public, HideBySig, SpecialName
    set_ProjectName(String): PrivateScope, Public, HideBySig, SpecialName
    get_HyperlinkBase(): PrivateScope, Public, HideBySig, SpecialName
    set_HyperlinkBase(String): PrivateScope, Public, HideBySig, SpecialName
    get_StyleSheet(): PrivateScope, Public, HideBySig, SpecialName
    set_StyleSheet(String): PrivateScope, Public, HideBySig, SpecialName
    get_Filename(): PrivateScope, Public, HideBySig, SpecialName
    get_IsBeingDestroyed(): PrivateScope, Public, HideBySig, SpecialName
    get_IsPartiallyOpened(): PrivateScope, Public, HideBySig, SpecialName
    ApplyPartialOpenFilters(SpatialFilter, LayerFilter): PrivateScope, Public, HideBySig
    DisablePartialOpen(): PrivateScope, Public, HideBySig
    get_FingerprintGuid(): PrivateScope, Public, HideBySig, SpecialName
    set_FingerprintGuid(String): PrivateScope, Public, HideBySig, SpecialName
    get_VersionGuid(): PrivateScope, Public, HideBySig, SpecialName
    set_VersionGuid(String): PrivateScope, Public, HideBySig, SpecialName
    get_TStackAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_TStackAlign(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_TstackSize(): PrivateScope, Public, HideBySig, SpecialName
    set_TstackSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Insunits(): PrivateScope, Public, HideBySig, SpecialName
    set_Insunits(UnitsValue): PrivateScope, Public, HideBySig, SpecialName
    get_PlotStyleMode(): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentViewportTableRecordId(): PrivateScope, Public, HideBySig, SpecialName
    GetViewports(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_ViewportScaleDefault(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewportScaleDefault(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DwgFileWasSavedByAutodeskSoftware(): PrivateScope, Public, HideBySig, SpecialName
    get_SortEnts(): PrivateScope, Public, HideBySig, SpecialName
    set_SortEnts(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DimAssoc(): PrivateScope, Public, HideBySig, SpecialName
    set_DimAssoc(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_HideText(): PrivateScope, Public, HideBySig, SpecialName
    set_HideText(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_HaloGap(): PrivateScope, Public, HideBySig, SpecialName
    set_HaloGap(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ObscuredColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ObscuredColor(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ObscuredLineType(): PrivateScope, Public, HideBySig, SpecialName
    set_ObscuredLineType(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IntersectDisplay(): PrivateScope, Public, HideBySig, SpecialName
    set_IntersectDisplay(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IntersectColor(): PrivateScope, Public, HideBySig, SpecialName
    set_IntersectColor(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_AllowExtendedNames(): PrivateScope, Public, HideBySig, SpecialName
    set_AllowExtendedNames(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Latitude(): PrivateScope, Public, HideBySig, SpecialName
    set_Latitude(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Longitude(): PrivateScope, Public, HideBySig, SpecialName
    set_Longitude(Double): PrivateScope, Public, HideBySig, SpecialName
    get_NorthDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_NorthDirection(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LightGlyphDisplay(): PrivateScope, Public, HideBySig, SpecialName
    set_LightGlyphDisplay(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_TileModeLightSynch(): PrivateScope, Public, HideBySig, SpecialName
    set_TileModeLightSynch(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_LightingUnits(): PrivateScope, Public, HideBySig, SpecialName
    set_LightingUnits(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_LightsInBlocks(): PrivateScope, Public, HideBySig, SpecialName
    get_Menu(): PrivateScope, Public, HideBySig, SpecialName
    get_HpInherit(): PrivateScope, Public, HideBySig, SpecialName
    set_HpInherit(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HpOrigin(): PrivateScope, Public, HideBySig, SpecialName
    set_HpOrigin(Point2d): PrivateScope, Public, HideBySig, SpecialName
    get_Tdcreate(): PrivateScope, Public, HideBySig, SpecialName
    get_Tdupdate(): PrivateScope, Public, HideBySig, SpecialName
    get_Tducreate(): PrivateScope, Public, HideBySig, SpecialName
    get_Tduupdate(): PrivateScope, Public, HideBySig, SpecialName
    get_Tdindwg(): PrivateScope, Public, HideBySig, SpecialName
    get_Tdusrtimer(): PrivateScope, Public, HideBySig, SpecialName
    ResetTimes(): PrivateScope, Public, HideBySig
    get_Cecolor(): PrivateScope, Public, HideBySig, SpecialName
    set_Cecolor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_Cetransparency(): PrivateScope, Public, HideBySig, SpecialName
    set_Cetransparency(Transparency): PrivateScope, Public, HideBySig, SpecialName
    get_Handseed(): PrivateScope, Public, HideBySig, SpecialName
    set_Handseed(Handle): PrivateScope, Public, HideBySig, SpecialName
    get_PlotStyleNameId(): PrivateScope, Public, HideBySig, SpecialName
    set_PlotStyleNameId(PlotStyleDescriptor): PrivateScope, Public, HideBySig, SpecialName
    get_Textstyle(): PrivateScope, Public, HideBySig, SpecialName
    set_Textstyle(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_Celtype(): PrivateScope, Public, HideBySig, SpecialName
    set_Celtype(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    SetDimstyleData(DimStyleTableRecord): PrivateScope, Public, HideBySig
    GetDimstyleData(): PrivateScope, Public, HideBySig
    get_Dimstyle(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimstyle(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_Tablestyle(): PrivateScope, Public, HideBySig, SpecialName
    set_Tablestyle(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_MLeaderstyle(): PrivateScope, Public, HideBySig, SpecialName
    set_MLeaderstyle(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_MLeaderscale(): PrivateScope, Public, HideBySig, SpecialName
    set_MLeaderscale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_SectionViewStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_SectionViewStyle(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_DetailViewStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_DetailViewStyle(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_Interfereobjvs(): PrivateScope, Public, HideBySig, SpecialName
    set_Interfereobjvs(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_Interferevpvs(): PrivateScope, Public, HideBySig, SpecialName
    set_Interferevpvs(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_Interferecolor(): PrivateScope, Public, HideBySig, SpecialName
    set_Interferecolor(Color): PrivateScope, Public, HideBySig, SpecialName
    GetDimensionStyleChildData(RXClass): PrivateScope, Public, HideBySig
    GetDimensionStyleChildId(RXClass, ObjectId): PrivateScope, Public, HideBySig
    GetDimensionStyleParentId(ObjectId): PrivateScope, Public, HideBySig
    get_CmlstyleID(): PrivateScope, Public, HideBySig, SpecialName
    set_CmlstyleID(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_Cmljust(): PrivateScope, Public, HideBySig, SpecialName
    set_Cmljust(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Cmlscale(): PrivateScope, Public, HideBySig, SpecialName
    set_Cmlscale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Celtscale(): PrivateScope, Public, HideBySig, SpecialName
    set_Celtscale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Pinsbase(): PrivateScope, Public, HideBySig, SpecialName
    set_Pinsbase(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_Pextmin(): PrivateScope, Public, HideBySig, SpecialName
    set_Pextmin(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_Pextmax(): PrivateScope, Public, HideBySig, SpecialName
    set_Pextmax(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_Plimmin(): PrivateScope, Public, HideBySig, SpecialName
    set_Plimmin(Point2d): PrivateScope, Public, HideBySig, SpecialName
    get_Plimmax(): PrivateScope, Public, HideBySig, SpecialName
    set_Plimmax(Point2d): PrivateScope, Public, HideBySig, SpecialName
    get_Pelevation(): PrivateScope, Public, HideBySig, SpecialName
    set_Pelevation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Pucsorg(): PrivateScope, Public, HideBySig, SpecialName
    get_Pucsxdir(): PrivateScope, Public, HideBySig, SpecialName
    get_Pucsydir(): PrivateScope, Public, HideBySig, SpecialName
    set_Pucs(CoordinateSystem3d): PrivateScope, Public, HideBySig, SpecialName
    get_Pucsname(): PrivateScope, Public, HideBySig, SpecialName
    set_Pucsname(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_PucsBase(): PrivateScope, Public, HideBySig, SpecialName
    set_PucsBase(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    WorldPaperspaceUcsBaseOrigin(OrthographicView): PrivateScope, Public, HideBySig
    SetWorldPaperspaceUcsBaseOrigin(Point3d, OrthographicView): PrivateScope, Public, HideBySig
    get_PucsOrthographic(): PrivateScope, Public, HideBySig, SpecialName
    get_Insbase(): PrivateScope, Public, HideBySig, SpecialName
    set_Insbase(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_Extmin(): PrivateScope, Public, HideBySig, SpecialName
    set_Extmin(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_Extmax(): PrivateScope, Public, HideBySig, SpecialName
    set_Extmax(Point3d): PrivateScope, Public, HideBySig, SpecialName
    UpdateExt(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    set_Useri2(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Useri3(): PrivateScope, Public, HideBySig, SpecialName
    set_Useri3(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Useri4(): PrivateScope, Public, HideBySig, SpecialName
    set_Useri4(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Useri5(): PrivateScope, Public, HideBySig, SpecialName
    set_Useri5(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Splinesegs(): PrivateScope, Public, HideBySig, SpecialName
    set_Splinesegs(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Surfu(): PrivateScope, Public, HideBySig, SpecialName
    set_Surfu(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Surfv(): PrivateScope, Public, HideBySig, SpecialName
    set_Surfv(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Surftype(): PrivateScope, Public, HideBySig, SpecialName
    set_Surftype(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Surftab1(): PrivateScope, Public, HideBySig, SpecialName
    set_Surftab1(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Surftab2(): PrivateScope, Public, HideBySig, SpecialName
    set_Surftab2(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Splinetype(): PrivateScope, Public, HideBySig, SpecialName
    set_Splinetype(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Shadedge(): PrivateScope, Public, HideBySig, SpecialName
    set_Shadedge(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Shadedif(): PrivateScope, Public, HideBySig, SpecialName
    set_Shadedif(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Measurement(): PrivateScope, Public, HideBySig, SpecialName
    set_Measurement(MeasurementValue): PrivateScope, Public, HideBySig, SpecialName
    get_Unitmode(): PrivateScope, Public, HideBySig, SpecialName
    set_Unitmode(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Maxactvp(): PrivateScope, Public, HideBySig, SpecialName
    set_Maxactvp(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Isolines(): PrivateScope, Public, HideBySig, SpecialName
    set_Isolines(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Ltscale(): PrivateScope, Public, HideBySig, SpecialName
    set_Ltscale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Textsize(): PrivateScope, Public, HideBySig, SpecialName
    set_Textsize(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Tracewid(): PrivateScope, Public, HideBySig, SpecialName
    set_Tracewid(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Sketchinc(): PrivateScope, Public, HideBySig, SpecialName
    set_Sketchinc(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Filletrad(): PrivateScope, Public, HideBySig, SpecialName
    set_Filletrad(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Thickness(): PrivateScope, Public, HideBySig, SpecialName
    set_Thickness(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Celweight(): PrivateScope, Public, HideBySig, SpecialName
    set_Celweight(LineWeight): PrivateScope, Public, HideBySig, SpecialName
    IsValidLineWeight(Int32): PrivateScope, Public, HideBySig
    GetNearestLineWeight(Int32): PrivateScope, Public, HideBySig
    get_EndCaps(): PrivateScope, Public, HideBySig, SpecialName
    set_EndCaps(EndCap): PrivateScope, Public, HideBySig, SpecialName
    get_JoinStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_JoinStyle(JoinStyle): PrivateScope, Public, HideBySig, SpecialName
    get_LineWeightDisplay(): PrivateScope, Public, HideBySig, SpecialName
    set_LineWeightDisplay(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_XrefEditEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_XrefEditEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OleStartUp(): PrivateScope, Public, HideBySig, SpecialName
    set_OleStartUp(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Angbase(): PrivateScope, Public, HideBySig, SpecialName
    set_Angbase(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Pdsize(): PrivateScope, Public, HideBySig, SpecialName
    set_Pdsize(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Plinewid(): PrivateScope, Public, HideBySig, SpecialName
    set_Plinewid(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Userr1(): PrivateScope, Public, HideBySig, SpecialName
    set_Userr1(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Userr2(): PrivateScope, Public, HideBySig, SpecialName
    set_Userr2(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Userr3(): PrivateScope, Public, HideBySig, SpecialName
    set_Userr3(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Userr4(): PrivateScope, Public, HideBySig, SpecialName
    set_Userr4(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Userr5(): PrivateScope, Public, HideBySig, SpecialName
    set_Userr5(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Chamfera(): PrivateScope, Public, HideBySig, SpecialName
    set_Chamfera(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Chamferb(): PrivateScope, Public, HideBySig, SpecialName
    set_Chamferb(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Chamferc(): PrivateScope, Public, HideBySig, SpecialName
    set_Chamferc(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Chamferd(): PrivateScope, Public, HideBySig, SpecialName
    set_Chamferd(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Facetres(): PrivateScope, Public, HideBySig, SpecialName
    set_Facetres(Double): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalFileSavedByMaintenanceVersion(): PrivateScope, Public, HideBySig, SpecialName
    Wblock(): PrivateScope, Public, HideBySig
    Wblock(ObjectId): PrivateScope, Public, HideBySig
    Wblock(Database, ObjectIdCollection, Point3d, DuplicateRecordCloning): PrivateScope, Public, HideBySig
    Wblock(ObjectIdCollection, Point3d): PrivateScope, Public, HideBySig
    ForceWblockDatabaseCopy(): PrivateScope, Public, HideBySig
    Insert(String, String, Database, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Insert(Matrix3d, Database, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Insert(String, Database, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    DeepCloneObjects(ObjectIdCollection, ObjectId, IdMapping, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    WblockCloneObjects(ObjectIdCollection, ObjectId, IdMapping, DuplicateRecordCloning, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    AbortDeepClone(IdMapping): PrivateScope, Public, HideBySig
    AuditXData(AuditInfo): PrivateScope, Public, HideBySig
    DisableUndoRecording(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_UndoRecording(): PrivateScope, Public, HideBySig, SpecialName
    get_MaintenanceReleaseVersion(): PrivateScope, Public, HideBySig, SpecialName
    RestoreOriginalXrefSymbols(): PrivateScope, Public, HideBySig
    RestoreForwardingXrefSymbols(): PrivateScope, Public, HideBySig
    get_XrefBlockId(): PrivateScope, Public, HideBySig, SpecialName
    get_ThumbnailBitmap(): PrivateScope, Public, HideBySig, SpecialName
    set_ThumbnailBitmap(Bitmap): PrivateScope, Public, HideBySig, SpecialName
    get_RetainOriginalThumbnailBitmap(): PrivateScope, Public, HideBySig, SpecialName
    set_RetainOriginalThumbnailBitmap(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmr(): PrivateScope, Public, HideBySig, SpecialName
    get_SecurityParameters(): PrivateScope, Public, HideBySig, SpecialName
    set_SecurityParameters(SecurityParameters): PrivateScope, Public, HideBySig, SpecialName
    get_Dimaso(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimaso(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Dimsho(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimsho(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Plinegen(): PrivateScope, Public, HideBySig, SpecialName
    set_Plinegen(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Orthomode(): PrivateScope, Public, HideBySig, SpecialName
    set_Orthomode(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Regenmode(): PrivateScope, Public, HideBySig, SpecialName
    set_Regenmode(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Fillmode(): PrivateScope, Public, HideBySig, SpecialName
    set_Fillmode(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Qtextmode(): PrivateScope, Public, HideBySig, SpecialName
    set_Qtextmode(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Psltscale(): PrivateScope, Public, HideBySig, SpecialName
    set_Psltscale(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Limcheck(): PrivateScope, Public, HideBySig, SpecialName
    set_Limcheck(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Saveproxygraphics(): PrivateScope, Public, HideBySig, SpecialName
    set_Saveproxygraphics(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DispSilh(): PrivateScope, Public, HideBySig, SpecialName
    set_DispSilh(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_PlineEllipse(): PrivateScope, Public, HideBySig, SpecialName
    set_PlineEllipse(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Usrtimer(): PrivateScope, Public, HideBySig, SpecialName
    set_Usrtimer(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Skpoly(): PrivateScope, Public, HideBySig, SpecialName
    set_Skpoly(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Angdir(): PrivateScope, Public, HideBySig, SpecialName
    set_Angdir(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Splframe(): PrivateScope, Public, HideBySig, SpecialName
    set_Splframe(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_XclipFrame(): PrivateScope, Public, HideBySig, SpecialName
    set_XclipFrame(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Mirrtext(): PrivateScope, Public, HideBySig, SpecialName
    set_Mirrtext(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Worldview(): PrivateScope, Public, HideBySig, SpecialName
    set_Worldview(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Plimcheck(): PrivateScope, Public, HideBySig, SpecialName
    set_Plimcheck(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Visretain(): PrivateScope, Public, HideBySig, SpecialName
    set_Visretain(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Treedepth(): PrivateScope, Public, HideBySig, SpecialName
    set_Treedepth(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Lunits(): PrivateScope, Public, HideBySig, SpecialName
    set_Lunits(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Luprec(): PrivateScope, Public, HideBySig, SpecialName
    set_Luprec(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Aunits(): PrivateScope, Public, HideBySig, SpecialName
    set_Aunits(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Auprec(): PrivateScope, Public, HideBySig, SpecialName
    set_Auprec(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Attmode(): PrivateScope, Public, HideBySig, SpecialName
    set_Attmode(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Pdmode(): PrivateScope, Public, HideBySig, SpecialName
    set_Pdmode(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Useri1(): PrivateScope, Public, HideBySig, SpecialName
    set_Useri1(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Useri2(): PrivateScope, Public, HideBySig, SpecialName
    get_LayerTableId(): PrivateScope, Public, HideBySig, SpecialName
    get_LinetypeTableId(): PrivateScope, Public, HideBySig, SpecialName
    get_TransactionManager(): PrivateScope, Public, HideBySig, SpecialName
    get_LayerStateManager(): PrivateScope, Public, HideBySig, SpecialName
    get_ObjectContextManager(): PrivateScope, Public, HideBySig, SpecialName
    get_TileMode(): PrivateScope, Public, HideBySig, SpecialName
    set_TileMode(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Clayer(): PrivateScope, Public, HideBySig, SpecialName
    set_Clayer(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    AddDBObject(DBObject): PrivateScope, Public, HideBySig
    MarkObjectNonPersistent(ObjectId, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    IsObjectNonPersistent(ObjectId): PrivateScope, Public, Static, HideBySig
    get_BlockTableId(): PrivateScope, Public, HideBySig, SpecialName
    get_TextStyleTableId(): PrivateScope, Public, HideBySig, SpecialName
    get_ViewTableId(): PrivateScope, Public, HideBySig, SpecialName
    get_UcsTableId(): PrivateScope, Public, HideBySig, SpecialName
    get_ViewportTableId(): PrivateScope, Public, HideBySig, SpecialName
    get_RegAppTableId(): PrivateScope, Public, HideBySig, SpecialName
    get_DimStyleTableId(): PrivateScope, Public, HideBySig, SpecialName
    get_MLStyleDictionaryId(): PrivateScope, Public, HideBySig, SpecialName
    get_GroupDictionaryId(): PrivateScope, Public, HideBySig, SpecialName
    get_LayoutDictionaryId(): PrivateScope, Public, HideBySig, SpecialName
    get_PlotStyleNameDictionaryId(): PrivateScope, Public, HideBySig, SpecialName
    get_MaterialDictionaryId(): PrivateScope, Public, HideBySig, SpecialName
    get_VisualStyleDictionaryId(): PrivateScope, Public, HideBySig, SpecialName
    get_ColorDictionaryId(): PrivateScope, Public, HideBySig, SpecialName
    get_NamedObjectsDictionaryId(): PrivateScope, Public, HideBySig, SpecialName
    get_PlotSettingsDictionaryId(): PrivateScope, Public, HideBySig, SpecialName
    get_LayerZero(): PrivateScope, Public, HideBySig, SpecialName
    get_ContinuousLinetype(): PrivateScope, Public, HideBySig, SpecialName
    get_ByLayerLinetype(): PrivateScope, Public, HideBySig, SpecialName
    get_ByBlockLinetype(): PrivateScope, Public, HideBySig, SpecialName
    get_PaperSpaceVportId(): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentSpaceId(): PrivateScope, Public, HideBySig, SpecialName
    get_TableStyleDictionaryId(): PrivateScope, Public, HideBySig, SpecialName
    get_MLeaderStyleDictionaryId(): PrivateScope, Public, HideBySig, SpecialName
    get_SectionViewStyleDictionaryId(): PrivateScope, Public, HideBySig, SpecialName
    get_DetailViewStyleDictionaryId(): PrivateScope, Public, HideBySig, SpecialName
    get_SectionManagerId(): PrivateScope, Public, HideBySig, SpecialName
    get_DataLinkDictionaryId(): PrivateScope, Public, HideBySig, SpecialName
    get_DataLinkManager(): PrivateScope, Public, HideBySig, SpecialName
    ReclaimMemoryFromErasedObjects(ObjectIdCollection): PrivateScope, Public, HideBySig
    Purge(ObjectIdGraph): PrivateScope, Public, HideBySig
    Purge(ObjectIdCollection): PrivateScope, Public, HideBySig
    CountHardReferences(ObjectIdCollection, Int32[]): PrivateScope, Public, HideBySig
    GetObjectId(Boolean(HasFieldMarshal), Handle, Int32): PrivateScope, Public, HideBySig
    TryGetObjectId(Handle, ObjectId&(Out)): PrivateScope, Public, HideBySig
    ClassDxfName(RXClass): PrivateScope, Public, HideBySig
    ReadDwgFile(IntPtr, Boolean(HasFieldMarshal), String): PrivateScope, Public, HideBySig
    ReadDwgFile(String, FileOpenMode, Boolean(HasFieldMarshal), String): PrivateScope, Public, HideBySig
    ReadDwgFile(String, FileShare, Boolean(HasFieldMarshal), String): PrivateScope, Public, HideBySig
    SaveAs(String, DwgVersion): PrivateScope, Public, HideBySig
    SaveAs(String, Boolean(HasFieldMarshal), DwgVersion, SecurityParameters): PrivateScope, Public, HideBySig
    SaveAs(String, SecurityParameters): PrivateScope, Public, HideBySig
    Save(): PrivateScope, Public, HideBySig
    DxfIn(String, String): PrivateScope, Public, HideBySig
    DxfOut(String, Int32, DwgVersion): PrivateScope, Public, HideBySig
    DxfOut(String, Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    CloseInput(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ResolveXrefs(Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    AttachXref(String, String): PrivateScope, Public, HideBySig
    OverlayXref(String, String): PrivateScope, Public, HideBySig
    DetachXref(ObjectId): PrivateScope, Public, HideBySig
    UnloadXrefs(ObjectIdCollection): PrivateScope, Public, HideBySig
    ReloadXrefs(ObjectIdCollection): PrivateScope, Public, HideBySig
    BindXrefs(ObjectIdCollection, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    XBindXrefs(ObjectIdCollection, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetHostDwgXrefGraph(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    LoadMlineStyleFile(String, String): PrivateScope, Public, HideBySig
    GetSupportedSaveVersions(): PrivateScope, Public, HideBySig
    GetSupportedDxfOutVersions(): PrivateScope, Public, HideBySig
    get_NeedsRecovery(): PrivateScope, Public, HideBySig, SpecialName
    get_ApproxNumObjects(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfSaves(): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalFileName(): PrivateScope, Public, HideBySig, SpecialName
    get_LastSavedAsVersion(): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalFileVersion(): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalFileSavedByVersion(): PrivateScope, Public, HideBySig, SpecialName
    get_LastSavedAsMaintenanceVersion(): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalFileMaintenanceVersion(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.SubentityId: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.Runtime.RXClass, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.SubentityType, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Runtime.RXClass, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.SubentityType, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
  Properties:
    Autodesk.AutoCAD.Runtime.RXClass TypeClass 'get ' : 
    IntPtr IndexPtr 'get ' : 
    Int32 Index 'get ' :  (Obsolete)
    Autodesk.AutoCAD.DatabaseServices.SubentityType Type 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.SubentityId Null 'get ' : 
  Methods:
    get_Null(): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(SubentityId, SubentityId): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(SubentityId, SubentityId): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    get_IndexPtr(): PrivateScope, Public, HideBySig, SpecialName
    get_TypeClass(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.SubentityType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.SubentityType Null = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SubentityType Face = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SubentityType Edge = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SubentityType Vertex = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SubentityType MlineCache = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SubentityType Class = 5 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Item [Int32] 'get set' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, ObjectId): PrivateScope, Public, HideBySig, SpecialName
    RemoveAt(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(ObjectId): PrivateScope, Public, HideBySig
    Contains(ObjectId): PrivateScope, Public, HideBySig
    IndexOf(ObjectId): PrivateScope, Public, HideBySig
    Insert(Int32, ObjectId): PrivateScope, Public, HideBySig
    Remove(ObjectId): PrivateScope, Public, HideBySig
    CopyTo(ObjectId[], Int32): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.EntityAlignmentEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, EntityAlignmentEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, EntityAlignmentEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.EntityAlignmentEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.Entity, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Vector3d Direction 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d ClosestPoint 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d PickPoint 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Entity Entity 'get ' : 
  Methods:
    get_Entity(): PrivateScope, Public, HideBySig, SpecialName
    get_PickPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    get_ClosestPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_ClosestPoint(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_Direction(): PrivateScope, Public, HideBySig, SpecialName
    set_Direction(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    GetPickedEntities(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.Entity: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId EdgeStyleId 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId FaceStyleId 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId VisualStyleId 'get set' : 
    Boolean ForceAnnoAllVisible 'get set' : 
    System.String BlockName 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.Mapper MaterialMapper 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId MaterialId 'get set' : 
    System.String Material 'get set' : 
    Boolean ReceiveShadows 'get set' : 
    Boolean CastShadows 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.HyperLinkCollection Hyperlinks 'get ' : 
    Boolean CloneMeForDragging 'get ' : 
    Autodesk.AutoCAD.Geometry.Matrix3d CompoundObjectTransform 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Extents3d GeometricExtents 'get ' : 
    Autodesk.AutoCAD.Geometry.Matrix3d Ecs 'get ' : 
    Boolean IsPlanar 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.CollisionType CollisionType 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight 'get set' : 
    Boolean Visible 'get set' : 
    Double LinetypeScale 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId LinetypeId 'get set' : 
    System.String Linetype 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId LayerId 'get set' : 
    System.String Layer 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.PlotStyleDescriptor PlotStyleNameId 'get set' : 
    System.String PlotStyleName 'get set' : 
    Autodesk.AutoCAD.Colors.Transparency Transparency 'get set' : 
    Autodesk.AutoCAD.Colors.EntityColor EntityColor 'get ' : 
    Int32 ColorIndex 'get set' : 
    Autodesk.AutoCAD.Colors.Color Color 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId BlockId 'get ' : 
  Methods:
    set_MaterialMapper(Mapper): PrivateScope, Public, HideBySig, SpecialName
    get_BlockName(): PrivateScope, Public, HideBySig, SpecialName
    get_ForceAnnoAllVisible(): PrivateScope, Public, HideBySig, SpecialName
    set_ForceAnnoAllVisible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_VisualStyleId(): PrivateScope, Public, HideBySig, SpecialName
    set_VisualStyleId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_FaceStyleId(): PrivateScope, Public, HideBySig, SpecialName
    set_FaceStyleId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_EdgeStyleId(): PrivateScope, Public, HideBySig, SpecialName
    set_EdgeStyleId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    JoinEntity(Entity): PrivateScope, Public, HideBySig
    JoinEntities(Entity[]): PrivateScope, Public, HideBySig
    get_BlockId(): PrivateScope, Public, HideBySig, SpecialName
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    set_Color(Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ColorIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorIndex(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EntityColor(): PrivateScope, Public, HideBySig, SpecialName
    get_Transparency(): PrivateScope, Public, HideBySig, SpecialName
    set_Transparency(Transparency): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PlotStyleName(): PrivateScope, Public, HideBySig, SpecialName
    set_PlotStyleName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PlotStyleNameId(): PrivateScope, Public, HideBySig, SpecialName
    set_PlotStyleNameId(PlotStyleDescriptor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Layer(): PrivateScope, Public, HideBySig, SpecialName
    set_Layer(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LayerId(): PrivateScope, Public, HideBySig, SpecialName
    set_LayerId(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetLayerId(ObjectId, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Linetype(): PrivateScope, Public, HideBySig, SpecialName
    set_Linetype(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LinetypeId(): PrivateScope, Public, HideBySig, SpecialName
    set_LinetypeId(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LinetypeScale(): PrivateScope, Public, HideBySig, SpecialName
    set_LinetypeScale(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Visible(): PrivateScope, Public, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LineWeight(): PrivateScope, Public, HideBySig, SpecialName
    set_LineWeight(LineWeight): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CollisionType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetPropertiesFrom(Entity): PrivateScope, Public, HideBySig
    get_IsPlanar(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetPlane(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Ecs(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GeometricExtents(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddSubentityPaths(FullSubentityPath[]): PrivateScope, Public, HideBySig
    DeleteSubentityPaths(FullSubentityPath[]): PrivateScope, Public, HideBySig
    TransformSubentityPathsBy(FullSubentityPath[], Matrix3d): PrivateScope, Public, HideBySig
    GetGripPointsAtSubentityPath(FullSubentityPath, GripDataCollection, Double, Int32, Vector3d, GetGripPointsFlags): PrivateScope, Public, HideBySig
    MoveGripPointsAtSubentityPaths(FullSubentityPath[], IntPtr[], Vector3d, MoveGripPointsFlags): PrivateScope, Public, HideBySig
    GetSubentityGeometricExtents(FullSubentityPath): PrivateScope, Public, HideBySig
    GetSubentityPathsAtGraphicsMarker(SubentityType, IntPtr, Point3d, Matrix3d, ObjectId[]): PrivateScope, Public, HideBySig
    GetSubentityPathsAtGraphicsMarker(SubentityType, Int64, Point3d, Matrix3d, Int32, ObjectId[]): PrivateScope, Public, HideBySig (Obsolete)
    GetGraphicsMarkersAtSubentityPathIntPtr(FullSubentityPath): PrivateScope, Public, HideBySig
    Highlight(FullSubentityPath, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Highlight(): PrivateScope, Public, HideBySig
    Unhighlight(FullSubentityPath, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Unhighlight(): PrivateScope, Public, HideBySig
    PushHighlight(FullSubentityPath, HighlightStyle): PrivateScope, Public, HideBySig
    PopHighlight(FullSubentityPath): PrivateScope, Public, HideBySig
    HighlightState(FullSubentityPath): PrivateScope, Public, HideBySig
    GetObjectSnapPoints(ObjectSnapModes, Int32, Point3d, Point3d, Matrix3d, Point3dCollection, IntegerCollection, Matrix3d): PrivateScope, Public, HideBySig
    GetObjectSnapPoints(ObjectSnapModes, Int32, Point3d, Point3d, Matrix3d, Point3dCollection, IntegerCollection): PrivateScope, Public, HideBySig
    IsContentSnappable(): PrivateScope, Public, HideBySig
    GetGripPoints(GripDataCollection, Double, Int32, Vector3d, GetGripPointsFlags): PrivateScope, Public, HideBySig
    GetGripPoints(Point3dCollection, IntegerCollection, IntegerCollection): PrivateScope, Public, HideBySig
    MoveGripPointsAt(GripDataCollection, Vector3d, MoveGripPointsFlags): PrivateScope, Public, HideBySig
    MoveGripPointsAt(IntegerCollection, Vector3d): PrivateScope, Public, HideBySig
    GetStretchPoints(Point3dCollection): PrivateScope, Public, HideBySig
    MoveStretchPointsAt(IntegerCollection, Vector3d): PrivateScope, Public, HideBySig
    IntersectWith(Entity, Intersect, Plane, Point3dCollection, IntPtr, IntPtr): PrivateScope, Public, HideBySig
    IntersectWith(Entity, Intersect, Point3dCollection, IntPtr, IntPtr): PrivateScope, Public, HideBySig
    IntersectWith(Entity, Intersect, Plane, Point3dCollection, Int64, Int64): PrivateScope, Public, HideBySig (Obsolete)
    IntersectWith(Entity, Intersect, Point3dCollection, Int64, Int64): PrivateScope, Public, HideBySig (Obsolete)
    BoundingBoxIntersectWith(Entity, Intersect, Point3dCollection, IntPtr, IntPtr): PrivateScope, Public, HideBySig
    BoundingBoxIntersectWith(Entity, Intersect, Plane, Point3dCollection, IntPtr, IntPtr): PrivateScope, Public, HideBySig
    BoundingBoxIntersectWith(Entity, Intersect, Point3dCollection, Int64, Int64): PrivateScope, Public, HideBySig (Obsolete)
    BoundingBoxIntersectWith(Entity, Intersect, Plane, Point3dCollection, Int64, Int64): PrivateScope, Public, HideBySig (Obsolete)
    List(): PrivateScope, Public, HideBySig
    TransformBy(Matrix3d): PrivateScope, Public, HideBySig
    GetTransformedCopy(Matrix3d): PrivateScope, Public, HideBySig
    GetSubentity(FullSubentityPath): PrivateScope, Public, HideBySig
    Explode(DBObjectCollection): PrivateScope, Public, HideBySig
    RecordGraphicsModified(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Draw(): PrivateScope, Public, HideBySig
    SaveAs(WorldDraw, SaveType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_CompoundObjectTransform(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetDatabaseDefaults(Database): PrivateScope, Public, HideBySig
    SetDatabaseDefaults(): PrivateScope, Public, HideBySig
    get_CloneMeForDragging(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetDragStatus(DragStatus): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetGripStatus(GripStatus): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSubentityGripStatus(GripStatus, FullSubentityPath): PrivateScope, Public, HideBySig
    get_Hyperlinks(): PrivateScope, Public, HideBySig, SpecialName
    get_CastShadows(): PrivateScope, Public, HideBySig, SpecialName
    set_CastShadows(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ReceiveShadows(): PrivateScope, Public, HideBySig, SpecialName
    set_ReceiveShadows(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Material(): PrivateScope, Public, HideBySig, SpecialName
    set_Material(String): PrivateScope, Public, HideBySig, SpecialName
    get_MaterialId(): PrivateScope, Public, HideBySig, SpecialName
    set_MaterialId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_MaterialMapper(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.Drawable: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.DrawStream DrawStream 'get set' : 
    System.Nullable`1[Autodesk.AutoCAD.DatabaseServices.Extents3d] Bounds 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.DrawableType DrawableType 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Id 'get ' : 
    Boolean IsPersistent 'get ' : 
  Methods:
    SetAttributes(DrawableTraits): PrivateScope, Public, HideBySig
    WorldDraw(WorldDraw): PrivateScope, Public, HideBySig
    ViewportDraw(ViewportDraw): PrivateScope, Public, HideBySig
    ViewportDrawLogicalFlags(ViewportDraw): PrivateScope, Public, HideBySig
    get_IsPersistent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Id(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DrawableType(): PrivateScope, Public, HideBySig, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DrawStream(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DrawStream(DrawStream): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Struct Autodesk.AutoCAD.GraphicsInterface.DrawableType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.DrawableType Geometry = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableType DistantLight = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableType PointLight = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableType SpotLight = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableType AmbientLight = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableType SolidBackground = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableType GradientBackground = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableType ImageBackground = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableType GroundPlaneBackground = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableType SkyBackground = 11 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableType Viewport = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableType WebLight = 10 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableType ImageBasedLightingBackground = 12 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.GraphicsInterface.DrawStream: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.Drawable
    Void .ctor(Autodesk.AutoCAD.GraphicsInterface.Drawable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.Drawable Owner 'get set' : 
    Boolean IsValid 'get ' : 
  Methods:
    get_IsValid(): PrivateScope, Public, HideBySig, SpecialName
    get_Owner(): PrivateScope, Public, HideBySig, SpecialName
    set_Owner(Drawable): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.GraphicsInterface.FontDescriptor: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String, Boolean, Boolean, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 PitchAndFamily 'get ' : 
    Int32 CharacterSet 'get ' : 
    Boolean Italic 'get ' : 
    Boolean Bold 'get ' : 
    System.String TypeFace 'get ' : 
  Methods:
    get_TypeFace(): PrivateScope, Public, HideBySig, SpecialName
    get_Bold(): PrivateScope, Public, HideBySig, SpecialName
    get_Italic(): PrivateScope, Public, HideBySig, SpecialName
    get_CharacterSet(): PrivateScope, Public, HideBySig, SpecialName
    get_PitchAndFamily(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Inequality(FontDescriptor, FontDescriptor): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(FontDescriptor, FontDescriptor): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.GraphicsInterface.TextStyle: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
    Void .ctor(System.String, System.String, Double, Double, Double, Double, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean PreLoaded 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.FontDescriptor Font 'get set' : 
    System.String StyleName 'get set' : 
    System.String BigFontFileName 'get set' : 
    System.String FileName 'get set' : 
    Boolean Strikethrough 'get set' : 
    Boolean Overlined 'get set' : 
    Boolean Underlined 'get set' : 
    Boolean Vertical 'get set' : 
    Boolean UpsideDown 'get set' : 
    Boolean Backward 'get set' : 
    Double TrackingPercent 'get set' : 
    Double ObliquingAngle 'get set' : 
    Double XScale 'get set' : 
    Double TextSize 'get set' : 
    Byte LoadStyleRec 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_LoadStyleRec(): PrivateScope, Public, HideBySig, SpecialName
    get_TextSize(): PrivateScope, Public, HideBySig, SpecialName
    set_TextSize(Double): PrivateScope, Public, HideBySig, SpecialName
    get_XScale(): PrivateScope, Public, HideBySig, SpecialName
    set_XScale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ObliquingAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_ObliquingAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TrackingPercent(): PrivateScope, Public, HideBySig, SpecialName
    set_TrackingPercent(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Backward(): PrivateScope, Public, HideBySig, SpecialName
    set_Backward(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_UpsideDown(): PrivateScope, Public, HideBySig, SpecialName
    set_UpsideDown(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Vertical(): PrivateScope, Public, HideBySig, SpecialName
    set_Vertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Underlined(): PrivateScope, Public, HideBySig, SpecialName
    set_Underlined(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Overlined(): PrivateScope, Public, HideBySig, SpecialName
    set_Overlined(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Strikethrough(): PrivateScope, Public, HideBySig, SpecialName
    set_Strikethrough(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    set_FileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_BigFontFileName(): PrivateScope, Public, HideBySig, SpecialName
    set_BigFontFileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_StyleName(): PrivateScope, Public, HideBySig, SpecialName
    set_StyleName(String): PrivateScope, Public, HideBySig, SpecialName
    get_Font(): PrivateScope, Public, HideBySig, SpecialName
    set_Font(FontDescriptor): PrivateScope, Public, HideBySig, SpecialName
    ExtentsBox(String, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), WorldDraw): PrivateScope, Public, HideBySig
    SetTrackKerning(Double): PrivateScope, Public, HideBySig
    get_PreLoaded(): PrivateScope, Public, HideBySig, SpecialName
    set_PreLoaded(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    FromTextStyleTableRecord(String): PrivateScope, Public, HideBySig
    FromTextStyleTableRecord(ObjectId): PrivateScope, Public, HideBySig
    ToTextStyleTableRecord(String): PrivateScope, Public, HideBySig
    ToTextStyleTableRecord(ObjectId): PrivateScope, Public, HideBySig
    ToTextStyleTableRecord(): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.Geometry.CoordinateSystem3d: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Vector3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IFormattable
  Properties:
    Autodesk.AutoCAD.Geometry.Vector3d Zaxis 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Yaxis 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Xaxis 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d Origin 'get ' : 
  Methods:
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    get_Xaxis(): PrivateScope, Public, HideBySig, SpecialName
    get_Yaxis(): PrivateScope, Public, HideBySig, SpecialName
    get_Zaxis(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    IsEqualTo(CoordinateSystem3d): PrivateScope, Public, HideBySig
    IsEqualTo(CoordinateSystem3d, Tolerance): PrivateScope, Public, HideBySig
    op_Inequality(CoordinateSystem3d, CoordinateSystem3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(CoordinateSystem3d, CoordinateSystem3d): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.Geometry.Line3d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.LinearEntity3d
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Vector3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    Set(Point3d, Point3d): PrivateScope, Public, HideBySig
    Set(Point3d, Vector3d): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.Matrix3dBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.Geometry.Matrix3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double ElementAt [Int32, Int32] 'get set' : 
  Methods:
    get_ElementAt(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    set_ElementAt(Int32, Int32, Double): PrivateScope, Public, HideBySig, SpecialName
    ToMatrix3d(): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.IdPair: AutoLayout, AnsiClass, Class, Public, ExplicitLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId, Autodesk.AutoCAD.DatabaseServices.ObjectId, Boolean, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsOwnerTranslated 'get ' : 
    Boolean IsPrimary 'get ' : 
    Boolean IsCloned 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Value 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Key 'get ' : 
  Methods:
    get_Key(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_IsCloned(): PrivateScope, Public, HideBySig, SpecialName
    get_IsPrimary(): PrivateScope, Public, HideBySig, SpecialName
    get_IsOwnerTranslated(): PrivateScope, Public, HideBySig, SpecialName
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Inequality(IdPair, IdPair): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(IdPair, IdPair): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.IdMapping: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerable
  Properties:
    Autodesk.AutoCAD.DatabaseServices.DuplicateRecordCloning DuplicateRecordCloning 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.DeepCloneType DeepCloneContext 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Database OriginalDatabase 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Database DestinationDatabase 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.IdPair Item [Autodesk.AutoCAD.DatabaseServices.ObjectId] 'get set' : 
  Methods:
    Add(IdPair): PrivateScope, Public, HideBySig
    Lookup(ObjectId): PrivateScope, Public, HideBySig
    Change(IdPair): PrivateScope, Public, HideBySig
    Delete(ObjectId): PrivateScope, Public, HideBySig
    Contains(ObjectId): PrivateScope, Public, HideBySig
    get_Item(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    set_Item(ObjectId, IdPair): PrivateScope, Public, HideBySig, SpecialName
    get_DestinationDatabase(): PrivateScope, Public, HideBySig, SpecialName
    set_DestinationDatabase(Database): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalDatabase(): PrivateScope, Public, HideBySig, SpecialName
    get_DeepCloneContext(): PrivateScope, Public, HideBySig, SpecialName
    get_DuplicateRecordCloning(): PrivateScope, Public, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Autodesk.AutoCAD.DatabaseServices.DeepCloneType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.DeepCloneType Copy = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DeepCloneType Explode = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DeepCloneType Block = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DeepCloneType XrefBind = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DeepCloneType SymbolTableMerge = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DeepCloneType Insert = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DeepCloneType Wblock = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DeepCloneType Objects = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DeepCloneType XrefInsert = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DeepCloneType InsertCopy = 10 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DeepCloneType WblockObjects = 11 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.DuplicateRecordCloning: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.DuplicateRecordCloning NotApplicable = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DuplicateRecordCloning Ignore = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DuplicateRecordCloning Replace = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DuplicateRecordCloning RefMangleName = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DuplicateRecordCloning MangleName = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DuplicateRecordCloning UnmangleName = 5 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.XrefSubCommandEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
  Properties:
    System.String[] paths 'get ' : 
    System.String[] btrNames 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection btrIds 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.XrefOperation xrefOp 'get ' : 
  Methods:
    get_xrefOp(): PrivateScope, Public, HideBySig, SpecialName
    get_btrIds(): PrivateScope, Public, HideBySig, SpecialName
    get_btrNames(): PrivateScope, Public, HideBySig, SpecialName
    get_paths(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.XrefOperation: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.XrefOperation XrefAttachOperation = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.XrefOperation XrefBindOperation = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.XrefOperation XrefDetachOperation = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.XrefOperation XrefOverlayOperation = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.XrefOperation XrefPathOperation = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.XrefOperation XrefReloadOperation = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.XrefOperation XrefResolveOperation = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.XrefOperation XrefUnloadOperation = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.XrefOperation XrefXBindOperation = 1 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.XrefVetoableSubCommandEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.XrefSubCommandEventArgs
  Properties:
    Boolean abortOp 'get set' : 
  Methods:
    get_abortOp(): PrivateScope, Public, HideBySig, SpecialName
    set_abortOp(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.XrefPreXrefLockFileEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId btrId 'get ' : 
  Methods:
    get_btrId(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.DatabaseIOEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Properties:
    System.String FileName 'get ' : 
  Methods:
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.BeginInsertEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Properties:
    Autodesk.AutoCAD.DatabaseServices.Database From 'get ' : 
  Methods:
    get_From(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.BeginWblockEntireDatabaseEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Properties:
    Autodesk.AutoCAD.DatabaseServices.Database From 'get ' : 
  Methods:
    get_From(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.BeginWblockBlockEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId BlockId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Database From 'get ' : 
  Methods:
    get_From(): PrivateScope, Public, HideBySig, SpecialName
    get_BlockId(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.BeginWblockSelectedObjectsEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d InsertionPoint 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Database From 'get ' : 
  Methods:
    get_From(): PrivateScope, Public, HideBySig, SpecialName
    get_InsertionPoint(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.IdMappingEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Properties:
    Autodesk.AutoCAD.DatabaseServices.IdMapping IdMapping 'get ' : 
  Methods:
    get_IdMapping(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.BeginWblockObjectsEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Properties:
    Autodesk.AutoCAD.DatabaseServices.IdMapping IdMapping 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Database From 'get ' : 
  Methods:
    get_From(): PrivateScope, Public, HideBySig, SpecialName
    get_IdMapping(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.WblockNoticeEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Properties:
    Autodesk.AutoCAD.DatabaseServices.Database To 'get ' : 
  Methods:
    get_To(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.XrefBeginOperationEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Properties:
    System.String FileName 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Database From 'get ' : 
  Methods:
    get_From(): PrivateScope, Public, HideBySig, SpecialName
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.XrefRedirectedEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId OldId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId NewId 'get ' : 
  Methods:
    get_NewId(): PrivateScope, Public, HideBySig, SpecialName
    get_OldId(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.XrefComandeeredEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Properties:
    Autodesk.AutoCAD.DatabaseServices.Database From 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Id 'get ' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    get_From(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.ObjectEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Properties:
    Autodesk.AutoCAD.DatabaseServices.DBObject DBObject 'get ' : 
  Methods:
    get_DBObject(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.ObjectErasedEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Properties:
    Boolean Erased 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.DBObject DBObject 'get ' : 
  Methods:
    get_DBObject(): PrivateScope, Public, HideBySig, SpecialName
    get_Erased(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.ProxyResurrectionCompletedEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection Ids 'get ' : 
    System.String ApplicationName 'get ' : 
  Methods:
    get_ApplicationName(): PrivateScope, Public, HideBySig, SpecialName
    get_Ids(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.SystemVariableChangingEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Properties:
    System.String Name 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.SystemVariableChangedEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Properties:
    Boolean Changed 'get ' : 
    System.String Name 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Changed(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.LayerStateEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Properties:
    System.String Name 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Id 'get ' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.LayerStateDeletedEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Properties:
    System.String Name 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.LayerStateRenameEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Properties:
    System.String NewName 'get ' : 
    System.String Name 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_NewName(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.ObjectClosedEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId Id 'get ' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.DatabaseIOEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, DatabaseIOEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, DatabaseIOEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.BeginInsertEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, BeginInsertEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, BeginInsertEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.BeginWblockSelectedObjectsEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, BeginWblockSelectedObjectsEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, BeginWblockSelectedObjectsEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.BeginWblockBlockEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, BeginWblockBlockEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, BeginWblockBlockEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.BeginWblockEntireDatabaseEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, BeginWblockEntireDatabaseEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, BeginWblockEntireDatabaseEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.IdMappingEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, IdMappingEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, IdMappingEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.BeginWblockObjectsEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, BeginWblockObjectsEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, BeginWblockObjectsEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.WblockNoticeEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, WblockNoticeEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, WblockNoticeEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.XrefBeginOperationEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, XrefBeginOperationEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, XrefBeginOperationEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.XrefComandeeredEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, XrefComandeeredEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, XrefComandeeredEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.XrefRedirectedEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, XrefRedirectedEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, XrefRedirectedEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.XrefSubCommandStartEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, XrefVetoableSubCommandEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, XrefVetoableSubCommandEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.XrefSubCommandAbortedEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, XrefSubCommandEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, XrefSubCommandEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.XrefSubCommandEndEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, XrefSubCommandEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, XrefSubCommandEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.XrefPreXrefLockFileEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, XrefPreXrefLockFileEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, XrefPreXrefLockFileEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.ObjectEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, ObjectEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, ObjectEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.ObjectErasedEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, ObjectErasedEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, ObjectErasedEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.ProxyResurrectionCompletedEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, ProxyResurrectionCompletedEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, ProxyResurrectionCompletedEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.SystemVariableChangingEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, SystemVariableChangingEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, SystemVariableChangingEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.SystemVariableChangedEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, SystemVariableChangedEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, SystemVariableChangedEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.ObjectClosedEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, ObjectClosedEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, ObjectClosedEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.DxfFiler: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Properties:
    Boolean IsModifyingExistingObject 'get ' : 
    Double Thickness 'get ' : 
    Double Elevation 'get ' : 
    Boolean AtEmbeddedObjectStart 'get ' : 
    Boolean AtEndOfObject 'get ' : 
    Boolean AtExtendedData 'get ' : 
    Boolean AtEndOfFile 'get ' : 
    Boolean IncludesDefaultValues 'get ' : 
    Int32 Precision 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion ExtendedMinorVersion 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.FullDwgVersion DwgVersion 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Database Database 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.FilerType FilerType 'get ' : 
    System.String ErrorMessage 'get ' : 
  Methods:
    RewindFiler(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FilerStatus(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ResetFilerStatus(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetError(String, String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetError(ErrorStatus, String, String[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_ErrorMessage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FilerType(): PrivateScope, Public, HideBySig, SpecialName
    get_Database(): PrivateScope, Public, HideBySig, SpecialName
    get_DwgVersion(): PrivateScope, Public, HideBySig, SpecialName
    get_ExtendedMinorVersion(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Precision(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Precision(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ReadResultBuffer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteResultBuffer(ResultBuffer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteObjectId(DxfCode, ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteString(DxfCode, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteBytes(DxfCode, Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteHandle(DxfCode, Handle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteInt64(DxfCode, Int64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteInt32(DxfCode, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteInt16(DxfCode, Int16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteUInt64(DxfCode, UInt64): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteUInt32(DxfCode, UInt32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteUInt16(DxfCode, UInt16): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteByte(DxfCode, Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteBoolean(DxfCode, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteBool(DxfCode, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteDouble(DxfCode, Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WritePoint2d(DxfCode, Point2d, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WritePoint3d(DxfCode, Point3d, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteVector2d(DxfCode, Vector2d, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteVector3d(DxfCode, Vector3d, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteScale3d(DxfCode, Scale3d, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteXDataStart(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IncludesDefaultValues(): PrivateScope, Public, HideBySig, SpecialName
    PushBackItem(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_AtEndOfFile(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AtSubclassData(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_AtExtendedData(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AtEndOfObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    HaltAtClassBoundaries(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteEmbeddedObjectStart(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_AtEmbeddedObjectStart(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Elevation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Thickness(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsModifyingExistingObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.FilerType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.FilerType FileFiler = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FilerType CopyFiler = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FilerType UndoFiler = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FilerType BagFiler = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FilerType IdTranslateFiler = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FilerType PageFiler = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FilerType DeepCloneFiler = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FilerType IdFiler = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FilerType PurgeFiler = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FilerType WblockCloneFiler = 9 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.FullDwgVersion: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.DwgVersion, Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion MinorVersion 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.DwgVersion MajorVersion 'get ' : 
  Methods:
    get_MajorVersion(): PrivateScope, Public, HideBySig, SpecialName
    get_MinorVersion(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    op_Equality(FullDwgVersion, FullDwgVersion): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(FullDwgVersion, FullDwgVersion): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release0 = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release1 = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release2 = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release3 = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release4 = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release5 = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release6 = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release7 = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release8 = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release9 = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release10 = 10 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release11 = 11 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release12 = 12 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release13 = 13 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release14 = 14 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release15 = 15 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release16 = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release17 = 17 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release18 = 18 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release19 = 19 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release20 = 20 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release21 = 21 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release22 = 22 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release23 = 23 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release24 = 24 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release25 = 25 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release26 = 26 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release27 = 27 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release28 = 28 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release29 = 29 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release30 = 30 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release31 = 31 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release32 = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release33 = 33 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release34 = 34 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release35 = 35 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release36 = 36 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release37 = 37 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release38 = 38 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release39 = 39 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release40 = 40 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release41 = 41 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release42 = 42 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release43 = 43 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release44 = 44 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release45 = 45 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release46 = 46 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release47 = 47 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release48 = 48 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release49 = 49 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release50 = 50 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release51 = 51 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release52 = 52 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release53 = 53 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release54 = 54 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release55 = 55 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release56 = 56 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release57 = 57 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release58 = 58 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release59 = 59 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release60 = 60 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release61 = 61 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release62 = 62 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release63 = 63 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release64 = 64 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release65 = 65 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release66 = 66 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release67 = 67 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release68 = 68 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release69 = 69 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release70 = 70 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release71 = 71 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release72 = 72 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release73 = 73 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release74 = 74 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release75 = 75 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release76 = 76 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release77 = 77 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release78 = 78 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release79 = 79 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release80 = 80 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release81 = 81 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release82 = 82 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release83 = 83 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release84 = 84 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release85 = 85 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release86 = 86 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release87 = 87 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release88 = 88 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release89 = 89 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release90 = 90 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release91 = 91 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release92 = 92 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release93 = 93 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release94 = 94 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release95 = 95 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release96 = 96 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release97 = 97 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release98 = 98 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release99 = 99 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release100 = 100 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release101 = 101 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release102 = 102 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release103 = 103 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release104 = 104 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release105 = 105 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release106 = 106 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release107 = 107 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release108 = 108 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release109 = 109 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release110 = 110 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release111 = 111 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release112 = 112 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release113 = 113 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release114 = 114 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release115 = 115 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release116 = 116 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release117 = 117 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release118 = 118 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release119 = 119 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release120 = 120 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release121 = 121 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release122 = 122 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release123 = 123 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release124 = 124 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release125 = 125 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release126 = 126 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release127 = 127 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release128 = 128 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release129 = 129 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release130 = 130 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release131 = 131 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release132 = 132 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release133 = 133 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release134 = 134 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release135 = 135 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release136 = 136 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release137 = 137 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release138 = 138 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release139 = 139 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release140 = 140 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release141 = 141 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release142 = 142 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release143 = 143 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release144 = 144 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release145 = 145 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release146 = 146 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release147 = 147 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release148 = 148 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release149 = 149 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release150 = 150 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release151 = 151 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release152 = 152 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release153 = 153 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release154 = 154 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release155 = 155 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release156 = 156 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release157 = 157 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release158 = 158 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release159 = 159 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release160 = 160 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion ReleaseNewest = 174 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion ReleaseCurrent = 174 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion ReleaseUnknown = 2147483646 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion ReleaseMax = 2147483647 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release2010Newest = 226 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion Release2010Max = 255 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion ReleaseExtendedNewest = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion ReleaseExtendedCurrent = 224 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MaintenanceReleaseVersion ReleaseCheckExtended = 125 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.DxfCode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.DxfCode Invalid = -9999 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode XDictionary = -6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode PReactors = -5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode Operator = -4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode XDataStart = -3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode HeaderId = -2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode FirstEntityId = -2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode End = -1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode Start = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode Text = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode XRefPath = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ShapeName = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode BlockName = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode AttributeTag = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode SymbolTableName = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode MlineStyleName = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode SymbolTableRecordName = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode AttributePrompt = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode DimStyleName = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode LinetypeProse = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode TextFontFile = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode Description = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode DimPostString = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode TextBigFontFile = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode DimensionAlternativePrefixSuffix = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode CLShapeName = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode SymbolTableRecordComments = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode Handle = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode DimensionBlock = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode DimBlk1 = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode LinetypeName = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode DimBlk2 = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode TextStyleName = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode LayerName = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode CLShapeText = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode XCoordinate = 10 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode YCoordinate = 20 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ZCoordinate = 30 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode Elevation = 38 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode Thickness = 39 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode Real = 40 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ViewportHeight = 40 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode TxtSize = 40 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode TxtStyleXScale = 41 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ViewWidth = 41 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ViewportAspect = 41 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode TxtStylePSize = 42 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ViewLensLength = 42 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ViewFrontClip = 43 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ViewBackClip = 44 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ShapeXOffset = 44 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ShapeYOffset = 45 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ViewHeight = 45 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ShapeScale = 46 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode PixelScale = 47 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode LinetypeScale = 48 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode DashLength = 49 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode MlineOffset = 49 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode LinetypeElement = 49 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode Angle = 50 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ViewportSnapAngle = 50 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ViewportTwist = 51 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode Visibility = 60 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode LayerLinetype = 61 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode Color = 62 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode HasSubentities = 66 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ViewportVisibility = 67 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ViewportActive = 68 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ViewportNumber = 69 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode Int16 = 70 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ViewMode = 71 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode CircleSides = 72 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ViewportZoom = 73 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ViewportIcon = 74 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ViewportSnap = 75 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ViewportGrid = 76 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ViewportSnapStyle = 77 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ViewportSnapPair = 78 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode RegAppFlags = 71 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode TxtStyleFlags = 71 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode LinetypeAlign = 72 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode LinetypePdc = 73 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode Int32 = 90 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode Subclass = 100 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode EmbeddedObjectStart = 101 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ControlString = 102 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode DimVarHandle = 105 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode UcsOrg = 110 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode UcsOrientationX = 111 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode UcsOrientationY = 112 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode XReal = 140 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ViewBrightness = 141 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ViewContrast = 142 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode Int64 = 160 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode XInt16 = 170 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode NormalX = 210 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode NormalY = 220 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode NormalZ = 230 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode XXInt16 = 270 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode Int8 = 280 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode RenderMode = 281 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode Bool = 290 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode XTextString = 300 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode BinaryChunk = 310 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ArbitraryHandle = 320 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode SoftPointerId = 330 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode HardPointerId = 340 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode SoftOwnershipId = 350 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode HardOwnershipId = 360 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode LineWeight = 370 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode PlotStyleNameType = 380 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode PlotStyleNameId = 390 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ExtendedInt16 = 400 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode LayoutName = 410 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ColorRgb = 420 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ColorName = 430 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode Alpha = 440 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode GradientObjType = 450 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode GradientPatType = 451 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode GradientTintType = 452 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode GradientColCount = 453 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode GradientAngle = 460 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode GradientShift = 461 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode GradientTintVal = 462 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode GradientColVal = 463 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode GradientName = 470 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode Comment = 999 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ExtendedDataAsciiString = 1000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ExtendedDataRegAppName = 1001 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ExtendedDataControlString = 1002 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ExtendedDataLayerName = 1003 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ExtendedDataBinaryChunk = 1004 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ExtendedDataHandle = 1005 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ExtendedDataXCoordinate = 1010 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ExtendedDataYCoordinate = 1020 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ExtendedDataZCoordinate = 1030 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ExtendedDataWorldXCoordinate = 1011 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ExtendedDataWorldYCoordinate = 1021 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ExtendedDataWorldZCoordinate = 1031 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ExtendedDataWorldXDisp = 1012 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ExtendedDataWorldYDisp = 1022 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ExtendedDataWorldZDisp = 1032 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ExtendedDataWorldXDir = 1013 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ExtendedDataWorldYDir = 1023 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ExtendedDataWorldZDir = 1033 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ExtendedDataReal = 1040 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ExtendedDataDist = 1041 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ExtendedDataScale = 1042 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ExtendedDataInteger16 = 1070 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DxfCode ExtendedDataInteger32 = 1071 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.Geometry.Scale3d: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Coordinate [Int32] 'get ' : 
    Double Z   'get ' : 
    Double Y   'get ' : 
    Double X   'get ' : 
  Methods:
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    get_Z(): PrivateScope, Public, HideBySig, SpecialName
    MultiplyBy(Double): PrivateScope, Public, HideBySig
    PreMultiplyBy(Scale3d): PrivateScope, Public, HideBySig
    PostMultiplyBy(Scale3d): PrivateScope, Public, HideBySig
    Inverse(): PrivateScope, Public, HideBySig
    IsProportional(): PrivateScope, Public, HideBySig
    IsProportional(Tolerance): PrivateScope, Public, HideBySig
    get_Coordinate(Int32): PrivateScope, Public, HideBySig, SpecialName
    IsEqualTo(Scale3d): PrivateScope, Public, HideBySig
    IsEqualTo(Scale3d, Tolerance): PrivateScope, Public, HideBySig
    GetMatrix(): PrivateScope, Public, HideBySig
    ExtractScale(Matrix3d): PrivateScope, Public, Static, HideBySig
    RemoveScale(Matrix3d): PrivateScope, Public, Static, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Inequality(Scale3d, Scale3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Scale3d, Scale3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Double, Scale3d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Scale3d, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Scale3d, Scale3d): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.DwgVersion: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.DwgVersion MC0To0 = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC1To2 = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC1To40 = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC1To50 = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC2To20 = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC2To10 = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC2To21 = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC2To22 = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC1001 = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC1002 = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC1003 = 10 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC1004 = 11 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC1005 = 12 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC1006 = 13 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC1007 = 14 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC1008 = 15 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC1009 = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC1010 = 17 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC1011 = 18 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC1012 = 19 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC1013 = 20 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC1014 = 21 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC1500 = 22 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC1015 = 23 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC1800a = 24 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC1800 = 25 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC2100a = 26 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC1021 = 27 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC2400a = 28 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC1024 = 29 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC2700a = 30 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC1027 = 31 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC3200a = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion AC1032 = 33 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion Current = 33 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion Newest = 33 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion Unknown = 254 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DwgVersion Max = 255 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.DecomposeForSaveReplacementRecord: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.DBObject, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ExchangeXData 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ReplacementId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.DBObject ReplacementObject 'get ' : 
  Methods:
    get_ReplacementObject(): PrivateScope, Public, HideBySig, SpecialName
    get_ReplacementId(): PrivateScope, Public, HideBySig, SpecialName
    get_ExchangeXData(): PrivateScope, Public, HideBySig, SpecialName
Interface Autodesk.AutoCAD.DatabaseServices.IParameter: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    Autodesk.AutoCAD.DatabaseServices.DBObject ParameterObject 'get ' : 
    Boolean Angular 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.DxfCode DataType 'get ' : 
    Boolean ReadOnly 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ParameterValueSet ValueSet 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ResultBuffer Value 'get set' : 
    System.String Description 'get set' : 
    System.String Expression 'get set' : 
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Expression(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Expression(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Description(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Description(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Value(ResultBuffer): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ValueSet(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_DataType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Angular(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ParameterObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    IsNameUnique(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Autodesk.AutoCAD.DatabaseServices.ParameterValueSet: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Properties:
    Autodesk.AutoCAD.DatabaseServices.DataType DataType 'get ' : 
  Methods:
    get_DataType(): PrivateScope, Public, HideBySig, SpecialName
    CopyFrom(RXObject): PrivateScope, Public, HideBySig
    ValueIsLegal(ResultBuffer): PrivateScope, Public, HideBySig
    GetClosestLegalValue(ResultBuffer): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AuditInfo: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Properties:
    Int32 NumEntities 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.AuditPass AuditPass 'get ' : 
    Int32 NumFixes 'get ' : 
    Int32 NumErrors 'get ' : 
    Boolean FixErrors 'get ' : 
  Methods:
    get_FixErrors(): PrivateScope, Public, HideBySig, SpecialName
    get_NumErrors(): PrivateScope, Public, HideBySig, SpecialName
    get_NumFixes(): PrivateScope, Public, HideBySig, SpecialName
    ErrorsFound(Int32): PrivateScope, Public, HideBySig
    ErrorsFixed(Int32): PrivateScope, Public, HideBySig
    get_AuditPass(): PrivateScope, Public, HideBySig, SpecialName
    PrintError(DBObject, String, String, String): PrivateScope, Public, HideBySig
    PrintError(String, String, String, String): PrivateScope, Public, HideBySig
    RequestRegen(): PrivateScope, Public, HideBySig
    ResetNumEntities(): PrivateScope, Public, HideBySig
    IncNumEntities(): PrivateScope, Public, HideBySig
    get_NumEntities(): PrivateScope, Public, HideBySig, SpecialName
    PrintNumEntities(String): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.Field: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.HyperLink HyperLink 'get set' : 
    System.Object Value 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.DataType DataType 'get ' : 
    System.String Format 'get set' : 
    Boolean IsTextField 'get ' : 
    System.String EvaluatorId 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.FieldFilingOptions FilingOption 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.FieldEvaluationOptions EvaluationOption 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.FieldEvaluationStatusResult EvaluationStatus 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.FieldState State 'get ' : 
  Methods:
    SetFieldCodeWithChildren(FieldCodeFlags, FieldCodeWithChildren): PrivateScope, Public, HideBySig
    SetFieldCodeWithChildren(FieldCodeWithChildren): PrivateScope, Public, HideBySig
    get_State(): PrivateScope, Public, HideBySig, SpecialName
    get_EvaluationStatus(): PrivateScope, Public, HideBySig, SpecialName
    get_EvaluationOption(): PrivateScope, Public, HideBySig, SpecialName
    set_EvaluationOption(FieldEvaluationOptions): PrivateScope, Public, HideBySig, SpecialName
    get_FilingOption(): PrivateScope, Public, HideBySig, SpecialName
    set_FilingOption(FieldFilingOptions): PrivateScope, Public, HideBySig, SpecialName
    get_EvaluatorId(): PrivateScope, Public, HideBySig, SpecialName
    set_EvaluatorId(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsTextField(): PrivateScope, Public, HideBySig, SpecialName
    ConvertToTextField(): PrivateScope, Public, HideBySig
    GetFieldCode(FieldCodeFlags): PrivateScope, Public, HideBySig
    GetFieldCode(): PrivateScope, Public, HideBySig
    SetFieldCode(String): PrivateScope, Public, HideBySig
    GetFieldCodeWithChildren(FieldCodeFlags): PrivateScope, Public, HideBySig
    GetFieldCodeWithChildren(): PrivateScope, Public, HideBySig
    GetChildren(): PrivateScope, Public, HideBySig
    GetChildrenIds(): PrivateScope, Public, HideBySig
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
    Evaluate(): PrivateScope, Public, HideBySig
    Evaluate(Int32, Database): PrivateScope, Public, HideBySig
    get_DataType(): PrivateScope, Public, HideBySig, SpecialName
    GetStringValue(): PrivateScope, Public, HideBySig
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_HyperLink(): PrivateScope, Public, HideBySig, SpecialName
    set_HyperLink(HyperLink): PrivateScope, Public, HideBySig, SpecialName
    GetData(String): PrivateScope, Public, HideBySig
    SetData(String, Object, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetData(String, Object): PrivateScope, Public, HideBySig
    FindField(String, Int32, Int32&, Int32&): PrivateScope, Public, Static, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.AnnotativeStates: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.AnnotativeStates True = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AnnotativeStates False = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AnnotativeStates NotApplicable = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.PaperOrientationStates: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.PaperOrientationStates True = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PaperOrientationStates False = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PaperOrientationStates NotApplicable = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.Viewport: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Bitmap Thumbnail 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.AnnotationScale AnnotationScale 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.ToneOperatorParameters ToneOperatorParameters 'get set' : 
    Boolean LinkedToSheetView 'get ' : 
    Boolean PlotAsRaster 'get ' : 
    Boolean PlotWireframe 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ShadePlotId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Background 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ShadePlotType ShadePlot 'get set' : 
    Boolean UcsPerViewport 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.OrthographicView ViewOrthographic 'get ' : 
    Autodesk.AutoCAD.Geometry.CoordinateSystem3d Ucs 'get set' : 
    Double Elevation 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId UcsName 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.OrthographicView UcsOrthographic 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId NonRectClipEntityId 'get set' : 
    Boolean NonRectClipOn 'get set' : 
    System.String EffectivePlotStyleSheet 'get ' : 
    System.String PlotStyleSheet 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType StandardScale 'get set' : 
    Double CustomScale 'get set' : 
    Boolean Transparent 'get set' : 
    Boolean Locked 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId VisualStyleId 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId SunId 'get ' : 
    Autodesk.AutoCAD.Colors.Color AmbientLightColor 'get set' : 
    Double Contrast 'get set' : 
    Double Brightness 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.DefaultLightingType DefaultLightingType 'get set' : 
    Boolean DefaultLightingOn 'get set' : 
    Int16 GridMajor 'get set' : 
    Boolean GridFollow 'get set' : 
    Boolean GridSubdivisionRestricted 'get set' : 
    Boolean GridAdaptive 'get set' : 
    Boolean GridBoundToLimits 'get set' : 
    Boolean HiddenLinesRemoved 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector2d GridIncrement 'get set' : 
    Boolean GridOn 'get set' : 
    Int32 SnapIsoPair 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector2d SnapIncrement 'get set' : 
    Autodesk.AutoCAD.Geometry.Point2d SnapBasePoint 'get set' : 
    Double SnapAngle 'get set' : 
    Boolean SnapIsometric 'get set' : 
    Boolean SnapOn 'get set' : 
    Int32 CircleSides 'get set' : 
    Boolean FastZoomOn 'get set' : 
    Boolean UcsIconAtOrigin 'get set' : 
    Boolean UcsIconVisible 'get set' : 
    Boolean UcsFollowModeOn 'get set' : 
    Boolean PerspectiveOn 'get set' : 
    Double BackClipDistance 'get set' : 
    Double FrontClipDistance 'get set' : 
    Boolean FrontClipAtEyeOn 'get set' : 
    Boolean BackClipOn 'get set' : 
    Boolean FrontClipOn 'get set' : 
    Double LensLength 'get set' : 
    Double TwistAngle 'get set' : 
    Autodesk.AutoCAD.Geometry.Point2d ViewCenter 'get set' : 
    Double ViewHeight 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d ViewDirection 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d ViewTarget 'get set' : 
    Boolean On 'get set' : 
    Int32 Number 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d CenterPoint 'get set' : 
    Double Width 'get set' : 
    Double Height 'get set' : 
  Methods:
    set_Brightness(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Contrast(): PrivateScope, Public, HideBySig, SpecialName
    set_Contrast(Double): PrivateScope, Public, HideBySig, SpecialName
    get_AmbientLightColor(): PrivateScope, Public, HideBySig, SpecialName
    set_AmbientLightColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_SunId(): PrivateScope, Public, HideBySig, SpecialName
    SetSun(DBObject): PrivateScope, Public, HideBySig
    get_VisualStyleId(): PrivateScope, Public, HideBySig, SpecialName
    set_VisualStyleId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_Locked(): PrivateScope, Public, HideBySig, SpecialName
    set_Locked(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Transparent(): PrivateScope, Public, HideBySig, SpecialName
    set_Transparent(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_CustomScale(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomScale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_StandardScale(): PrivateScope, Public, HideBySig, SpecialName
    set_StandardScale(StandardScaleType): PrivateScope, Public, HideBySig, SpecialName
    get_PlotStyleSheet(): PrivateScope, Public, HideBySig, SpecialName
    set_PlotStyleSheet(String): PrivateScope, Public, HideBySig, SpecialName
    get_EffectivePlotStyleSheet(): PrivateScope, Public, HideBySig, SpecialName
    get_NonRectClipOn(): PrivateScope, Public, HideBySig, SpecialName
    set_NonRectClipOn(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_NonRectClipEntityId(): PrivateScope, Public, HideBySig, SpecialName
    set_NonRectClipEntityId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_UcsOrthographic(): PrivateScope, Public, HideBySig, SpecialName
    get_UcsName(): PrivateScope, Public, HideBySig, SpecialName
    get_Elevation(): PrivateScope, Public, HideBySig, SpecialName
    set_Elevation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Ucs(): PrivateScope, Public, HideBySig, SpecialName
    set_Ucs(CoordinateSystem3d): PrivateScope, Public, HideBySig, SpecialName
    GetUcs(Point3d&, Vector3d&, Vector3d&): PrivateScope, Public, HideBySig
    SetUcs(ObjectId): PrivateScope, Public, HideBySig
    SetUcs(OrthographicView): PrivateScope, Public, HideBySig
    SetUcs(Point3d, Vector3d, Vector3d): PrivateScope, Public, HideBySig
    SetUcsToWorld(): PrivateScope, Public, HideBySig
    get_ViewOrthographic(): PrivateScope, Public, HideBySig, SpecialName
    SetViewDirection(OrthographicView): PrivateScope, Public, HideBySig
    get_UcsPerViewport(): PrivateScope, Public, HideBySig, SpecialName
    set_UcsPerViewport(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ShadePlot(): PrivateScope, Public, HideBySig, SpecialName
    set_ShadePlot(ShadePlotType): PrivateScope, Public, HideBySig, SpecialName
    get_Background(): PrivateScope, Public, HideBySig, SpecialName
    set_Background(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_ShadePlotId(): PrivateScope, Public, HideBySig, SpecialName
    SetShadePlot(ShadePlotType, ObjectId): PrivateScope, Public, HideBySig
    get_PlotWireframe(): PrivateScope, Public, HideBySig, SpecialName
    get_PlotAsRaster(): PrivateScope, Public, HideBySig, SpecialName
    get_LinkedToSheetView(): PrivateScope, Public, HideBySig, SpecialName
    get_ToneOperatorParameters(): PrivateScope, Public, HideBySig, SpecialName
    set_ToneOperatorParameters(ToneOperatorParameters): PrivateScope, Public, HideBySig, SpecialName
    get_AnnotationScale(): PrivateScope, Public, HideBySig, SpecialName
    set_AnnotationScale(AnnotationScale): PrivateScope, Public, HideBySig, SpecialName
    GetPreviousBackground(DrawableType): PrivateScope, Public, HideBySig
    SetPreviousBackground(ObjectId, DrawableType): PrivateScope, Public, HideBySig
    get_Thumbnail(): PrivateScope, Public, HideBySig, SpecialName
    set_Thumbnail(Bitmap): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Width(Double): PrivateScope, Public, HideBySig, SpecialName
    get_CenterPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_CenterPoint(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_Number(): PrivateScope, Public, HideBySig, SpecialName
    get_On(): PrivateScope, Public, HideBySig, SpecialName
    set_On(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ViewTarget(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewTarget(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_ViewDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewDirection(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_ViewHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewHeight(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ViewCenter(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewCenter(Point2d): PrivateScope, Public, HideBySig, SpecialName
    get_TwistAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_TwistAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LensLength(): PrivateScope, Public, HideBySig, SpecialName
    set_LensLength(Double): PrivateScope, Public, HideBySig, SpecialName
    get_FrontClipOn(): PrivateScope, Public, HideBySig, SpecialName
    set_FrontClipOn(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_BackClipOn(): PrivateScope, Public, HideBySig, SpecialName
    set_BackClipOn(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_FrontClipAtEyeOn(): PrivateScope, Public, HideBySig, SpecialName
    set_FrontClipAtEyeOn(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_FrontClipDistance(): PrivateScope, Public, HideBySig, SpecialName
    set_FrontClipDistance(Double): PrivateScope, Public, HideBySig, SpecialName
    get_BackClipDistance(): PrivateScope, Public, HideBySig, SpecialName
    set_BackClipDistance(Double): PrivateScope, Public, HideBySig, SpecialName
    get_PerspectiveOn(): PrivateScope, Public, HideBySig, SpecialName
    set_PerspectiveOn(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_UcsFollowModeOn(): PrivateScope, Public, HideBySig, SpecialName
    set_UcsFollowModeOn(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_UcsIconVisible(): PrivateScope, Public, HideBySig, SpecialName
    set_UcsIconVisible(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_UcsIconAtOrigin(): PrivateScope, Public, HideBySig, SpecialName
    set_UcsIconAtOrigin(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_FastZoomOn(): PrivateScope, Public, HideBySig, SpecialName
    set_FastZoomOn(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_CircleSides(): PrivateScope, Public, HideBySig, SpecialName
    set_CircleSides(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SnapOn(): PrivateScope, Public, HideBySig, SpecialName
    set_SnapOn(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SnapIsometric(): PrivateScope, Public, HideBySig, SpecialName
    set_SnapIsometric(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SnapAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_SnapAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_SnapBasePoint(): PrivateScope, Public, HideBySig, SpecialName
    set_SnapBasePoint(Point2d): PrivateScope, Public, HideBySig, SpecialName
    get_SnapIncrement(): PrivateScope, Public, HideBySig, SpecialName
    set_SnapIncrement(Vector2d): PrivateScope, Public, HideBySig, SpecialName
    get_SnapIsoPair(): PrivateScope, Public, HideBySig, SpecialName
    set_SnapIsoPair(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_GridOn(): PrivateScope, Public, HideBySig, SpecialName
    set_GridOn(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_GridIncrement(): PrivateScope, Public, HideBySig, SpecialName
    set_GridIncrement(Vector2d): PrivateScope, Public, HideBySig, SpecialName
    get_HiddenLinesRemoved(): PrivateScope, Public, HideBySig, SpecialName
    set_HiddenLinesRemoved(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_GridBoundToLimits(): PrivateScope, Public, HideBySig, SpecialName
    set_GridBoundToLimits(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_GridAdaptive(): PrivateScope, Public, HideBySig, SpecialName
    set_GridAdaptive(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_GridSubdivisionRestricted(): PrivateScope, Public, HideBySig, SpecialName
    set_GridSubdivisionRestricted(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_GridFollow(): PrivateScope, Public, HideBySig, SpecialName
    set_GridFollow(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_GridMajor(): PrivateScope, Public, HideBySig, SpecialName
    set_GridMajor(Int16): PrivateScope, Public, HideBySig, SpecialName
    FreezeLayersInViewport(IEnumerator): PrivateScope, Public, HideBySig
    ThawLayersInViewport(IEnumerator): PrivateScope, Public, HideBySig
    ThawAllLayersInViewport(): PrivateScope, Public, HideBySig
    GetFrozenLayers(): PrivateScope, Public, HideBySig
    IsLayerFrozenInViewport(ObjectId): PrivateScope, Public, HideBySig
    UpdateDisplay(): PrivateScope, Public, HideBySig
    get_DefaultLightingOn(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultLightingOn(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultLightingType(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultLightingType(DefaultLightingType): PrivateScope, Public, HideBySig, SpecialName
    get_Brightness(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.ObjectContext: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Properties:
    System.String CollectionName 'get ' : 
    IntPtr UniqueIdentifier 'get ' : 
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_UniqueIdentifier(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CollectionName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.SymbolTableRecord: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
  Properties:
    Boolean IsResolved 'get ' : 
    Boolean IsDependent 'get ' : 
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsDependent(): PrivateScope, Public, HideBySig, SpecialName
    get_IsResolved(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.SymbolTableEnumerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId Current 'get ' : 
  Methods:
    IEnumerator.get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MoveNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.SymbolTable: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
  Interfaces:
    System.Collections.IEnumerable
  Properties:
    Autodesk.AutoCAD.DatabaseServices.SymbolTable IncludingErased 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Item [System.String] 'get ' : 
  Methods:
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    Has(ObjectId): PrivateScope, Public, HideBySig
    Has(String): PrivateScope, Public, HideBySig
    Add(SymbolTableRecord): PrivateScope, Public, HideBySig
    get_IncludingErased(): PrivateScope, Public, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Autodesk.AutoCAD.Colors.EntityColor: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Byte, Byte, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Colors.ColorMethod, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Colors.ColorMethod): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsLayerFrozenOrOff 'get ' : 
    Boolean IsNone 'get ' : 
    Boolean IsLayerFrozen 'get ' : 
    Boolean IsLayerOff 'get ' : 
    Boolean IsForeground 'get ' : 
    Boolean IsByPen 'get ' : 
    Boolean IsByAci 'get ' : 
    Boolean IsByBlock 'get ' : 
    Boolean IsByLayer 'get ' : 
    Boolean IsByColor 'get ' : 
    Byte Blue  'get ' : 
    Byte Green 'get ' : 
    Byte Red   'get ' : 
    Int16 PenIndex 'get ' : 
    Int32 LayerIndex 'get ' : 
    Int16 ColorIndex 'get ' : 
    Int32 TrueColor 'get ' : 
    Autodesk.AutoCAD.Colors.ColorMethod ColorMethod 'get ' : 
  Methods:
    get_ColorMethod(): PrivateScope, Public, HideBySig, SpecialName
    get_TrueColor(): PrivateScope, Public, HideBySig, SpecialName
    get_ColorIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_LayerIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_PenIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_Red(): PrivateScope, Public, HideBySig, SpecialName
    get_Green(): PrivateScope, Public, HideBySig, SpecialName
    get_Blue(): PrivateScope, Public, HideBySig, SpecialName
    get_IsByColor(): PrivateScope, Public, HideBySig, SpecialName
    get_IsByLayer(): PrivateScope, Public, HideBySig, SpecialName
    get_IsByBlock(): PrivateScope, Public, HideBySig, SpecialName
    get_IsByAci(): PrivateScope, Public, HideBySig, SpecialName
    get_IsByPen(): PrivateScope, Public, HideBySig, SpecialName
    get_IsForeground(): PrivateScope, Public, HideBySig, SpecialName
    get_IsLayerOff(): PrivateScope, Public, HideBySig, SpecialName
    get_IsLayerFrozen(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNone(): PrivateScope, Public, HideBySig, SpecialName
    get_IsLayerFrozenOrOff(): PrivateScope, Public, HideBySig, SpecialName
    LookUpRgb(Byte): PrivateScope, Public, Static, HideBySig
    LookUpAci(Byte, Byte, Byte): PrivateScope, Public, Static, HideBySig
    op_Equality(EntityColor, EntityColor): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(EntityColor, EntityColor): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Autodesk.AutoCAD.Colors.ColorMethod: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.Colors.ColorMethod None = 200 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Colors.ColorMethod ByLayer = 192 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Colors.ColorMethod ByBlock = 193 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Colors.ColorMethod ByColor = 194 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Colors.ColorMethod ByAci = 195 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Colors.ColorMethod ByPen = 196 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Colors.ColorMethod Foreground = 197 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Colors.ColorMethod LayerOff = 198 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Colors.ColorMethod LayerFrozen = 199 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.Colors.ColorConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.ComponentModel.TypeConverter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CanConvertFrom(ITypeDescriptorContext, Type): PrivateScope, Public, Virtual, HideBySig
    ConvertFrom(ITypeDescriptorContext, CultureInfo, Object): PrivateScope, Public, Virtual, HideBySig
    ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type): PrivateScope, Public, Virtual, HideBySig
Struct Autodesk.AutoCAD.Colors.Transparency: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Colors.TransparencyMethod): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsSolid 'get ' : 
    Boolean IsClear 'get ' : 
    Boolean IsInvalid 'get ' : 
    Boolean IsByLayer 'get ' : 
    Boolean IsByBlock 'get ' : 
    Boolean IsByAlpha 'get ' : 
    Byte Alpha 'get ' : 
  Methods:
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Inequality(Transparency, Transparency): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Transparency, Transparency): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    get_Alpha(): PrivateScope, Public, HideBySig, SpecialName
    get_IsByAlpha(): PrivateScope, Public, HideBySig, SpecialName
    get_IsByBlock(): PrivateScope, Public, HideBySig, SpecialName
    get_IsByLayer(): PrivateScope, Public, HideBySig, SpecialName
    get_IsInvalid(): PrivateScope, Public, HideBySig, SpecialName
    get_IsClear(): PrivateScope, Public, HideBySig, SpecialName
    get_IsSolid(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.Colors.TransparencyMethod: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.Colors.TransparencyMethod ByLayer = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Colors.TransparencyMethod ByBlock = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Colors.TransparencyMethod ByAlpha = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Colors.TransparencyMethod ErrorValue = 3 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.LayerTableRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.SymbolTableRecord
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean HasOverrides 'get ' : 
    Boolean IsReconciled 'get set' : 
    Boolean IsHidden 'get set' : 
    System.String Description 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId PlotStyleNameId 'get set' : 
    System.String PlotStyleName 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight 'get set' : 
    Boolean IsPlottable 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId MaterialId 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId LinetypeObjectId 'get set' : 
    Autodesk.AutoCAD.Colors.Transparency Transparency 'get set' : 
    Autodesk.AutoCAD.Colors.EntityColor EntityColor 'get ' : 
    Autodesk.AutoCAD.Colors.Color Color 'get set' : 
    Boolean IsLocked 'get set' : 
    Boolean ViewportVisibilityDefault 'get set' : 
    Boolean IsOff 'get set' : 
    Boolean IsFrozen 'get set' : 
    Boolean IsUsed 'get ' : 
  Methods:
    get_IsUsed(): PrivateScope, Public, HideBySig, SpecialName
    get_IsFrozen(): PrivateScope, Public, HideBySig, SpecialName
    set_IsFrozen(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsOff(): PrivateScope, Public, HideBySig, SpecialName
    set_IsOff(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ViewportVisibilityDefault(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewportVisibilityDefault(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsLocked(): PrivateScope, Public, HideBySig, SpecialName
    set_IsLocked(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    set_Color(Color): PrivateScope, Public, HideBySig, SpecialName
    get_EntityColor(): PrivateScope, Public, HideBySig, SpecialName
    get_Transparency(): PrivateScope, Public, HideBySig, SpecialName
    set_Transparency(Transparency): PrivateScope, Public, HideBySig, SpecialName
    get_LinetypeObjectId(): PrivateScope, Public, HideBySig, SpecialName
    set_LinetypeObjectId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_MaterialId(): PrivateScope, Public, HideBySig, SpecialName
    set_MaterialId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_IsPlottable(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPlottable(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_LineWeight(): PrivateScope, Public, HideBySig, SpecialName
    set_LineWeight(LineWeight): PrivateScope, Public, HideBySig, SpecialName
    get_PlotStyleName(): PrivateScope, Public, HideBySig, SpecialName
    set_PlotStyleName(String): PrivateScope, Public, HideBySig, SpecialName
    get_PlotStyleNameId(): PrivateScope, Public, HideBySig, SpecialName
    set_PlotStyleNameId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    set_Description(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsHidden(): PrivateScope, Public, HideBySig, SpecialName
    set_IsHidden(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsReconciled(): PrivateScope, Public, HideBySig, SpecialName
    set_IsReconciled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    GetViewportOverrides(ObjectId): PrivateScope, Public, HideBySig
    RemoveAllOverrides(): PrivateScope, Public, HideBySig
    HasViewportOverrides(ObjectId): PrivateScope, Public, HideBySig
    get_HasOverrides(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.LineWeight: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight000 = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight005 = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight009 = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight013 = 13 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight015 = 15 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight018 = 18 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight020 = 20 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight025 = 25 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight030 = 30 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight035 = 35 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight040 = 40 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight050 = 50 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight053 = 53 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight060 = 60 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight070 = 70 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight080 = 80 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight090 = 90 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight100 = 100 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight106 = 106 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight120 = 120 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight140 = 140 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight158 = 158 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight200 = 200 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight211 = 211 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight ByLayer = -1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight ByBlock = -2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight ByLineWeightDefault = -3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineWeight ByDIPs = -4 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.LayerViewportProperties: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Properties:
    Boolean IsPlotStyleOverridden 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId PlotStyleNameId 'get set' : 
    System.String PlotStyleName 'get set' : 
    Boolean IsTransparencyOverridden 'get set' : 
    Autodesk.AutoCAD.Colors.Transparency Transparency 'get set' : 
    Boolean IsLineWeightOverridden 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight 'get set' : 
    Boolean IsLinetypeOverridden 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId LinetypeObjectId 'get set' : 
    Boolean IsColorOverridden 'get set' : 
    Autodesk.AutoCAD.Colors.Color Color 'get set' : 
  Methods:
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    set_Color(Color): PrivateScope, Public, HideBySig, SpecialName
    get_IsColorOverridden(): PrivateScope, Public, HideBySig, SpecialName
    set_IsColorOverridden(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_LinetypeObjectId(): PrivateScope, Public, HideBySig, SpecialName
    set_LinetypeObjectId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_IsLinetypeOverridden(): PrivateScope, Public, HideBySig, SpecialName
    set_IsLinetypeOverridden(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_LineWeight(): PrivateScope, Public, HideBySig, SpecialName
    set_LineWeight(LineWeight): PrivateScope, Public, HideBySig, SpecialName
    get_IsLineWeightOverridden(): PrivateScope, Public, HideBySig, SpecialName
    set_IsLineWeightOverridden(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Transparency(): PrivateScope, Public, HideBySig, SpecialName
    set_Transparency(Transparency): PrivateScope, Public, HideBySig, SpecialName
    get_IsTransparencyOverridden(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTransparencyOverridden(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_PlotStyleName(): PrivateScope, Public, HideBySig, SpecialName
    set_PlotStyleName(String): PrivateScope, Public, HideBySig, SpecialName
    get_PlotStyleNameId(): PrivateScope, Public, HideBySig, SpecialName
    set_PlotStyleNameId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_IsPlotStyleOverridden(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPlotStyleOverridden(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    RemoveOverrides(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.LayerTable: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.SymbolTable
  Properties:
    Autodesk.AutoCAD.DatabaseServices.LayerTable SkippingReconciled 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.LayerTable IncludingHidden 'get ' : 
    Boolean HasUnreconciledLayers 'get ' : 
  Methods:
    GenerateUsageData(): PrivateScope, Public, HideBySig
    get_HasUnreconciledLayers(): PrivateScope, Public, HideBySig, SpecialName
    GetUnreconciledLayers(): PrivateScope, Public, HideBySig
    get_IncludingHidden(): PrivateScope, Public, HideBySig, SpecialName
    get_SkippingReconciled(): PrivateScope, Public, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AbstractViewTable: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.SymbolTable
Class Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.SymbolTableRecord
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.ToneOperatorParameters ToneOperatorParameters 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId VisualStyleId 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Background 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.OrthographicView ViewOrthographic 'get ' : 
    Double Elevation 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId UcsName 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.OrthographicView UcsOrthographic 'get ' : 
    Autodesk.AutoCAD.Geometry.CoordinateSystem3d Ucs 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId SunId 'get ' : 
    Autodesk.AutoCAD.Colors.Color AmbientLightColor 'get set' : 
    Double Contrast 'get set' : 
    Double Brightness 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.DefaultLightingType DefaultLightingType 'get set' : 
    Boolean DefaultLightingOn 'get set' : 
    Boolean FrontClipAtEye 'get set' : 
    Boolean BackClipEnabled 'get set' : 
    Boolean FrontClipEnabled 'get set' : 
    Boolean PerspectiveEnabled 'get set' : 
    Double BackClipDistance 'get set' : 
    Double FrontClipDistance 'get set' : 
    Double LensLength 'get set' : 
    Double ViewTwist 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d ViewDirection 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Target 'get set' : 
    Double Width 'get set' : 
    Double Height 'get set' : 
    Autodesk.AutoCAD.Geometry.Point2d CenterPoint 'get set' : 
  Methods:
    get_CenterPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_CenterPoint(Point2d): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Width(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Target(): PrivateScope, Public, HideBySig, SpecialName
    set_Target(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_ViewDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewDirection(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_ViewTwist(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewTwist(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LensLength(): PrivateScope, Public, HideBySig, SpecialName
    set_LensLength(Double): PrivateScope, Public, HideBySig, SpecialName
    get_FrontClipDistance(): PrivateScope, Public, HideBySig, SpecialName
    set_FrontClipDistance(Double): PrivateScope, Public, HideBySig, SpecialName
    get_BackClipDistance(): PrivateScope, Public, HideBySig, SpecialName
    set_BackClipDistance(Double): PrivateScope, Public, HideBySig, SpecialName
    get_PerspectiveEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_PerspectiveEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_FrontClipEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_FrontClipEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_BackClipEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_BackClipEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_FrontClipAtEye(): PrivateScope, Public, HideBySig, SpecialName
    set_FrontClipAtEye(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultLightingOn(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultLightingOn(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultLightingType(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultLightingType(DefaultLightingType): PrivateScope, Public, HideBySig, SpecialName
    get_Brightness(): PrivateScope, Public, HideBySig, SpecialName
    set_Brightness(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Contrast(): PrivateScope, Public, HideBySig, SpecialName
    set_Contrast(Double): PrivateScope, Public, HideBySig, SpecialName
    get_AmbientLightColor(): PrivateScope, Public, HideBySig, SpecialName
    set_AmbientLightColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_SunId(): PrivateScope, Public, HideBySig, SpecialName
    SetSun(DBObject): PrivateScope, Public, HideBySig
    get_Ucs(): PrivateScope, Public, HideBySig, SpecialName
    get_UcsOrthographic(): PrivateScope, Public, HideBySig, SpecialName
    get_UcsName(): PrivateScope, Public, HideBySig, SpecialName
    get_Elevation(): PrivateScope, Public, HideBySig, SpecialName
    set_Elevation(Double): PrivateScope, Public, HideBySig, SpecialName
    SetUcs(ObjectId): PrivateScope, Public, HideBySig
    SetUcs(OrthographicView): PrivateScope, Public, HideBySig
    SetUcs(Point3d, Vector3d, Vector3d): PrivateScope, Public, HideBySig
    SetUcsToWorld(): PrivateScope, Public, HideBySig
    get_ViewOrthographic(): PrivateScope, Public, HideBySig, SpecialName
    SetViewDirection(OrthographicView): PrivateScope, Public, HideBySig
    get_Background(): PrivateScope, Public, HideBySig, SpecialName
    set_Background(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_VisualStyleId(): PrivateScope, Public, HideBySig, SpecialName
    set_VisualStyleId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_ToneOperatorParameters(): PrivateScope, Public, HideBySig, SpecialName
    set_ToneOperatorParameters(ToneOperatorParameters): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.DefaultLightingType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.DefaultLightingType OneDistantLight = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DefaultLightingType TwoDistantLights = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.OrthographicView: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.OrthographicView NonOrthoView = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.OrthographicView TopView = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.OrthographicView BottomView = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.OrthographicView FrontView = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.OrthographicView BackView = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.OrthographicView LeftView = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.OrthographicView RightView = 6 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.GraphicsInterface.ToneOperatorParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.ExteriorDaylightMode ExteriorDaylight 'get set' : 
    Autodesk.AutoCAD.Colors.Color WhiteColor 'get set' : 
    Double MidTones 'get set' : 
    Double Contrast 'get set' : 
    Double Brightness 'get set' : 
    Boolean ProcessBackground 'get set' : 
    Boolean ColorDifferentiation 'get set' : 
    Boolean ChromaticAdaptation 'get set' : 
    Boolean IsActive 'get set' : 
  Methods:
    get_IsActive(): PrivateScope, Public, HideBySig, SpecialName
    set_IsActive(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ChromaticAdaptation(): PrivateScope, Public, HideBySig, SpecialName
    set_ChromaticAdaptation(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ColorDifferentiation(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorDifferentiation(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ProcessBackground(): PrivateScope, Public, HideBySig, SpecialName
    set_ProcessBackground(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Brightness(): PrivateScope, Public, HideBySig, SpecialName
    set_Brightness(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Contrast(): PrivateScope, Public, HideBySig, SpecialName
    set_Contrast(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MidTones(): PrivateScope, Public, HideBySig, SpecialName
    set_MidTones(Double): PrivateScope, Public, HideBySig, SpecialName
    get_WhiteColor(): PrivateScope, Public, HideBySig, SpecialName
    set_WhiteColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ExteriorDaylight(): PrivateScope, Public, HideBySig, SpecialName
    set_ExteriorDaylight(ExteriorDaylightMode): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    CopyFrom(RXObject): PrivateScope, Public, Virtual, HideBySig
    op_Equality(ToneOperatorParameters, ToneOperatorParameters): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(ToneOperatorParameters, ToneOperatorParameters): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.ViewTableRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Bitmap Thumbnail 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.AnnotationScale AnnotationScale 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId LiveSection 'get set' : 
    Boolean ViewAssociatedToViewport 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Layout 'get set' : 
    System.String LayerState 'get set' : 
    System.String CategoryName 'get set' : 
    Boolean IsUcsAssociatedToView 'get ' : 
    Boolean IsPaperspaceView 'get set' : 
  Methods:
    get_IsPaperspaceView(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPaperspaceView(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsUcsAssociatedToView(): PrivateScope, Public, HideBySig, SpecialName
    DisassociateUcsFromView(): PrivateScope, Public, HideBySig
    get_CategoryName(): PrivateScope, Public, HideBySig, SpecialName
    set_CategoryName(String): PrivateScope, Public, HideBySig, SpecialName
    get_LayerState(): PrivateScope, Public, HideBySig, SpecialName
    set_LayerState(String): PrivateScope, Public, HideBySig, SpecialName
    get_Layout(): PrivateScope, Public, HideBySig, SpecialName
    set_Layout(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_ViewAssociatedToViewport(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewAssociatedToViewport(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_LiveSection(): PrivateScope, Public, HideBySig, SpecialName
    set_LiveSection(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_AnnotationScale(): PrivateScope, Public, HideBySig, SpecialName
    set_AnnotationScale(AnnotationScale): PrivateScope, Public, HideBySig, SpecialName
    get_Thumbnail(): PrivateScope, Public, HideBySig, SpecialName
    set_Thumbnail(Bitmap): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.AnnotationScale: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ObjectContext
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsTemporaryScale 'get ' : 
    Double Scale 'get ' : 
    Double DrawingUnits 'get set' : 
    Double PaperUnits 'get set' : 
    System.String CollectionName 'get ' : 
    IntPtr UniqueIdentifier 'get ' : 
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_UniqueIdentifier(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CollectionName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_PaperUnits(): PrivateScope, Public, HideBySig, SpecialName
    set_PaperUnits(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DrawingUnits(): PrivateScope, Public, HideBySig, SpecialName
    set_DrawingUnits(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Scale(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTemporaryScale(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.ViewportTableRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AbstractViewTableRecord
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.ToneOperatorParameters ToneOperatorParameters 'get set' : 
    Int32 Number 'get ' : 
    Int16 GridMajor 'get set' : 
    Boolean GridFollow 'get set' : 
    Boolean GridSubdivisionRestricted 'get set' : 
    Boolean GridAdaptive 'get set' : 
    Boolean GridBoundToLimits 'get set' : 
    Boolean UcsSavedWithViewport 'get set' : 
    Autodesk.AutoCAD.Geometry.Point2d SnapIncrements 'get set' : 
    Autodesk.AutoCAD.Geometry.Point2d SnapBase 'get set' : 
    Double SnapAngle 'get set' : 
    Int16 SnapPair 'get set' : 
    Boolean IsometricSnapEnabled 'get set' : 
    Boolean SnapEnabled 'get set' : 
    Autodesk.AutoCAD.Geometry.Point2d GridIncrements 'get set' : 
    Boolean GridEnabled 'get set' : 
    Boolean IconAtOrigin 'get set' : 
    Boolean IconEnabled 'get set' : 
    Boolean FastZoomsEnabled 'get set' : 
    Int16 CircleSides 'get set' : 
    Boolean UcsFollowMode 'get set' : 
    Autodesk.AutoCAD.Geometry.Point2d UpperRightCorner 'get set' : 
    Autodesk.AutoCAD.Geometry.Point2d LowerLeftCorner 'get set' : 
  Methods:
    get_LowerLeftCorner(): PrivateScope, Public, HideBySig, SpecialName
    set_LowerLeftCorner(Point2d): PrivateScope, Public, HideBySig, SpecialName
    get_UpperRightCorner(): PrivateScope, Public, HideBySig, SpecialName
    set_UpperRightCorner(Point2d): PrivateScope, Public, HideBySig, SpecialName
    get_UcsFollowMode(): PrivateScope, Public, HideBySig, SpecialName
    set_UcsFollowMode(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_CircleSides(): PrivateScope, Public, HideBySig, SpecialName
    set_CircleSides(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_FastZoomsEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_FastZoomsEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IconEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_IconEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IconAtOrigin(): PrivateScope, Public, HideBySig, SpecialName
    set_IconAtOrigin(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_GridEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_GridEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_GridIncrements(): PrivateScope, Public, HideBySig, SpecialName
    set_GridIncrements(Point2d): PrivateScope, Public, HideBySig, SpecialName
    get_SnapEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_SnapEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsometricSnapEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_IsometricSnapEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SnapPair(): PrivateScope, Public, HideBySig, SpecialName
    set_SnapPair(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_SnapAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_SnapAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_SnapBase(): PrivateScope, Public, HideBySig, SpecialName
    set_SnapBase(Point2d): PrivateScope, Public, HideBySig, SpecialName
    get_SnapIncrements(): PrivateScope, Public, HideBySig, SpecialName
    set_SnapIncrements(Point2d): PrivateScope, Public, HideBySig, SpecialName
    get_UcsSavedWithViewport(): PrivateScope, Public, HideBySig, SpecialName
    set_UcsSavedWithViewport(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_GridBoundToLimits(): PrivateScope, Public, HideBySig, SpecialName
    set_GridBoundToLimits(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_GridAdaptive(): PrivateScope, Public, HideBySig, SpecialName
    set_GridAdaptive(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_GridSubdivisionRestricted(): PrivateScope, Public, HideBySig, SpecialName
    set_GridSubdivisionRestricted(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_GridFollow(): PrivateScope, Public, HideBySig, SpecialName
    set_GridFollow(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_GridMajor(): PrivateScope, Public, HideBySig, SpecialName
    set_GridMajor(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_Number(): PrivateScope, Public, HideBySig, SpecialName
    GetPreviousBackground(DrawableType): PrivateScope, Public, HideBySig
    SetPreviousBackground(ObjectId, DrawableType): PrivateScope, Public, HideBySig
    get_ToneOperatorParameters(): PrivateScope, Public, HideBySig, SpecialName
    set_ToneOperatorParameters(ToneOperatorParameters): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.DataCell: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.CellType CellType 'get ' : 
    System.Object Value 'get ' : 
  Methods:
    Init(): PrivateScope, Public, HideBySig
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    SetBool(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetInteger(Int32): PrivateScope, Public, HideBySig
    SetDouble(Double): PrivateScope, Public, HideBySig
    SetString(String): PrivateScope, Public, HideBySig
    SetPoint(Point3d): PrivateScope, Public, HideBySig
    SetVector(Vector3d): PrivateScope, Public, HideBySig
    SetObjectId(ObjectId): PrivateScope, Public, HideBySig
    SetHardOwnershipId(ObjectId): PrivateScope, Public, HideBySig
    SetSoftOwnershipId(ObjectId): PrivateScope, Public, HideBySig
    SetHardPointerId(ObjectId): PrivateScope, Public, HideBySig
    SetSoftPointerId(ObjectId): PrivateScope, Public, HideBySig
    get_CellType(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.CellType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.CellType Unknown = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellType Integer = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellType Double = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellType CharPtr = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellType Point = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellType ObjectId = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellType HardOwnerId = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellType SoftOwnerId = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellType HardPtrId = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellType SoftPtrId = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellType Bool = 10 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellType Vector = 11 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.DataColumn: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.CellType, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.DataColumn): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 NumCells 'get ' : 
    System.String ColumnName 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.CellType ColumnType 'get set' : 
    Int32 GrowLength 'get set' : 
    Int32 PhysicalLength 'get set' : 
  Methods:
    get_PhysicalLength(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_PhysicalLength(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GrowLength(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_GrowLength(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Assign(DataColumn): PrivateScope, Public, HideBySig
    get_ColumnType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ColumnType(CellType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ColumnName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ColumnName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetCellAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetCellAt(Int32, DataCell): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AppendCell(DataCell): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InsertCellAt(Int32, DataCell): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveCellAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetIndexAtCell(DataCell): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_NumCells(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.DataTable: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String TableName 'get set' : 
    Int32 NumColsGrowSize 'get set' : 
    Int32 NumColsPhysicalSize 'get set' : 
    Int32 NumRowsGrowSize 'get set' : 
    Int32 NumRowsPhysicalSize 'get set' : 
    Int32 NumRows 'get ' : 
    Int32 NumColumns 'get ' : 
  Methods:
    Assign(DataTable): PrivateScope, Public, HideBySig
    get_NumColumns(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NumRows(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NumRowsPhysicalSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_NumRowsPhysicalSize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NumRowsGrowSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_NumRowsGrowSize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NumColsPhysicalSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_NumColsPhysicalSize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NumColsGrowSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_NumColsGrowSize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TableName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TableName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetColumnAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetColumnNameAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetColumnTypeAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetColumnIndexAtName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AppendColumn(CellType, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InsertColumnAt(Int32, CellType, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveColumnAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRowAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetRowAt(Int32, DataCellCollection, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AppendRow(DataCellCollection, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InsertRowAt(Int32, DataCellCollection, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveRowAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCellAt(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetCellAt(Int32, Int32, DataCell): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.DataCellCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.DataCell Item [Int32] 'get set' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, DataCell): PrivateScope, Public, HideBySig, SpecialName
    RemoveAt(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(DataCell): PrivateScope, Public, HideBySig
    IndexOf(DataCell): PrivateScope, Public, HideBySig
    Insert(Int32, DataCell): PrivateScope, Public, HideBySig
    Remove(DataCell): PrivateScope, Public, HideBySig
    Contains(DataCell): PrivateScope, Public, HideBySig
    CopyTo(DataCell[], Int32): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.LayerManager.LayerFilterTree: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.LayerManager.LayerFilter, Autodesk.AutoCAD.LayerManager.LayerFilter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.LayerManager.LayerFilter Current 'get ' : 
    Autodesk.AutoCAD.LayerManager.LayerFilter Root 'get ' : 
  Methods:
    get_Root(): PrivateScope, Public, HideBySig, SpecialName
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.LayerManager.LayerFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String FilterExpression 'get set' : 
    Autodesk.AutoCAD.LayerManager.LayerFilterDisplayImages DisplayImages 'get ' : 
    Boolean IsIdFilter 'get ' : 
    Boolean IsProxy 'get ' : 
    Boolean AllowDelete 'get ' : 
    Boolean DynamicallyGenerated 'get ' : 
    Boolean AllowNested 'get ' : 
    Autodesk.AutoCAD.LayerManager.LayerFilterCollection NestedFilters 'get ' : 
    Autodesk.AutoCAD.LayerManager.LayerFilter Parent 'get ' : 
    Boolean AllowRename 'get ' : 
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_AllowRename(): PrivateScope, Public, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, HideBySig, SpecialName
    get_NestedFilters(): PrivateScope, Public, HideBySig, SpecialName
    get_AllowNested(): PrivateScope, Public, HideBySig, SpecialName
    get_DynamicallyGenerated(): PrivateScope, Public, HideBySig, SpecialName
    get_AllowDelete(): PrivateScope, Public, HideBySig, SpecialName
    get_IsProxy(): PrivateScope, Public, HideBySig, SpecialName
    get_IsIdFilter(): PrivateScope, Public, HideBySig, SpecialName
    Filter(LayerTableRecord): PrivateScope, Public, HideBySig
    get_DisplayImages(): PrivateScope, Public, HideBySig, SpecialName
    get_FilterExpression(): PrivateScope, Public, HideBySig, SpecialName
    set_FilterExpression(String): PrivateScope, Public, HideBySig, SpecialName
    CompareTo(LayerFilter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ShowEditor(): PrivateScope, Public, HideBySig
    GetFilterExpressionTree(): PrivateScope, Public, HideBySig
    GenerateNested(): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.SecurityActions: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.SecurityActions EncryptData = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SecurityActions EncryptProperties = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SecurityActions SignData = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SecurityActions AddTimeStamp = 32 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.SecurityAlgorithm: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.SecurityAlgorithm RC4 = 26625 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfo: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    System.Collections.IDictionaryEnumerator CustomProperties 'get ' : 
    System.String HyperlinkBase 'get ' : 
    System.String RevisionNumber 'get ' : 
    System.String LastSavedBy 'get ' : 
    System.String Comments 'get ' : 
    System.String Keywords 'get ' : 
    System.String Author 'get ' : 
    System.String Subject 'get ' : 
    System.String Title 'get ' : 
  Methods:
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    get_Subject(): PrivateScope, Public, HideBySig, SpecialName
    get_Author(): PrivateScope, Public, HideBySig, SpecialName
    get_Keywords(): PrivateScope, Public, HideBySig, SpecialName
    get_Comments(): PrivateScope, Public, HideBySig, SpecialName
    get_LastSavedBy(): PrivateScope, Public, HideBySig, SpecialName
    get_RevisionNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_HyperlinkBase(): PrivateScope, Public, HideBySig, SpecialName
    get_CustomProperties(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Inequality(DatabaseSummaryInfo, DatabaseSummaryInfo): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(DatabaseSummaryInfo, DatabaseSummaryInfo): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfoBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.DatabaseSummaryInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.IDictionary CustomPropertyTable 'get ' : 
    System.Collections.Specialized.StringDictionary CustomProperties 'get ' :  (Obsolete)
    System.String HyperlinkBase 'get set' : 
    System.String RevisionNumber 'get set' : 
    System.String LastSavedBy 'get set' : 
    System.String Comments 'get set' : 
    System.String Keywords 'get set' : 
    System.String Author 'get set' : 
    System.String Subject 'get set' : 
    System.String Title 'get set' : 
  Methods:
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(String): PrivateScope, Public, HideBySig, SpecialName
    get_Subject(): PrivateScope, Public, HideBySig, SpecialName
    set_Subject(String): PrivateScope, Public, HideBySig, SpecialName
    get_Author(): PrivateScope, Public, HideBySig, SpecialName
    set_Author(String): PrivateScope, Public, HideBySig, SpecialName
    get_Keywords(): PrivateScope, Public, HideBySig, SpecialName
    set_Keywords(String): PrivateScope, Public, HideBySig, SpecialName
    get_Comments(): PrivateScope, Public, HideBySig, SpecialName
    set_Comments(String): PrivateScope, Public, HideBySig, SpecialName
    get_LastSavedBy(): PrivateScope, Public, HideBySig, SpecialName
    set_LastSavedBy(String): PrivateScope, Public, HideBySig, SpecialName
    get_RevisionNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_RevisionNumber(String): PrivateScope, Public, HideBySig, SpecialName
    get_HyperlinkBase(): PrivateScope, Public, HideBySig, SpecialName
    set_HyperlinkBase(String): PrivateScope, Public, HideBySig, SpecialName
    get_CustomProperties(): PrivateScope, Public, HideBySig, SpecialName
    get_CustomPropertyTable(): PrivateScope, Public, HideBySig, SpecialName
    ToDatabaseSummaryInfo(): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.PlotStyleDescriptor: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId, Autodesk.AutoCAD.DatabaseServices.PlotStyleNameType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.PlotStyleNameType Type 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Id 'get ' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Equality(PlotStyleDescriptor, PlotStyleDescriptor): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(PlotStyleDescriptor, PlotStyleDescriptor): PrivateScope, Public, Static, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.PlotStyleNameType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.PlotStyleNameType PlotStyleNameByLayer = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PlotStyleNameType PlotStyleNameByBlock = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PlotStyleNameType PlotStyleNameIsDictionaryDefault = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PlotStyleNameType PlotStyleNameById = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.FieldEvaluationStatusResult: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.FieldEvaluationStatus, Int32, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ErrorMessage 'get ' : 
    Int32 ErrorCode 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.FieldEvaluationStatus Status 'get ' : 
  Methods:
    get_Status(): PrivateScope, Public, HideBySig, SpecialName
    get_ErrorCode(): PrivateScope, Public, HideBySig, SpecialName
    get_ErrorMessage(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.FieldEvaluationStatus: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.FieldEvaluationStatus NotYetEvaluated = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldEvaluationStatus Success = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldEvaluationStatus EvaluatorNotFound = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldEvaluationStatus SyntaxError = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldEvaluationStatus InvalidCode = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldEvaluationStatus InvalidContext = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldEvaluationStatus OtherError = 64 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.FieldEvaluationResult: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Int32 Evaluated 'get ' : 
    Int32 Found 'get ' : 
  Methods:
    get_Found(): PrivateScope, Public, HideBySig, SpecialName
    get_Evaluated(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.TransactionManager: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Properties:
    Autodesk.AutoCAD.DatabaseServices.Transaction TopTransaction 'get ' : 
    Int32 NumberOfOpenedObjects 'get ' : 
    Int32 NumberOfActiveTransactions 'get ' : 
  Methods:
    StartTransaction(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    StartOpenCloseTransaction(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddNewlyCreatedDBObject(DBObject, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_NumberOfActiveTransactions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NumberOfOpenedObjects(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TopTransaction(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetAllObjects(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetObject(ObjectId, OpenMode, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetObject(ObjectId, OpenMode, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetObject(ObjectId, OpenMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    QueueForGraphicsFlush(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.ObjectContextManager: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    RegisterContextCollection(String, ObjectContextCollection): PrivateScope, Public, HideBySig
    UnregisterContextCollection(String): PrivateScope, Public, HideBySig
    GetContextCollection(String): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.DataLinkManager: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Properties:
    Int32 DataLinkCount 'get ' : 
  Methods:
    get_DataLinkCount(): PrivateScope, Public, HideBySig, SpecialName
    GetDataLink(): PrivateScope, Public, HideBySig
    GetDataLink(String): PrivateScope, Public, HideBySig
    AddDataLink(DataLink): PrivateScope, Public, HideBySig
    RemoveDataLink(ObjectId): PrivateScope, Public, HideBySig
    RemoveDataLink(String): PrivateScope, Public, HideBySig
    Update(UpdateDirection, UpdateOption): PrivateScope, Public, HideBySig
    Update(ObjectIdCollection, UpdateDirection, UpdateOption): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.ObjectIdGraph: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Graph
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    AddNode(ObjectIdGraphNode): PrivateScope, Public, HideBySig
    DelNode(ObjectIdGraphNode): PrivateScope, Public, HideBySig
    FindNode(ObjectId): PrivateScope, Public, HideBySig
    IdNode(Int32): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.FileOpenMode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.FileOpenMode OpenForReadAndReadShare = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FileOpenMode OpenForReadAndWriteNoShare = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FileOpenMode OpenForReadAndAllShare = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FileOpenMode OpenTryForReadShare = 4 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.XrefGraph: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Graph
  Properties:
    Autodesk.AutoCAD.DatabaseServices.XrefGraphNode HostDrawing 'get ' : 
  Methods:
    get_HostDrawing(): PrivateScope, Public, HideBySig, SpecialName
    GetXrefNode(Int32): PrivateScope, Public, HideBySig
    GetXrefNode(Database): PrivateScope, Public, HideBySig
    GetXrefNode(ObjectId): PrivateScope, Public, HideBySig
    GetXrefNode(String): PrivateScope, Public, HideBySig
    MarkUnresolvedTrees(): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.MeasurementValue: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.MeasurementValue English = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MeasurementValue Metric = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.EndCap: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.EndCap None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.EndCap Round = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.EndCap Angle = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.EndCap Square = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.JoinStyle: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.JoinStyle StyleNone = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.JoinStyle StyleRound = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.JoinStyle StyleAngle = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.JoinStyle StyleFlat = 3 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.DimStyleTableRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.SymbolTableRecord
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId Dimblk2 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Dimblk1 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Dimblk 'get set' : 
    Double Dimfxlen 'get set' : 
    Boolean DimfxlenOn 'get set' : 
    System.String Dimpost 'get set' : 
    System.String Dimapost 'get set' : 
    Int32 Dimzin 'get set' : 
    Boolean Dimupt 'get set' : 
    Int32 Dimtzin 'get set' : 
    Boolean Dimtxtdirection 'get set' : 
    Double Dimtxt 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Dimtxsty 'get set' : 
    Double Dimtvp 'get set' : 
    Double Dimtsz 'get set' : 
    Double Dimtp 'get set' : 
    Int32 Dimtolj 'get set' : 
    Boolean Dimtol 'get set' : 
    Boolean Dimtoh 'get set' : 
    Boolean Dimtofl 'get set' : 
    Int32 Dimtmove 'get set' : 
    Double Dimtm 'get set' : 
    Boolean Dimtix 'get set' : 
    Boolean Dimtih 'get set' : 
    Autodesk.AutoCAD.Colors.Color Dimtfillclr 'get set' : 
    Int32 Dimtfill 'get set' : 
    Double Dimtfac 'get set' : 
    Int32 Dimtdec 'get set' : 
    Int32 Dimtad 'get set' : 
    Boolean Dimsoxd 'get set' : 
    Boolean Dimse2 'get set' : 
    Boolean Dimse1 'get set' : 
    Boolean Dimsd2 'get set' : 
    Boolean Dimsd1 'get set' : 
    Double Dimscale 'get set' : 
    Boolean Dimsah 'get set' : 
    Double Dimrnd 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LineWeight Dimlwe 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LineWeight Dimlwd 'get set' : 
    Int32 Dimlunit 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Dimltype 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Dimltex2 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Dimltex1 'get set' : 
    Boolean Dimlim 'get set' : 
    Double Dimlfac 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Dimldrblk 'get set' : 
    Int32 Dimjust 'get set' : 
    Double Dimjogang 'get set' : 
    Double Dimgap 'get set' : 
    Int32 Dimfrac 'get set' : 
    Double Dimexo 'get set' : 
    Double Dimexe 'get set' : 
    Char Dimdsep 'get set' : 
    Double Dimdli 'get set' : 
    Double Dimdle 'get set' : 
    Int32 Dimdec 'get set' : 
    Autodesk.AutoCAD.Colors.Color Dimclrt 'get set' : 
    Autodesk.AutoCAD.Colors.Color Dimclre 'get set' : 
    Autodesk.AutoCAD.Colors.Color Dimclrd 'get set' : 
    Double Dimcen 'get set' : 
    Int32 Dimazin 'get set' : 
    Int32 Dimaunit 'get set' : 
    Int32 Dimatfit 'get set' : 
    Double Dimasz 'get set' : 
    Int32 Dimarcsym 'get set' : 
    Int32 Dimaltz 'get set' : 
    Int32 Dimaltu 'get set' : 
    Int32 Dimalttz 'get set' : 
    Int32 Dimalttd 'get set' : 
    Double Dimaltrnd 'get set' : 
    Double Dimaltf 'get set' : 
    Int32 Dimaltd 'get set' : 
    Boolean Dimalt 'get set' : 
    Int32 Dimadec 'get set' : 
    Boolean IsModifiedForRecompute 'get ' : 
  Methods:
    get_Dimtvp(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtvp(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtxsty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtxsty(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtxt(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtxt(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtxtdirection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtxtdirection(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtzin(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtzin(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimupt(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimupt(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimzin(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimzin(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimapost(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimapost(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimpost(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimpost(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DimfxlenOn(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DimfxlenOn(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimfxlen(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimfxlen(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimblk(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimblk(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimblk1(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimblk1(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimblk2(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimblk2(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetArrowId(DimArrowFlag): PrivateScope, Public, HideBySig
    get_IsModifiedForRecompute(): PrivateScope, Public, HideBySig, SpecialName
    get_Dimadec(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimadec(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimalt(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimalt(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimaltd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimaltd(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimaltf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimaltf(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimaltrnd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimaltrnd(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimalttd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimalttd(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimalttz(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimalttz(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimaltu(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimaltu(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimaltz(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimaltz(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimarcsym(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimarcsym(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimasz(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimasz(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimatfit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimatfit(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimaunit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimaunit(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimazin(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimazin(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimcen(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimcen(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimclrd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimclrd(Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimclre(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimclre(Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimclrt(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimclrt(Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimdec(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimdec(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimdle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimdle(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimdli(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimdli(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimdsep(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimdsep(Char(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimexe(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimexe(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimexo(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimexo(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimfrac(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimfrac(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimgap(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimgap(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimjogang(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimjogang(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimjust(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimjust(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimldrblk(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimldrblk(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimlfac(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimlfac(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimlim(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimlim(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimltex1(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimltex1(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimltex2(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimltex2(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimltype(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimltype(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimlunit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimlunit(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimlwd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimlwd(LineWeight): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimlwe(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimlwe(LineWeight): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimrnd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimrnd(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimsah(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimsah(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimscale(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimscale(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimsd1(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimsd1(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimsd2(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimsd2(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimse1(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimse1(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimse2(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimse2(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimsoxd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimsoxd(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtad(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtad(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtdec(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtdec(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtfac(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtfac(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtfill(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtfill(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtfillclr(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtfillclr(Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtih(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtih(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtix(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtix(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtm(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtmove(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtmove(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtofl(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtofl(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtoh(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtoh(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtol(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtol(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtolj(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtolj(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtp(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtp(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtsz(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtsz(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Filters.Filter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Inverted 'get set' : 
    Autodesk.AutoCAD.Geometry.Matrix3d OriginalInverseBlockTransform 'get ' : 
    Autodesk.AutoCAD.Geometry.Matrix3d ClipSpaceToWorldCoordinateSystemTransform 'get ' : 
    Boolean HasPerspectiveCamera 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilterDefinition Definition 'get set' : 
  Methods:
    GetQueryBounds(): PrivateScope, Public, HideBySig
    GetQueryBounds(BlockReference): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetVolume(): PrivateScope, Public, HideBySig
    get_Definition(): PrivateScope, Public, HideBySig, SpecialName
    set_Definition(SpatialFilterDefinition): PrivateScope, Public, HideBySig, SpecialName
    SetPerspectiveCamera(Point3d): PrivateScope, Public, HideBySig
    ClipVolumeIntersectsExtents(Extents3d): PrivateScope, Public, HideBySig
    get_HasPerspectiveCamera(): PrivateScope, Public, HideBySig, SpecialName
    get_ClipSpaceToWorldCoordinateSystemTransform(): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalInverseBlockTransform(): PrivateScope, Public, HideBySig, SpecialName
    get_Inverted(): PrivateScope, Public, HideBySig, SpecialName
    set_Inverted(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.Filters.LayerFilter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Filters.Filter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 LayerCount 'get ' : 
    Boolean IsValid 'get ' : 
  Methods:
    get_IsValid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(String): PrivateScope, Public, HideBySig
    Remove(String): PrivateScope, Public, HideBySig
    GetAt(Int32, String): PrivateScope, Public, HideBySig
    get_LayerCount(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.TimeZone: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.TimeZone InternationalDateLine = -12000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone MidwayIsland = -11000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Hawaii = -10000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Alaska = -9000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Pacific = -8000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Mountain = -7000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Arizona = -7001 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Mazatlan = -7002 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Central = -6000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone CentralAmerica = -6001 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone MexicoCity = -6002 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Saskatchewan = -6003 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Eastern = -5000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Indiana = -5001 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Bogota = -5002 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone AtlanticCanada = -4000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Caracas = -4001 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Santiago = -4002 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Newfoundland = -3300 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Brasilia = -3000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone BuenosAires = -3001 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Greenland = -3002 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone MidAtlantic = -2000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Azores = -1000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone CapeVerde = -1001 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone UTC = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone GMT = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Monrovia = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Berlin = 1000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Paris = 1001 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Prague = 1002 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Sarajevo = 1003 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone WestCentralAfrica = 1004 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Athens = 2000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone EasternEurope = 2001 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Cairo = 2002 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Harare = 2003 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Helsinki = 2004 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Jerusalem = 2005 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Moscow = 3000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Riyadh = 3001 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Baghdad = 3002 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone EastAfrica = 3003 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Tehran = 3300 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone AbuDhabi = 4000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Caucasus = 4001 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Kabul = 4300 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Ekaterinburg = 5000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Islamabad = 5001 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Kolkata = 5300 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Kathmandu = 5450 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Almaty = 6000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Dhaka = 6001 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone SriLanka = 6002 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Rangoon = 6300 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Bangkok = 7000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Krasnoyarsk = 7001 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Beijing = 8000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Singapore = 8001 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Taipei = 8002 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Irkutsk = 8003 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Perth = 8004 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Tokyo = 9000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Seoul = 9001 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Yakutsk = 9002 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Adelaide = 9300 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Darwin = 9301 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Sydney = 10000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Guam = 10001 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Brisbane = 10002 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Hobart = 10003 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Vladivostock = 10004 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Magadan = 11000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Wellington = 12000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Fiji = 12001 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TimeZone Tonga = 13000 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.DbHomeView: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Properties:
    Boolean Perspective 'get set' : 
    Double Height 'get set' : 
    Double Width 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d Up 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Center 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Eye 'get set' : 
  Methods:
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Eye(): PrivateScope, Public, HideBySig, SpecialName
    set_Eye(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_Center(): PrivateScope, Public, HideBySig, SpecialName
    set_Center(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_Up(): PrivateScope, Public, HideBySig, SpecialName
    set_Up(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Width(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Perspective(): PrivateScope, Public, HideBySig, SpecialName
    set_Perspective(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    ToggleDefaultSettings(): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(DbHomeView, DbHomeView): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(DbHomeView, DbHomeView): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.FieldEvaluationContext: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.FieldEvaluationContext Open = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldEvaluationContext Save = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldEvaluationContext Plot = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldEvaluationContext Etransmit = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldEvaluationContext Regen = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldEvaluationContext Demand = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldEvaluationContext Preview = 64 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.DataLink: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsValid 'get ' : 
    Int32 UpdateOption 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.DataLinkOption DataLinkOption 'get set' : 
    System.String ToolTip 'get set' : 
    System.String Description 'get set' : 
    System.String Name 'get set' : 
    System.String ConnectionString 'get set' : 
    System.String DataAdapterId 'get set' : 
  Methods:
    get_DataAdapterId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DataAdapterId(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ConnectionString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ConnectionString(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Description(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Description(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ToolTip(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ToolTip(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DataLinkOption(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DataLinkOption(DataLinkOption): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_UpdateOption(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_UpdateOption(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsValid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Update(UpdateDirection, UpdateOption): PrivateScope, Public, HideBySig
    GetUpdateStatus(UpdateDirection&(Out), DateTime&(Out), String(Out)): PrivateScope, Public, HideBySig
    GetTargets(): PrivateScope, Public, HideBySig
    GetSourceFiles(DataLinkGetSourceContext): PrivateScope, Public, HideBySig
    RepathSourceFiles(String, PathOption): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.DataLinkOption: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.DataLinkOption None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DataLinkOption Anonymous = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DataLinkOption PersistCache = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.UpdateDirection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.UpdateDirection SourceToData = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UpdateDirection DataToSource = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.UpdateOption: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.UpdateOption None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UpdateOption SkipFormat = 131072 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UpdateOption UpdateRowHeight = 262144 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UpdateOption UpdateColumnWidth = 524288 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UpdateOption AllowSourceUpdate = 1048576 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UpdateOption ForceFullSourceUpdate = 2097152 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UpdateOption OverwriteContentModifiedAfterUpdate = 4194304 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UpdateOption OverwriteFormatModifiedAfterUpdate = 8388608 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UpdateOption ForPreview = 16777216 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UpdateOption IncludeXrefs = 33554432 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.DataLinkGetSourceContext: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.DataLinkGetSourceContext Unknown = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DataLinkGetSourceContext Etransmit = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DataLinkGetSourceContext XrefManager = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DataLinkGetSourceContext OrignalPath = 256 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DataLinkGetSourceContext FileWatcher = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DataLinkGetSourceContext Other = 4 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.PathOption: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.PathOption NoPath = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PathOption RelativePath = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PathOption AbsolutePath = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PathOption PathAndFile = 4 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.LinkedData: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
  Properties:
    System.String Name 'get set' : 
    Boolean IsEmpty 'get ' : 
  Methods:
    Clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsEmpty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.UpdateAction: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.UpdateAction None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UpdateAction Ignore = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UpdateAction UpdateRequired = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.DataAdapterManager: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Properties:
    Int32 AdapterProviderCount 'get ' : 
  Methods:
    RegisterAdapterProvider(DataAdapterProvider): PrivateScope, Public, Static, HideBySig
    UnregisterAdapterProvider(DataAdapterProvider): PrivateScope, Public, Static, HideBySig
    get_AdapterProviderCount(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetAdapterProvider(Int32): PrivateScope, Public, Static, HideBySig
    GetDataAdapter(String): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.DataAdapterSourceFilesException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.Exception
    Void .ctor(Autodesk.AutoCAD.Runtime.ErrorStatus, System.String, System.Exception, System.Collections.ArrayList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Runtime.ErrorStatus, System.String, System.Collections.ArrayList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Runtime.ErrorStatus, System.Collections.ArrayList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.ArrayList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.ArrayList FileNameList 'get set' : 
  Methods:
    get_FileNameList(): PrivateScope, Public, HideBySig, SpecialName
    set_FileNameList(ArrayList): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
Struct Autodesk.AutoCAD.DatabaseServices.CollisionType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.CollisionType None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CollisionType Solid = 1 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.GripDataCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.ICollection`1[Autodesk.AutoCAD.DatabaseServices.GripData]
    System.Collections.Generic.IEnumerable`1[Autodesk.AutoCAD.DatabaseServices.GripData]
    System.Collections.IEnumerable
  Properties:
    Autodesk.AutoCAD.DatabaseServices.GripData Item [Int32] 'get ' : 
    Boolean IsReadOnly 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(GripData): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(GripData): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(GripData[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(GripData): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.GetGripPointsFlags: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.GetGripPointsFlags GripPointsOnly = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GetGripPointsFlags CyclableGripsOnly = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GetGripPointsFlags DynamicDimensionMode = 4 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.MoveGripPointsFlags: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.MoveGripPointsFlags Osnapped = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MoveGripPointsFlags Polar = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MoveGripPointsFlags ObjectTrack = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MoveGripPointsFlags ZDir = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MoveGripPointsFlags Keyboard = 16 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.HighlightStyle: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.HighlightStyle None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.HighlightStyle Custom = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.HighlightStyle DashedAndThicken = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.HighlightStyle Dim = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.HighlightStyle ThickDim = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.HighlightStyle Glow = 5 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.ObjectSnapModes: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.ObjectSnapModes ModeEnd = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ObjectSnapModes ModeMid = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ObjectSnapModes ModeCenter = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ObjectSnapModes ModeNode = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ObjectSnapModes ModeQuad = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ObjectSnapModes ModeIns = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ObjectSnapModes ModePerpendicular = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ObjectSnapModes ModeTangent = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ObjectSnapModes ModeNear = 10 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.Geometry.Point3dCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d Item [Int32] 'get set' : 
  Methods:
    CopyTo(Point3d[], Int32): PrivateScope, Public, HideBySig
    Add(Point3d): PrivateScope, Public, HideBySig
    Contains(Point3d): PrivateScope, Public, HideBySig
    IndexOf(Point3d): PrivateScope, Public, HideBySig
    Insert(Int32, Point3d): PrivateScope, Public, HideBySig
    Remove(Point3d): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Point3d): PrivateScope, Public, HideBySig, SpecialName
    RemoveAt(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Autodesk.AutoCAD.DatabaseServices.Intersect: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.Intersect OnBothOperands = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Intersect ExtendThis = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Intersect ExtendArgument = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Intersect ExtendBoth = 3 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.DBObjectCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.DBObject Item [Int32] 'get set' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, DBObject): PrivateScope, Public, HideBySig, SpecialName
    RemoveAt(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(DBObject): PrivateScope, Public, HideBySig
    IndexOf(DBObject): PrivateScope, Public, HideBySig
    Insert(Int32, DBObject): PrivateScope, Public, HideBySig
    Remove(DBObject): PrivateScope, Public, HideBySig
    Contains(DBObject): PrivateScope, Public, HideBySig
    CopyTo(DBObject[], Int32): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.SaveType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.SaveType NoSave = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SaveType Save12 = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SaveType Save13 = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SaveType Save14 = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SaveType Save2000 = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SaveType Save2004 = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SaveType Save2007 = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SaveType Save2010 = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SaveType Save2013 = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SaveType Save2018 = 9 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.DragStatus: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.DragStatus DragStart = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DragStatus DragEnd = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DragStatus DragAbort = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.GripStatus: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.GripStatus GripsDone = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GripStatus GripsToBeDeleted = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GripStatus DimDataToBeDeleted = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.HyperLinkCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Interfaces:
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.HyperLink Item [Int32] 'get set' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, HyperLink): PrivateScope, Public, HideBySig, SpecialName
    RemoveAt(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(HyperLink[], Int32): PrivateScope, Public, HideBySig
    Add(HyperLink): PrivateScope, Public, HideBySig
    IndexOf(HyperLink): PrivateScope, Public, HideBySig
    Insert(Int32, HyperLink): PrivateScope, Public, HideBySig
    Remove(HyperLink): PrivateScope, Public, HideBySig
    Contains(HyperLink): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.GraphicsInterface.Mapper: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
    Void .ctor(Autodesk.AutoCAD.GraphicsInterface.Projection, Autodesk.AutoCAD.GraphicsInterface.Tiling, Autodesk.AutoCAD.GraphicsInterface.Tiling, Autodesk.AutoCAD.GraphicsInterface.AutoTransform, Autodesk.AutoCAD.Geometry.Matrix3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.Tiling VTiling 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.Tiling UTiling 'get set' : 
    Autodesk.AutoCAD.Geometry.Matrix3d Transform 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.AutoTransform AutoTransform 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.Projection Projection 'get ' : 
  Methods:
    get_Projection(): PrivateScope, Public, HideBySig, SpecialName
    get_AutoTransform(): PrivateScope, Public, HideBySig, SpecialName
    get_Transform(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    get_UTiling(): PrivateScope, Public, HideBySig, SpecialName
    set_UTiling(Tiling): PrivateScope, Public, HideBySig, SpecialName
    get_VTiling(): PrivateScope, Public, HideBySig, SpecialName
    set_VTiling(Tiling): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.TypedValue: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, System.Object): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object Value 'get ' : 
    Int16 TypeCode 'get ' : 
  Methods:
    get_TypeCode(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Inequality(TypedValue, TypedValue): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(TypedValue, TypedValue): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.ResultBufferEnumerator: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    Autodesk.AutoCAD.DatabaseServices.TypedValue Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferenceProperty: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Properties:
    System.Object Value 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferencePropertyUnitsType UnitsType 'get ' : 
    System.String Description 'get ' : 
    Boolean VisibleInCurrentVisibilityState 'get ' : 
    Boolean Show 'get ' : 
    Boolean ReadOnly 'get ' : 
    Int16 PropertyTypeCode 'get ' : 
    System.String PropertyName 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId BlockId 'get ' : 
  Methods:
    get_BlockId(): PrivateScope, Public, HideBySig, SpecialName
    get_PropertyName(): PrivateScope, Public, HideBySig, SpecialName
    get_PropertyTypeCode(): PrivateScope, Public, HideBySig, SpecialName
    get_ReadOnly(): PrivateScope, Public, HideBySig, SpecialName
    get_Show(): PrivateScope, Public, HideBySig, SpecialName
    get_VisibleInCurrentVisibilityState(): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    get_UnitsType(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Object): PrivateScope, Public, HideBySig, SpecialName
    GetAllowedValues(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferencePropertyCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Interfaces:
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferenceProperty Item [Int32] 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    CopyTo(DynamicBlockReferenceProperty[], Int32): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferencePropertyUnitsType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferencePropertyUnitsType NoUnits = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferencePropertyUnitsType Angular = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferencePropertyUnitsType Distance = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferencePropertyUnitsType Area = 3 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferencePropertyCollectionEnumerator: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    System.Object Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.BlockReference: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.DatabaseServices.ObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double UnitFactor 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.UnitsValue BlockUnit 'get set' : 
    System.String Name 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId AnonymousBlockTableRecord 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId DynamicBlockTableRecord 'get ' : 
    Boolean IsDynamicBlock 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.DynamicBlockReferencePropertyCollection DynamicBlockReferencePropertyCollection 'get ' : 
    Boolean TreatAsBlockRefForExplode 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.AttributeCollection AttributeCollection 'get ' : 
    Autodesk.AutoCAD.Geometry.Matrix3d BlockTransform 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get set' : 
    Double Rotation 'get set' : 
    Autodesk.AutoCAD.Geometry.Scale3d ScaleFactors 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Position 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId BlockTableRecord 'get set' : 
  Methods:
    get_BlockTableRecord(): PrivateScope, Public, HideBySig, SpecialName
    set_BlockTableRecord(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ScaleFactors(): PrivateScope, Public, HideBySig, SpecialName
    set_ScaleFactors(Scale3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Rotation(): PrivateScope, Public, HideBySig, SpecialName
    set_Rotation(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    set_Normal(Vector3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BlockTransform(): PrivateScope, Public, HideBySig, SpecialName
    set_BlockTransform(Matrix3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AttributeCollection(): PrivateScope, Public, HideBySig, SpecialName
    get_TreatAsBlockRefForExplode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GeometryExtentsBestFit(): PrivateScope, Public, HideBySig
    GeometryExtentsBestFit(Matrix3d): PrivateScope, Public, HideBySig
    ExplodeToOwnerSpace(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_DynamicBlockReferencePropertyCollection(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDynamicBlock(): PrivateScope, Public, HideBySig, SpecialName
    get_DynamicBlockTableRecord(): PrivateScope, Public, HideBySig, SpecialName
    get_AnonymousBlockTableRecord(): PrivateScope, Public, HideBySig, SpecialName
    ResetBlock(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ConvertToStaticBlock(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ConvertToStaticBlock(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_BlockUnit(): PrivateScope, Public, HideBySig, SpecialName
    set_BlockUnit(UnitsValue): PrivateScope, Public, HideBySig, SpecialName
    get_UnitFactor(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.AttributeCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Interfaces:
    System.Collections.ICollection
    System.Collections.IEnumerable
    Autodesk.AutoCAD.DatabaseServices.ISubObject
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId Item [Int32] 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    CopyTo(ObjectId[], Int32): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    AppendAttribute(AttributeReference): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AttributeReference: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBText
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, System.String, System.String, Autodesk.AutoCAD.DatabaseServices.ObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.MText MTextAttribute 'get set' : 
    Boolean IsMTextAttribute 'get set' : 
    Boolean LockPositionInBlock 'get set' : 
    Int32 FieldLength 'get set' : 
    Boolean IsPreset 'get ' : 
    Boolean IsVerifiable 'get ' : 
    Boolean IsConstant 'get ' : 
    Boolean Invisible 'get set' : 
    System.String Tag 'get set' : 
  Methods:
    get_Tag(): PrivateScope, Public, HideBySig, SpecialName
    set_Tag(String): PrivateScope, Public, HideBySig, SpecialName
    get_Invisible(): PrivateScope, Public, HideBySig, SpecialName
    set_Invisible(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsConstant(): PrivateScope, Public, HideBySig, SpecialName
    get_IsVerifiable(): PrivateScope, Public, HideBySig, SpecialName
    get_IsPreset(): PrivateScope, Public, HideBySig, SpecialName
    get_FieldLength(): PrivateScope, Public, HideBySig, SpecialName
    set_FieldLength(Int32): PrivateScope, Public, HideBySig, SpecialName
    SetAttributeFromBlock(AttributeDefinition, Matrix3d): PrivateScope, Public, HideBySig
    SetAttributeFromBlock(Matrix3d): PrivateScope, Public, HideBySig
    get_LockPositionInBlock(): PrivateScope, Public, HideBySig, SpecialName
    set_LockPositionInBlock(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsMTextAttribute(): PrivateScope, Public, HideBySig, SpecialName
    set_IsMTextAttribute(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_MTextAttribute(): PrivateScope, Public, HideBySig, SpecialName
    set_MTextAttribute(MText): PrivateScope, Public, HideBySig, SpecialName
    UpdateMTextAttribute(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.TableEnumerator: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    Autodesk.AutoCAD.DatabaseServices.Cell Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.Table: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.BlockReference
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerable
  Properties:
    Autodesk.AutoCAD.DatabaseServices.CellRange Cells 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.RowsCollection Rows 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ColumnsCollection Columns 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.TableBreakOptions BreakOptions 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.TableBreakFlowDirection BreakFlowDirection 'get set' : 
    Boolean BreakEnabled 'get set' : 
    Boolean HasSubSelection 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.CellRange SubSelection 'get set' : 
    Boolean IsHeaderSuppressed 'get set' :  (Obsolete)
    System.String TableStyleName 'get ' : 
    Boolean IsTitleSuppressed 'get set' :  (Obsolete)
    Autodesk.AutoCAD.DatabaseServices.FlowDirection FlowDirection 'get set' : 
    Double VerticalCellMargin 'get set' :  (Obsolete)
    Double HorizontalCellMargin 'get set' :  (Obsolete)
    Double MinimumTableHeight 'get ' : 
    Double MinimumTableWidth 'get ' : 
    Double Height 'get set' : 
    Double Width 'get set' : 
    Int32 NumColumns 'get set' :  (Obsolete)
    Int32 NumRows 'get set' :  (Obsolete)
    Autodesk.AutoCAD.Geometry.Vector3d Direction 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId TableStyle 'get set' : 
  Methods:
    SetToolTip(Int32, Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SuppressRegenerateTable(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Columns(): PrivateScope, Public, HideBySig, SpecialName
    get_Rows(): PrivateScope, Public, HideBySig, SpecialName
    get_Cells(): PrivateScope, Public, HideBySig, SpecialName
    UnitType(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    UnitType(RowType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetDataType(Int32, Int32, Int32, DataTypeParameter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetDataType(Int32, Int32, DataType, UnitType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetDataType(DataType, UnitType, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    Format(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    Format(RowType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetFormat(Int32, Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetFormat(String, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    Value(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetValue(Int32, Int32, Int32, String, ParseOption): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetValue(Int32, Int32, Int32, Object, ParseOption): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetValue(Int32, Int32, Int32, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetValue(Int32, Int32, String, ParseOption): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetValue(Int32, Int32, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    ResetValue(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    Select(Point3d, Vector3d, Vector3d, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), FullSubentityPath[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SelectSubRegion(Point3d, Point3d, Vector3d, Vector3d, SelectType, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), FullSubentityPath[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ReselectSubRegion(FullSubentityPath[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSize(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CanInsertRow(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    CanInsertColumn(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    InsertRowsAndInherit(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InsertColumnsAndInherit(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CanDeleteRows(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    CanDeleteColumns(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    IEnumerable.GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetEnumerator(CellRange, TableEnumeratorOption): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    IsEmpty(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetMergeRange(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    IsContentEditable(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    IsFormatEditable(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetCellState(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetCellState(Int32, Int32, CellStates): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    CreateContent(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetNumberOfContents(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    MoveContent(Int32, Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    DeleteContent(CellRange): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    DeleteContent(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    DeleteContent(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetContentTypes(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetContentTypes(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetValue(Int32, Int32, Int32, FormatOption): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetValue(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetDataFormat(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetDataFormat(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetDataFormat(Int32, Int32, Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetDataFormat(Int32, Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetTextString(Int32, Int32, Int32, FormatOption): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetTextString(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    HasFormula(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetFormula(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetFormula(Int32, Int32, Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetFieldId(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetBlockTableRecordId(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetCustomData(Int32, Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetCustomData(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetCustomData(Int32, Int32, String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetCustomData(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetCellStyle(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetCellStyle(Int32, Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetMargin(Int32, Int32, CellMargins): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetMargin(Int32, Int32, CellMargins, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetContentColor(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetDataType(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetTextStyleId(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetTextStyleId(Int32, Int32, Int32, ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetTextHeight(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetRotation(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetRotation(Int32, Int32, Int32, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetIsAutoScale(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetIsAutoScale(Int32, Int32, Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetScale(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetScale(Int32, Int32, Int32, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetContentLayout(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetContentLayout(Int32, Int32, CellContentLayout): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetMergeAllEnabled(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetMergeAllEnabled(Int32, Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetOverrides(Int32, Int32, GridLineType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetOverrides(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetOverrides(Int32, Int32, GridLineType, CellProperties): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetOverrides(Int32, Int32, Int32, CellProperties): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    RemoveAllOverrides(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetGridLineStyle(Int32, Int32, GridLineType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetGridLineStyle(Int32, Int32, GridLineType, GridLineStyle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetGridLineWeight(Int32, Int32, GridLineType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetGridLinetype(Int32, Int32, GridLineType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetGridLinetype(Int32, Int32, GridLineType, ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetGridColor(Int32, Int32, GridLineType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetGridVisibility(Int32, Int32, GridLineType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetGridDoubleLineSpacing(Int32, Int32, GridLineType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetGridDoubleLineSpacing(Int32, Int32, GridLineType, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetGridProperty(Int32, Int32, GridLineType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetGridProperty(CellRange, GridLineType, GridPropertyParameter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetGridProperty(Int32, Int32, GridLineType, GridPropertyParameter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsLinked(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetDataLink(CellRange): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetDataLink(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDataLink(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetDataLink(CellRange, ObjectId, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetDataLink(Int32, Int32, ObjectId, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetDataLinkRange(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    RemoveDataLink(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveDataLink(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    UpdateDataLink(UpdateDirection, UpdateOption): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UpdateDataLink(Int32, Int32, UpdateDirection, UpdateOption): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    get_BreakEnabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BreakEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_BreakFlowDirection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BreakFlowDirection(TableBreakFlowDirection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBreakHeight(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetBreakHeight(Int32, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBreakOffset(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetBreakOffset(Int32, Vector3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_BreakOptions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BreakOptions(TableBreakOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBreakSpacing(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetBreakSpacing(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyFrom(Table, TableCopyOptions, CellRange, CellRange): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyFrom(LinkedTableData, TableCopyOptions, CellRange, CellRange): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyFrom(LinkedTableData, TableCopyOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Fill(CellRange, CellRange, TableFillOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetColumnName(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetColumnName(Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetToolTip(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    get_TableStyle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TableStyle(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Direction(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Direction(Vector3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NumRows(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_NumRows(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NumColumns(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_NumColumns(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Width(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ColumnWidth(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetColumnWidth(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetColumnWidth(Int32, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    get_Height(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Height(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    RowHeight(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetRowHeight(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetRowHeight(Int32, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    MinimumColumnWidth(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    MinimumRowHeight(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    get_MinimumTableWidth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MinimumTableHeight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HorizontalCellMargin(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_HorizontalCellMargin(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_VerticalCellMargin(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_VerticalCellMargin(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FlowDirection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FlowDirection(FlowDirection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsTitleSuppressed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsTitleSuppressed(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TableStyleName(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHeaderSuppressed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsHeaderSuppressed(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Alignment(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    Alignment(RowType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetAlignment(Int32, Int32, CellAlignment): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetAlignment(CellAlignment, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    IsBackgroundColorNone(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    IsBackgroundColorNone(RowType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetBackgroundColorNone(Int32, Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetBackgroundColorNone(Boolean(HasFieldMarshal), Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    BackgroundColor(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    BackgroundColor(RowType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetBackgroundColor(Int32, Int32, Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetBackgroundColor(Color, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    ContentColor(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    ContentColor(RowType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetContentColor(Int32, Int32, Int32, Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetContentColor(Int32, Int32, Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetContentColor(Color, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    TextStyle(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    TextStyle(RowType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetTextStyle(Int32, Int32, ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetTextStyle(ObjectId, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    TextHeight(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    TextHeight(RowType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetTextHeight(Int32, Int32, Int32, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetTextHeight(Int32, Int32, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetTextHeight(Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GridLineWeight(Int32, Int32, CellEdgeMasks): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GridLineWeight(GridLineType, RowType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetGridLineWeight(Int32, Int32, GridLineType, LineWeight): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetGridLineWeight(Int32, Int32, Int16, LineWeight): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetGridLineWeight(LineWeight, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GridColor(Int32, Int32, CellEdgeMasks): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GridColor(GridLineType, RowType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetGridColor(Int32, Int32, GridLineType, Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetGridColor(Int32, Int32, Int16, Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetGridColor(Color, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GridVisibility(Int32, Int32, CellEdgeMasks): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GridVisibility(GridLineType, RowType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetGridVisibility(Int32, Int32, GridLineType, Visibility): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetGridVisibility(Int32, Int32, Int16, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetGridVisibility(Boolean(HasFieldMarshal), Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    TableStyleOverrides(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    ClearTableStyleOverrides(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    CellType(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetCellType(Int32, Int32, TableCellType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetCellExtents(Int32, Int32, Boolean(HasFieldMarshal), Point3dCollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    AttachmentPoint(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    CellStyleOverrides(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    DeleteCellContent(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    RowType(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    TextStringConst(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    TextString(Int32, Int32, FormatOption): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    TextString(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetTextString(Int32, Int32, Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetTextString(Int32, Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    FieldId(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetFieldId(Int32, Int32, Int32, ObjectId, CellOption): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetFieldId(Int32, Int32, ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    TextRotation(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetTextRotation(Int32, Int32, RotationAngle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    IsAutoScale(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetAutoScale(Int32, Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    BlockTableRecordId(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetBlockTableRecordId(Int32, Int32, Int32, ObjectId, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetBlockTableRecordId(Int32, Int32, ObjectId, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    BlockScale(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetBlockScale(Int32, Int32, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    BlockRotation(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetBlockRotation(Int32, Int32, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetBlockAttributeValue(Int32, Int32, Int32, ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    GetBlockAttributeValue(Int32, Int32, ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetBlockAttributeValue(Int32, Int32, Int32, ObjectId, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    SetBlockAttributeValue(Int32, Int32, ObjectId, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    InsertColumns(Int32, Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeleteColumns(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InsertRows(Int32, Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeleteRows(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MergeCells(CellRange): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UnmergeCells(CellRange): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsMergedCell(Int32, Int32, CellRange&(Out)): PrivateScope, Public, HideBySig (Obsolete)
    GenerateLayout(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RecomputeTableBlock(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HitTest(Point3d, Vector3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_SubSelection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SubSelection(CellRange): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasSubSelection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ClearSubSelection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DataType(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
    DataType(RowType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask (Obsolete)
Class Autodesk.AutoCAD.DatabaseServices.Cell: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.CellRange
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.Table, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object Value 'get set' : 
    System.String ToolTip 'get set' : 
    System.String TextString 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId DataLink 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.CellContentTypes ContentTypes 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId FieldId 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId BlockTableRecordId 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d AttachmentPoint 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.TableCellType CellType 'get ' : 
    Int32 Column 'get ' : 
    Int32 Row  'get ' : 
    Autodesk.AutoCAD.DatabaseServices.CellContentsCollection Contents 'get ' : 
  Methods:
    get_Contents(): PrivateScope, Public, HideBySig, SpecialName
    get_Row(): PrivateScope, Public, HideBySig, SpecialName
    get_Column(): PrivateScope, Public, HideBySig, SpecialName
    GetExtents(): PrivateScope, Public, HideBySig
    get_CellType(): PrivateScope, Public, HideBySig, SpecialName
    get_AttachmentPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_BlockTableRecordId(): PrivateScope, Public, HideBySig, SpecialName
    set_BlockTableRecordId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_FieldId(): PrivateScope, Public, HideBySig, SpecialName
    set_FieldId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    GetBlockAttributeValue(ObjectId): PrivateScope, Public, HideBySig
    SetBlockAttributeValue(ObjectId, String): PrivateScope, Public, HideBySig
    get_ContentTypes(): PrivateScope, Public, HideBySig, SpecialName
    get_DataLink(): PrivateScope, Public, HideBySig, SpecialName
    set_DataLink(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    RemoveDataLink(): PrivateScope, Public, HideBySig
    UpdateDataLink(UpdateDirection, UpdateOption): PrivateScope, Public, HideBySig
    get_TextString(): PrivateScope, Public, HideBySig, SpecialName
    set_TextString(String): PrivateScope, Public, HideBySig, SpecialName
    GetTextString(FormatOption): PrivateScope, Public, HideBySig
    get_ToolTip(): PrivateScope, Public, HideBySig, SpecialName
    set_ToolTip(String): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Object): PrivateScope, Public, HideBySig, SpecialName
    GetValue(FormatOption): PrivateScope, Public, HideBySig
    SetValue(Object, ParseOption): PrivateScope, Public, HideBySig
    ResetValue(): PrivateScope, Public, HideBySig
    GetMergeRange(): PrivateScope, Public, HideBySig
    GetDataLinkRange(): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.TableHitTestInfo: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Autodesk.AutoCAD.DatabaseServices.TableHitTestType Type 'get ' : 
    Int32 Column 'get ' : 
    Int32 Row  'get ' : 
  Methods:
    get_Row(): PrivateScope, Public, HideBySig, SpecialName
    get_Column(): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.TableHitTestType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.TableHitTestType None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableHitTestType Cell = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.DataTypeParameter: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.DataType, Autodesk.AutoCAD.DatabaseServices.UnitType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.UnitType UnitType 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.DataType DataType 'get set' : 
  Methods:
    get_DataType(): PrivateScope, Public, HideBySig, SpecialName
    set_DataType(DataType): PrivateScope, Public, HideBySig, SpecialName
    get_UnitType(): PrivateScope, Public, HideBySig, SpecialName
    set_UnitType(UnitType): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(DataTypeParameter, DataTypeParameter): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(DataTypeParameter, DataTypeParameter): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.DataType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.DataType Unknown = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DataType Long = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DataType Double = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DataType String = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DataType Date = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DataType Point = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DataType Point3d = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DataType ObjectId = 64 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DataType Buffer = 128 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DataType Resbuf = 256 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DataType General = 512 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.GridPropertyParameter: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Autodesk.AutoCAD.DatabaseServices.GridProperties PropertyMask : Public
    Autodesk.AutoCAD.DatabaseServices.GridLineStyle LineStyle : Public
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight : Public
    Autodesk.AutoCAD.DatabaseServices.ObjectId Linetype : Public
    Autodesk.AutoCAD.Colors.Color Color : Public
    Autodesk.AutoCAD.DatabaseServices.Visibility Visibility : Public
    Double DoubleLineSpacing : Public
Struct Autodesk.AutoCAD.DatabaseServices.GridProperties: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.GridProperties Invalid = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GridProperties LineStyle = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GridProperties LineWeight = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GridProperties Linetype = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GridProperties Color = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GridProperties Visibility = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GridProperties DoubleLineSpacing = 32 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.GridLineStyle: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.GridLineStyle Single = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GridLineStyle Double = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.Visibility: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.Visibility Invisible = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Visibility Visible = 0 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.RowsCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Interfaces:
    System.Collections.Generic.IEnumerable`1[Autodesk.AutoCAD.DatabaseServices.Row]
    System.Collections.IEnumerable
  Properties:
    Autodesk.AutoCAD.DatabaseServices.Row Item [Int32] 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.ColumnsCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Interfaces:
    System.Collections.Generic.IEnumerable`1[Autodesk.AutoCAD.DatabaseServices.Column]
    System.Collections.IEnumerable
  Properties:
    Autodesk.AutoCAD.DatabaseServices.Column Item [Int32] 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.FlowDirection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.FlowDirection NotSet = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FlowDirection LeftToRight = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FlowDirection RightToLeft = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FlowDirection TopToBottom = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FlowDirection BottomToTop = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FlowDirection ByStyle = 5 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.CellAlignment: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.CellAlignment TopLeft = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellAlignment TopCenter = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellAlignment TopRight = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellAlignment MiddleLeft = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellAlignment MiddleCenter = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellAlignment MiddleRight = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellAlignment BottomLeft = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellAlignment BottomCenter = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellAlignment BottomRight = 9 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.RowType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.RowType UnknownRow = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.RowType DataRow = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.RowType TitleRow = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.RowType HeaderRow = 4 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.CellEdgeMasks: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.CellEdgeMasks TopMask = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellEdgeMasks RightMask = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellEdgeMasks BottomMask = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellEdgeMasks LeftMask = 8 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.GridLineType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.GridLineType InvalidGridLine = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GridLineType HorizontalTop = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GridLineType HorizontalInside = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GridLineType HorizontalBottom = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GridLineType VerticalLeft = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GridLineType VerticalInside = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GridLineType VerticalRight = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GridLineType HorizontalGridLines = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GridLineType VerticalGridLines = 56 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GridLineType OuterGridLines = 45 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GridLineType InnerGridLines = 18 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GridLineType AllGridLines = 63 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.TableStyleOverride: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride TitleSuppressed = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HeaderSuppressed = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride FlowDirection = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HorizontalCellMargin = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride VerticalCellMargin = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride TitleRowColor = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HeaderRowColor = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride DataRowColor = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride TitleRowFillNone = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HeaderRowFillNone = 10 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride DataRowFillNone = 11 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride TitleRowFillColor = 12 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HeaderRowFillColor = 13 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride DataRowFillColor = 14 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride TitleRowAlignment = 15 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HeaderRowAlignment = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride DataRowAlignment = 17 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride TitleRowTextStyle = 18 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HeaderRowTextStyle = 19 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride DataRowTextStyle = 20 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride TitleRowTextHeight = 21 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HeaderRowTextHeight = 22 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride DataRowTextHeight = 23 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride TitleRowDataType = 24 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HeaderRowDataType = 25 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride DataRowDataType = 26 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride TitleHorizontalTopColor = 40 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride TitleHorizontalInsideColor = 41 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride TitleHorizontalBottomColor = 42 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride TitleVerticalLeftColor = 43 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride TitleVerticalInsideColor = 44 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride TitleVerticalRightColor = 45 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HeaderHorizontalTopColor = 46 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HeaderHorizontalInsideColor = 47 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HeaderHorizontalBottomColor = 48 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HeaderVerticalLeftColor = 49 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HeaderVerticalInsideColor = 50 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HeaderVerticalRightColor = 51 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride DataHorizontalTopColor = 52 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride DataHorizontalInsideColor = 53 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride DataHorizontalBottomColor = 54 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride DataVerticalLeftColor = 55 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride DataVerticalInsideColor = 56 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride DataVerticalRightColor = 57 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride TitleHorizontalTopLineWeight = 70 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride TitleHorizontalInsideLineWeight = 71 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride TitleHorizontalBottomLineWeight = 72 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride TitleVerticalLeftLineWeight = 73 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride TitleVerticalInsideLineWeight = 74 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride TitleVerticalRightLineWeight = 75 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HeaderHorizontalTopLineWeight = 76 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HeaderHorizontalInsideLineWeight = 77 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HeaderHorizontalBottomLineWeight = 78 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HeaderVerticalLeftLineWeight = 79 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HeaderVerticalInsideLineWeight = 80 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HeaderVerticalRightLineWeight = 81 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride DataHorizontalTopLineWeight = 82 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride DataHorizontalInsideLineWeight = 83 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride DataHorizontalBottomLineWeight = 84 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride DataVerticalLeftLineWeight = 85 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride DataVerticalInsideLineWeight = 86 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride DataVerticalRightLineWeight = 87 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride TitleHorizontalTopVisibility = 100 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride TitleHorizontalInsideVisibility = 101 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride TitleHorizontalBottomVisibility = 102 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride TitleVerticalLeftVisibility = 103 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride TitleVerticalInsideVisibility = 104 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride TitleVerticalRightVisibility = 105 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HeaderHorizontalTopVisibility = 106 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HeaderHorizontalInsideVisibility = 107 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HeaderHorizontalBottomVisibility = 108 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HeaderVerticalLeftVisibility = 109 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HeaderVerticalInsideVisibility = 110 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride HeaderVerticalRightVisibility = 111 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride DataHorizontalTopVisibility = 112 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride DataHorizontalInsideVisibility = 113 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride DataHorizontalBottomVisibility = 114 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride DataVerticalLeftVisibility = 115 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride DataVerticalInsideVisibility = 116 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride DataVerticalRightVisibility = 117 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride CellAlignment = 130 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride CellBackgroundFillNone = 131 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride CellBackgroundColor = 132 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride CellContentColor = 133 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride CellTextStyle = 134 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride CellTextHeight = 135 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride CellTopGridColor = 136 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride CellRightGridColor = 137 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride CellBottomGridColor = 138 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride CellLeftGridColor = 139 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride CellTopGridLineWeight = 140 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride CellRightGridLineWeight = 141 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride CellBottomGridLineWeight = 142 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride CellLeftGridLineWeight = 143 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride CellTopVisibility = 144 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride CellRightVisibility = 145 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride CellBottomVisibility = 146 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride CellLeftVisibility = 147 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleOverride CellDataType = 148 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.TableCellType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.TableCellType UnknownCell = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCellType TextCell = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCellType BlockCell = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCellType MultipleContentCell = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.FormatOption: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.FormatOption FormatOptionNone = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FormatOption ForEditing = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FormatOption ForExpression = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FormatOption UseMaximumPrecision = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FormatOption IgnoreMtextFormat = 8 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.CellOption: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.CellOption None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellOption InheritCellFormat = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.RotationAngle: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.RotationAngle Degrees000 = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.RotationAngle Degrees090 = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.RotationAngle Degrees180 = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.RotationAngle Degrees270 = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.RotationAngle DegreesUnknown = -1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.ParseOption: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.ParseOption ParseOptionNone = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ParseOption SetDefaultFormat = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ParseOption PreserveMtextFormat = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.SelectType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.SelectType Window = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SelectType Crossing = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.TableEnumeratorOption: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.TableEnumeratorOption None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableEnumeratorOption IterateSelection = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableEnumeratorOption IterateRows = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableEnumeratorOption IterateColumns = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableEnumeratorOption SkipReadOnlyContent = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableEnumeratorOption SkipReadOnlyFormat = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableEnumeratorOption SkipMerged = 64 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.CellStates: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.CellStates None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellStates ContentLocked = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellStates ContentReadOnly = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellStates Linked = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellStates ContentModifiedAfterUpdate = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellStates FormatLocked = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellStates FormatReadOnly = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellStates FormatModifiedAfterUpdate = 64 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.CellContentTypes: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.CellContentTypes Unknown = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellContentTypes Value = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellContentTypes Field = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellContentTypes Block = 4 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.CellMargins: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.CellMargins Top = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellMargins Left = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellMargins Bottom = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellMargins Right = 8 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.CellContentLayout: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.CellContentLayout Flow = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellContentLayout StackedHorizontal = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellContentLayout StackedVertical = 4 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.CellProperties: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.CellProperties Invalid = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellProperties DataType = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellProperties DataFormat = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellProperties Rotation = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellProperties Scale = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellProperties Alignment = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellProperties ContentColor = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellProperties TextStyle = 64 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellProperties TextHeight = 128 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellProperties AutoScale = 256 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellProperties BackgroundColor = 512 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellProperties MarginLeft = 1024 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellProperties MarginTop = 2048 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellProperties MarginRight = 4096 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellProperties MarginBottom = 8192 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellProperties MarginHorzSpacing = 131072 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellProperties MarginVertSpacing = 262144 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellProperties ContentLayout = 16384 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellProperties MergeAll = 32768 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellProperties FlowDirBtoT = 65536 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.TableBreakFlowDirection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.TableBreakFlowDirection Right = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableBreakFlowDirection DownOrUp = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableBreakFlowDirection Left = 4 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.TableBreakOptions: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.TableBreakOptions None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableBreakOptions EnableBreaking = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableBreakOptions RepeatTopLabels = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableBreakOptions RepeatBottomLabels = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableBreakOptions AllowManualPositions = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableBreakOptions AllowManualHeights = 16 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.TableCopyOptions: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions ExpandOrContractTable = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions SkipContent = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions SkipValue = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions SkipField = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions SkipFormula = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions SkipBlock = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions SkipDataLink = 64 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions SkipLabelCell = 128 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions SkipDataCell = 256 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions SkipFormat = 512 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions SkipCellStyle = 1024 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions ConvertFormatToOverrides = 2048 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions SkipCellState = 4096 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions SkipContentFormat = 8192 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions SkipDissimilarContentFormat = 16384 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions SkipGeometry = 32768 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions SkipMerges = 65536 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions FillTarget = 131072 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions OverwriteReadOnlyContent = 262144 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions OverwriteReadOnlyFormat = 524288 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions OverwriteContentModifiedAfterUpdate = 1048576 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions OverwriteFormatModifiedAfterUpdate = 2097152 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions OnlyContentModifiedAfterUpdate = 4194304 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions OnlyFormatModifiedAfterUpdate = 8388608 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions TableCopyRowHeight = 16777216 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableCopyOptions TableCopyColumnWidth = 33554432 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.LinkedTableData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.LinkedData
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 NumberOfRows 'get ' : 
    Int32 NumberOfColumns 'get ' : 
  Methods:
    GetEnumerator(TableEnumeratorOption): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, HideBySig
    SetSize(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_NumberOfColumns(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetColumnName(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetColumnName(Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AppendColumn(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InsertColumn(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeleteColumn(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_NumberOfRows(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AppendRow(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    InsertRow(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeleteRow(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeleteContent(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetContentTypes(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsContentEditable(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCellState(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetCellState(Int32, Int32, CellStates): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DataType(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UnitType(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetDataType(Int32, Int32, DataType, UnitType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDataFormat(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetDataFormat(Int32, Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetValue(Int32, Int32, Int32, FormatOption): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetValue(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetValue(Int32, Int32, Int32, Object, ParseOption): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetValue(Int32, Int32, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFieldId(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetFieldId(Int32, Int32, ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBlockTableRecordId(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetBlockTableRecordId(Int32, Int32, ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBlockAttributeValue(Int32, Int32, ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetBlockAttributeValue(Int32, Int32, ObjectId, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetToolTip(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetToolTip(Int32, Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetCustomData(Int32, Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetCustomData(Int32, Int32, String, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsLinked(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDataLink(CellRange): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDataLink(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDataLink(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetDataLink(CellRange, ObjectId, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetDataLink(Int32, Int32, ObjectId, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UpdateDataLink(UpdateDirection, UpdateOption): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UpdateDataLink(Int32, Int32, UpdateDirection, UpdateOption): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Autodesk.AutoCAD.DatabaseServices.TableFillOptions: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.TableFillOptions None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableFillOptions Row = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableFillOptions Reverse = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableFillOptions GenerateSeries = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableFillOptions CopyContent = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableFillOptions CopyFormat = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableFillOptions OverwriteReadOnlyContent = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableFillOptions OverwriteReadOnlyFormat = 64 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.CellReference: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Int32 Column 'get set' : 
    Int32 Row  'get set' : 
  Methods:
    get_Row(): PrivateScope, Public, HideBySig, SpecialName
    set_Row(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Column(): PrivateScope, Public, HideBySig, SpecialName
    set_Column(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.CellBorders: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Properties:
    Autodesk.AutoCAD.DatabaseServices.CellBorder Vertical 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.CellBorder Horizontal 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.CellBorder Bottom 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.CellBorder Right 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.CellBorder Top 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.CellBorder Left 'get ' : 
  Methods:
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, HideBySig, SpecialName
    get_Horizontal(): PrivateScope, Public, HideBySig, SpecialName
    get_Vertical(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.CellContentsCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Interfaces:
    System.Collections.Generic.IEnumerable`1[Autodesk.AutoCAD.DatabaseServices.CellContent]
    System.Collections.IEnumerable
  Properties:
    Autodesk.AutoCAD.DatabaseServices.CellContent Item [Int32] 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    Move(Int32, Int32): PrivateScope, Public, HideBySig
    InsertAt(Int32): PrivateScope, Public, HideBySig
    Add(): PrivateScope, Public, HideBySig
    RemoveAt(Int32): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.FormattedTableData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.LinkedTableData
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsFormatEditable(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRotation(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetRotation(Int32, Int32, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetScale(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetScale(Int32, Int32, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetAlignment(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAlignment(Int32, Int32, CellAlignment): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetContentColor(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetContentColor(Int32, Int32, Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBackgroundColor(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetBackgroundColor(Int32, Int32, Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTextStyle(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTextStyle(Int32, Int32, ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetTextHeight(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTextHeight(Int32, Int32, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMargin(Int32, Int32, CellMargins): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetMargin(Int32, Int32, CellMargins, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetGridColor(Int32, Int32, GridLineType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetGridColor(Int32, Int32, GridLineType, Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetGridLineWeight(Int32, Int32, GridLineType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetGridLineWeight(Int32, Int32, GridLineType, LineWeight): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetGridLinetype(Int32, Int32, GridLineType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetGridLinetype(Int32, Int32, GridLineType, ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetGridVisibility(Int32, Int32, GridLineType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetGridVisibility(Int32, Int32, GridLineType, Visibility): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetOverride(Int32, Int32, GridLineType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetOverride(Int32, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetOverride(Int32, Int32, GridLineType, GridProperties): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetOverride(Int32, Int32, Int32, CellProperties): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveAllOverrides(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Merge(CellRange): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Unmerge(CellRange): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsMerged(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetMergeRange(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Autodesk.AutoCAD.DatabaseServices.DBDictionaryEntry: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String, Autodesk.AutoCAD.DatabaseServices.ObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String m_key : Public
    Autodesk.AutoCAD.DatabaseServices.ObjectId m_value : Public
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId Value 'get set' : 
    System.String Key 'get set' : 
  Methods:
    get_Key(): PrivateScope, Public, HideBySig, SpecialName
    set_Key(String): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    op_Explicit(DictionaryEntry): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(DBDictionaryEntry): PrivateScope, Public, Static, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.DbDictionaryEnumerator: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Interfaces:
    System.Collections.IDictionaryEnumerator
    System.Collections.IEnumerator
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId Value 'get ' : 
    System.String Key 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.DBDictionaryEntry Current 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.DBDictionaryEntry Entry 'get ' : 
  Methods:
    MoveNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Entry(): PrivateScope, Public, HideBySig, SpecialName
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
    get_Key(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.DBDictionary: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IDictionary
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Autodesk.AutoCAD.DatabaseServices.DBDictionary IncludingErased 'get ' : 
    System.Object Item [System.String] 'get set' : 
    Int32 Count 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.DuplicateRecordCloning MergeStyle 'get set' : 
    Boolean TreatElementsAsHard 'get set' : 
  Methods:
    GetAt(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    NameAt(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(ObjectId): PrivateScope, Public, HideBySig
    Contains(String): PrivateScope, Public, HideBySig
    Remove(ObjectId): PrivateScope, Public, HideBySig
    Remove(String): PrivateScope, Public, HideBySig
    SetName(String, String): PrivateScope, Public, HideBySig
    SetAt(String, DBObject): PrivateScope, Public, HideBySig
    get_TreatElementsAsHard(): PrivateScope, Public, HideBySig, SpecialName
    set_TreatElementsAsHard(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_MergeStyle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_MergeStyle(DuplicateRecordCloning): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, HideBySig
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    set_Item(String, Object): PrivateScope, Public, HideBySig, SpecialName
    CopyTo(DBDictionaryEntry[], Int32): PrivateScope, Public, HideBySig
    get_IncludingErased(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.DictionaryWithDefaultDictionary: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBDictionary
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.FullDwgVersion ObjectBirthVersion 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId DefaultId 'get set' : 
  Methods:
    get_DefaultId(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_ObjectBirthVersion(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.DimStyleTable: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.SymbolTable
Struct Autodesk.AutoCAD.DatabaseServices.DimArrowFlag: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.DimArrowFlag FirstArrow = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DimArrowFlag SecondArrow = 1 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.Runtime.Dictionary: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Interfaces:
    System.Collections.IDictionary
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Autodesk.AutoCAD.Runtime.RXObject Item [System.String] 'get set' : 
    Int32 Count 'get ' : 
    Boolean IsSorted 'get ' : 
    Boolean IsCaseSensitive 'get ' : 
    Boolean DeletesObjects 'get ' : 
  Methods:
    At(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    At(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AtPut(Int32, RXObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AtPut(String, RXObject, Int32&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AtPut(String, RXObject): PrivateScope, Public, HideBySig
    ResetKey(Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ResetKey(String, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AtKeyAndIdPut(String, Int32, RXObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Remove(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Contains(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IdAt(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    KeyAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_DeletesObjects(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsCaseSensitive(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSorted(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Item(String, RXObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CopyTo(DictionaryEntry[], Int32): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.Filters.Filter: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
  Properties:
    Autodesk.AutoCAD.Runtime.RXClass IndexClass 'get ' : 
  Methods:
    get_IndexClass(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.Group: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 NumEntities 'get ' : 
    Boolean IsAnonymous 'get ' : 
    Boolean IsNotAccessible 'get ' : 
    System.String Name 'get set' : 
    Boolean Selectable 'get set' : 
    System.String Description 'get set' : 
  Methods:
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    set_Description(String): PrivateScope, Public, HideBySig, SpecialName
    get_Selectable(): PrivateScope, Public, HideBySig, SpecialName
    set_Selectable(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsNotAccessible(): PrivateScope, Public, HideBySig, SpecialName
    get_IsAnonymous(): PrivateScope, Public, HideBySig, SpecialName
    SetAnonymous(): PrivateScope, Public, HideBySig
    Append(ObjectIdCollection): PrivateScope, Public, HideBySig
    Append(ObjectId): PrivateScope, Public, HideBySig
    Prepend(ObjectIdCollection): PrivateScope, Public, HideBySig
    Prepend(ObjectId): PrivateScope, Public, HideBySig
    InsertAt(Int32, ObjectIdCollection): PrivateScope, Public, HideBySig
    InsertAt(Int32, ObjectId): PrivateScope, Public, HideBySig
    Remove(ObjectIdCollection): PrivateScope, Public, HideBySig
    Remove(ObjectId): PrivateScope, Public, HideBySig
    RemoveAt(Int32, ObjectIdCollection): PrivateScope, Public, HideBySig
    RemoveAt(Int32): PrivateScope, Public, HideBySig
    Replace(ObjectId, ObjectId): PrivateScope, Public, HideBySig
    Transfer(Int32, Int32, Int32): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    get_NumEntities(): PrivateScope, Public, HideBySig, SpecialName
    Has(Entity): PrivateScope, Public, HideBySig
    GetAllEntityIds(): PrivateScope, Public, HideBySig
    GetIndex(ObjectId): PrivateScope, Public, HideBySig
    Reverse(): PrivateScope, Public, HideBySig
    SetColor(Color): PrivateScope, Public, HideBySig
    SetColorIndex(Int32): PrivateScope, Public, HideBySig
    SetLayer(ObjectId): PrivateScope, Public, HideBySig
    SetLayer(String): PrivateScope, Public, HideBySig
    SetLinetype(ObjectId): PrivateScope, Public, HideBySig
    SetLinetype(String): PrivateScope, Public, HideBySig
    SetLinetypeScale(Double): PrivateScope, Public, HideBySig
    SetVisibility(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetHighlight(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.Filters.Index: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
  Properties:
    Boolean IsUptoDate 'get ' : 
    System.DateTime LastUpdatedAtU 'get set' : 
    System.DateTime LastUpdatedAt 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ObjectBeingIndexedId 'get ' : 
  Methods:
    RebuildFull(IndexUpdateData): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_ObjectBeingIndexedId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LastUpdatedAt(): PrivateScope, Public, HideBySig, SpecialName
    set_LastUpdatedAt(DateTime): PrivateScope, Public, HideBySig, SpecialName
    get_LastUpdatedAtU(): PrivateScope, Public, HideBySig, SpecialName
    set_LastUpdatedAtU(DateTime): PrivateScope, Public, HideBySig, SpecialName
    get_IsUptoDate(): PrivateScope, Public, HideBySig, SpecialName
    GetIterator(Filter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.Filters.IndexUpdateData: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Methods:
    AddId(ObjectId): PrivateScope, Public, HideBySig
    SetIdFlags(ObjectId, Byte): PrivateScope, Public, HideBySig
    SetIdData(ObjectId, IntPtr): PrivateScope, Public, HideBySig
    SetIdData(ObjectId, Int32): PrivateScope, Public, HideBySig (Obsolete)
    GetIdData(ObjectId): PrivateScope, Public, HideBySig (Obsolete)
    GetIdDataPtr(ObjectId): PrivateScope, Public, HideBySig
    GetIdFlags(ObjectId): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.Filters.FilteredBlockIterator: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Properties:
    Boolean BuffersForComposition 'get ' : 
    Double EstimatedHitFraction 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Id 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Next 'get ' : 
  Methods:
    Start(): PrivateScope, Public, HideBySig
    get_Next(): PrivateScope, Public, HideBySig, SpecialName
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    Seek(ObjectId): PrivateScope, Public, HideBySig
    get_EstimatedHitFraction(): PrivateScope, Public, HideBySig, SpecialName
    Accepts(ObjectId): PrivateScope, Public, HideBySig
    get_BuffersForComposition(): PrivateScope, Public, HideBySig, SpecialName
    AddToBuffer(ObjectId): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.Filters.SpatialIndex: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Filters.Index
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.Filters.LayerIndex: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Filters.Index
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Compute(LayerTable, BlockTableRecord): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.LayerStateMasks: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.LayerStateMasks None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LayerStateMasks On = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LayerStateMasks Frozen = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LayerStateMasks Locked = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LayerStateMasks Plot = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LayerStateMasks NewViewport = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LayerStateMasks Color = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LayerStateMasks LineType = 64 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LayerStateMasks LineWeight = 128 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LayerStateMasks PlotStyle = 256 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LayerStateMasks CurrentViewport = 512 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LayerStateMasks Transparency = 1024 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LayerStateMasks LastRestored = 65536 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.CustomScale: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Denominator 'get ' : 
    Double Numerator 'get ' : 
  Methods:
    get_Numerator(): PrivateScope, Public, HideBySig, SpecialName
    get_Denominator(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    IsEqualTo(CustomScale): PrivateScope, Public, HideBySig
    IsEqualTo(CustomScale, Tolerance): PrivateScope, Public, HideBySig
    op_Inequality(CustomScale, CustomScale): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(CustomScale, CustomScale): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.PlotSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean PlotAsRaster 'get ' : 
    Boolean PlotWireframe 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ShadePlotId 'get ' : 
    Boolean ModelType 'get ' : 
    Boolean DrawViewportsFirst 'get set' : 
    Boolean PrintLineweights 'get set' : 
    Boolean ScaleLineweights 'get set' : 
    Double StdScale 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScaleType 'get ' : 
    System.String CurrentStyleSheet 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.CustomScale CustomPrintScale 'get ' : 
    Boolean UseStandardScale 'get ' : 
    System.String PlotViewName 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Extents2d PlotWindowArea 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.PlotType PlotType 'get ' : 
    Int16 ShadePlotCustomDpi 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ShadePlotResLevel ShadePlotResLevel 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.PlotSettingsShadePlotType ShadePlot 'get set' : 
    Boolean PlotHidden 'get set' : 
    Boolean PlotCentered 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.PlotRotation PlotRotation 'get ' : 
    Boolean ShowPlotStyles 'get set' : 
    Boolean PlotPlotStyles 'get set' : 
    Boolean PlotTransparency 'get set' : 
    Boolean PlotViewportBorders 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.PlotPaperUnit PlotPaperUnits 'get ' : 
    Autodesk.AutoCAD.Geometry.Point2d PlotOrigin 'get ' : 
    System.String CanonicalMediaName 'get ' : 
    Autodesk.AutoCAD.Geometry.Point2d PlotPaperSize 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Extents2d PlotPaperMargins 'get ' : 
    System.String PlotConfigurationName 'get ' : 
    System.String PlotSettingsName 'get set' : 
  Methods:
    AddToPlotSettingsDictionary(Database): PrivateScope, Public, HideBySig
    get_PlotSettingsName(): PrivateScope, Public, HideBySig, SpecialName
    set_PlotSettingsName(String): PrivateScope, Public, HideBySig, SpecialName
    get_PlotConfigurationName(): PrivateScope, Public, HideBySig, SpecialName
    get_PlotPaperMargins(): PrivateScope, Public, HideBySig, SpecialName
    get_PlotPaperSize(): PrivateScope, Public, HideBySig, SpecialName
    get_CanonicalMediaName(): PrivateScope, Public, HideBySig, SpecialName
    get_PlotOrigin(): PrivateScope, Public, HideBySig, SpecialName
    get_PlotPaperUnits(): PrivateScope, Public, HideBySig, SpecialName
    get_PlotViewportBorders(): PrivateScope, Public, HideBySig, SpecialName
    set_PlotViewportBorders(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_PlotTransparency(): PrivateScope, Public, HideBySig, SpecialName
    set_PlotTransparency(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_PlotPlotStyles(): PrivateScope, Public, HideBySig, SpecialName
    set_PlotPlotStyles(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ShowPlotStyles(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowPlotStyles(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_PlotRotation(): PrivateScope, Public, HideBySig, SpecialName
    get_PlotCentered(): PrivateScope, Public, HideBySig, SpecialName
    get_PlotHidden(): PrivateScope, Public, HideBySig, SpecialName
    set_PlotHidden(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ShadePlot(): PrivateScope, Public, HideBySig, SpecialName
    set_ShadePlot(PlotSettingsShadePlotType): PrivateScope, Public, HideBySig, SpecialName
    get_ShadePlotResLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_ShadePlotResLevel(ShadePlotResLevel): PrivateScope, Public, HideBySig, SpecialName
    get_ShadePlotCustomDpi(): PrivateScope, Public, HideBySig, SpecialName
    set_ShadePlotCustomDpi(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_PlotType(): PrivateScope, Public, HideBySig, SpecialName
    get_PlotWindowArea(): PrivateScope, Public, HideBySig, SpecialName
    get_PlotViewName(): PrivateScope, Public, HideBySig, SpecialName
    get_UseStandardScale(): PrivateScope, Public, HideBySig, SpecialName
    get_CustomPrintScale(): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentStyleSheet(): PrivateScope, Public, HideBySig, SpecialName
    get_StdScaleType(): PrivateScope, Public, HideBySig, SpecialName
    get_StdScale(): PrivateScope, Public, HideBySig, SpecialName
    get_ScaleLineweights(): PrivateScope, Public, HideBySig, SpecialName
    set_ScaleLineweights(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_PrintLineweights(): PrivateScope, Public, HideBySig, SpecialName
    set_PrintLineweights(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_DrawViewportsFirst(): PrivateScope, Public, HideBySig, SpecialName
    set_DrawViewportsFirst(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ModelType(): PrivateScope, Public, HideBySig, SpecialName
    get_ShadePlotId(): PrivateScope, Public, HideBySig, SpecialName
    SetShadePlot(PlotSettingsShadePlotType, ObjectId): PrivateScope, Public, HideBySig
    get_PlotWireframe(): PrivateScope, Public, HideBySig, SpecialName
    get_PlotAsRaster(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.PlotPaperUnit: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.PlotPaperUnit Inches = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PlotPaperUnit Millimeters = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PlotPaperUnit Pixels = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.PlotRotation: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.PlotRotation Degrees000 = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PlotRotation Degrees090 = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PlotRotation Degrees180 = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PlotRotation Degrees270 = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.PlotSettingsShadePlotType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.PlotSettingsShadePlotType AsDisplayed = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PlotSettingsShadePlotType Wireframe = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PlotSettingsShadePlotType Hidden = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PlotSettingsShadePlotType Rendered = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PlotSettingsShadePlotType VisualStyle = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PlotSettingsShadePlotType RenderPreset = 5 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.ShadePlotResLevel: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.ShadePlotResLevel Draft = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ShadePlotResLevel Preview = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ShadePlotResLevel Normal = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ShadePlotResLevel Presentation = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ShadePlotResLevel Maximum = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ShadePlotResLevel Custom = 5 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.PlotType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.PlotType Display = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PlotType Extents = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PlotType Limits = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PlotType View = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PlotType Window = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PlotType Layout = 5 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.StdScaleType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.StdScaleType ScaleToFit = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale1To128InchIs1ft = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale1To64InchIs1ft = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale1To32InchIs1ft = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale1To16InchIs1ft = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale3To32InchIs1ft = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale1To8InchIs1ft = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale3To16InchIs1ft = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale1To4InchIs1ft = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale3To8InchIs1ft = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale1To2InchIs1ft = 10 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale3To4InchIs1ft = 11 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale1InchIs1ft = 12 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale3InchIs1ft = 13 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale6InchIs1ft = 14 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale1ftIs1ft = 15 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale1To1 = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale1To2 = 17 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale1To4 = 18 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale1To5 = 19 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale1To8 = 20 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale1To10 = 21 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale1To16 = 22 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale1To20 = 23 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale1To30 = 24 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale1To40 = 25 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale1To50 = 26 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale1To100 = 27 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale2To1 = 28 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale4To1 = 29 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale8To1 = 30 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale10To1 = 31 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale100To1 = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StdScaleType StdScale1000To1 = 33 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.Layout: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.PlotSettings
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Bitmap Thumbnail 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.Extents3d Extents 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Extents2d Limits 'get ' : 
    Boolean AnnoAllVisible 'get set' : 
    Boolean TabSelected 'get set' : 
    Int32 TabOrder 'get set' : 
    System.String LayoutName 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId BlockTableRecordId 'get set' : 
  Methods:
    Initialize(): PrivateScope, Public, HideBySig
    get_BlockTableRecordId(): PrivateScope, Public, HideBySig, SpecialName
    set_BlockTableRecordId(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddToLayoutDictionary(Database, ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_LayoutName(): PrivateScope, Public, HideBySig, SpecialName
    set_LayoutName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TabOrder(): PrivateScope, Public, HideBySig, SpecialName
    set_TabOrder(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TabSelected(): PrivateScope, Public, HideBySig, SpecialName
    set_TabSelected(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetViewports(): PrivateScope, Public, HideBySig
    get_AnnoAllVisible(): PrivateScope, Public, HideBySig, SpecialName
    set_AnnoAllVisible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Limits(): PrivateScope, Public, HideBySig, SpecialName
    get_Extents(): PrivateScope, Public, HideBySig, SpecialName
    get_Thumbnail(): PrivateScope, Public, HideBySig, SpecialName
    set_Thumbnail(Bitmap): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.LinetypeTable: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.SymbolTable
Class Autodesk.AutoCAD.DatabaseServices.LinetypeTableRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.SymbolTableRecord
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsScaledToFit 'get set' : 
    Int32 NumDashes 'get set' : 
    Double PatternLength 'get set' : 
    System.String AsciiDescription 'get set' : 
    System.String Comments 'get set' : 
  Methods:
    get_Comments(): PrivateScope, Public, HideBySig, SpecialName
    set_Comments(String): PrivateScope, Public, HideBySig, SpecialName
    get_AsciiDescription(): PrivateScope, Public, HideBySig, SpecialName
    set_AsciiDescription(String): PrivateScope, Public, HideBySig, SpecialName
    get_PatternLength(): PrivateScope, Public, HideBySig, SpecialName
    set_PatternLength(Double): PrivateScope, Public, HideBySig, SpecialName
    get_NumDashes(): PrivateScope, Public, HideBySig, SpecialName
    set_NumDashes(Int32): PrivateScope, Public, HideBySig, SpecialName
    DashLengthAt(Int32): PrivateScope, Public, HideBySig
    SetDashLengthAt(Int32, Double): PrivateScope, Public, HideBySig
    ShapeStyleAt(Int32): PrivateScope, Public, HideBySig
    SetShapeStyleAt(Int32, ObjectId): PrivateScope, Public, HideBySig
    ShapeNumberAt(Int32): PrivateScope, Public, HideBySig
    SetShapeNumberAt(Int32, Int32): PrivateScope, Public, HideBySig
    ShapeOffsetAt(Int32): PrivateScope, Public, HideBySig
    SetShapeOffsetAt(Int32, Vector2d): PrivateScope, Public, HideBySig
    ShapeScaleAt(Int32): PrivateScope, Public, HideBySig
    SetShapeScaleAt(Int32, Double): PrivateScope, Public, HideBySig
    get_IsScaledToFit(): PrivateScope, Public, HideBySig, SpecialName
    set_IsScaledToFit(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    ShapeIsUcsOrientedAt(Int32): PrivateScope, Public, HideBySig
    SetShapeIsUcsOrientedAt(Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ShapeRotationAt(Int32): PrivateScope, Public, HideBySig
    SetShapeRotationAt(Int32, Double): PrivateScope, Public, HideBySig
    TextAt(Int32): PrivateScope, Public, HideBySig
    SetTextAt(Int32, String): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.LongTransaction: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean DisallowDrawOrder 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.IdMapping ActiveIdMap 'get ' : 
    System.String LongTransactionName 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId DestinationBlock 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId OriginBlock 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.LongTransactionType Type 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    get_OriginBlock(): PrivateScope, Public, HideBySig, SpecialName
    get_DestinationBlock(): PrivateScope, Public, HideBySig, SpecialName
    get_LongTransactionName(): PrivateScope, Public, HideBySig, SpecialName
    AddToWorkSet(ObjectId): PrivateScope, Public, HideBySig
    RemoveFromWorkSet(ObjectId): PrivateScope, Public, HideBySig
    SyncWorkSet(): PrivateScope, Public, HideBySig
    get_ActiveIdMap(): PrivateScope, Public, HideBySig, SpecialName
    OriginObject(ObjectId): PrivateScope, Public, HideBySig
    WorkSetHas(ObjectId, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    RegenWorkSetWithDrawOrder(): PrivateScope, Public, HideBySig
    get_DisallowDrawOrder(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.LongTransactionType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.LongTransactionType SameDb = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LongTransactionType XRefDb = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LongTransactionType UnrelatedDb = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.GraphicsInterface.MaterialMap: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
    Void .ctor(Autodesk.AutoCAD.GraphicsInterface.Source, System.String, Autodesk.AutoCAD.GraphicsInterface.MaterialTexture, Double, Autodesk.AutoCAD.GraphicsInterface.Mapper): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName (Obsolete)
    Void .ctor(Autodesk.AutoCAD.GraphicsInterface.Source, Autodesk.AutoCAD.GraphicsInterface.MaterialTexture, Double, Autodesk.AutoCAD.GraphicsInterface.Mapper, Autodesk.AutoCAD.GraphicsInterface.MapFilter): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.GraphicsInterface.Source, Autodesk.AutoCAD.GraphicsInterface.MaterialTexture, Double, Autodesk.AutoCAD.GraphicsInterface.Mapper): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String SourceFileName 'get ' :  (Obsolete)
    Autodesk.AutoCAD.GraphicsInterface.Mapper Mapper 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.MapFilter Filter 'get ' : 
    Double BlendFactor 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialTexture Texture 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.Source Source 'get ' : 
  Methods:
    get_Source(): PrivateScope, Public, HideBySig, SpecialName
    get_Texture(): PrivateScope, Public, HideBySig, SpecialName
    get_BlendFactor(): PrivateScope, Public, HideBySig, SpecialName
    get_Filter(): PrivateScope, Public, HideBySig, SpecialName
    get_Mapper(): PrivateScope, Public, HideBySig, SpecialName
    get_SourceFileName(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    op_Equality(MaterialMap, MaterialMap): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(MaterialMap, MaterialMap): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Autodesk.AutoCAD.GraphicsInterface.Source: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.Source File = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Source Scene = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Source Procedural = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.GraphicsInterface.MaterialTexture: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Autodesk.AutoCAD.GraphicsInterface.MapFilter: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.MapFilter Default = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.MapFilter None = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.MlineStyleElement: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Autodesk.AutoCAD.Colors.Color, Autodesk.AutoCAD.DatabaseServices.ObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId LinetypeId 'get ' : 
    Autodesk.AutoCAD.Colors.Color Color 'get ' : 
    Double Offset 'get ' : 
  Methods:
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    get_LinetypeId(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.MlineStyleElementCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Interfaces:
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.MlineStyleElement Item [Int32] 'get set' : 
  Methods:
    Add(MlineStyleElement, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    RemoveAt(Int32): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, MlineStyleElement): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, HideBySig
    CopyTo(MlineStyleElement[], Int32): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.MlineStyle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.MlineStyleElementCollection Elements 'get ' : 
    Double EndAngle 'get set' : 
    Double StartAngle 'get set' : 
    Boolean Filled 'get set' : 
    Autodesk.AutoCAD.Colors.Color FillColor 'get set' : 
    Boolean EndInnerArcs 'get set' : 
    Boolean EndRoundCap 'get set' : 
    Boolean EndSquareCap 'get set' : 
    Boolean StartInnerArcs 'get set' : 
    Boolean StartRoundCap 'get set' : 
    Boolean StartSquareCap 'get set' : 
    Boolean ShowMiters 'get set' : 
    System.String Name 'get set' : 
    System.String Description 'get set' : 
  Methods:
    Reset(): PrivateScope, Public, HideBySig
    Set(MlineStyle, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    set_Description(String): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_ShowMiters(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowMiters(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_StartSquareCap(): PrivateScope, Public, HideBySig, SpecialName
    set_StartSquareCap(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_StartRoundCap(): PrivateScope, Public, HideBySig, SpecialName
    set_StartRoundCap(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_StartInnerArcs(): PrivateScope, Public, HideBySig, SpecialName
    set_StartInnerArcs(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_EndSquareCap(): PrivateScope, Public, HideBySig, SpecialName
    set_EndSquareCap(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_EndRoundCap(): PrivateScope, Public, HideBySig, SpecialName
    set_EndRoundCap(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_EndInnerArcs(): PrivateScope, Public, HideBySig, SpecialName
    set_EndInnerArcs(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_FillColor(): PrivateScope, Public, HideBySig, SpecialName
    set_FillColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_Filled(): PrivateScope, Public, HideBySig, SpecialName
    set_Filled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_StartAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_StartAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_EndAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_EndAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Elements(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.MlineStyleElementCollectionEnumerator: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.MlineStyleElementCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    Autodesk.AutoCAD.DatabaseServices.MlineStyleElement Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.PlaceHolder: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.ProxyObject: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
  Properties:
    System.String ApplicationDescription 'get ' : 
    System.String OriginalDxfName 'get ' : 
    System.String OriginalClassName 'get ' : 
    Int32 ProxyFlags 'get ' : 
  Methods:
    get_ProxyFlags(): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalClassName(): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalDxfName(): PrivateScope, Public, HideBySig, SpecialName
    get_ApplicationDescription(): PrivateScope, Public, HideBySig, SpecialName
    GetReferences(): PrivateScope, Public, HideBySig
    ResurrectMeNow(ObjectId): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.DBObjectReferenceCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Collections.CollectionBase
  Properties:
    Autodesk.AutoCAD.DatabaseServices.DBObjectReference Item [Int32] 'get set' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, DBObjectReference): PrivateScope, Public, HideBySig, SpecialName
    Add(DBObjectReference): PrivateScope, Public, HideBySig
    IndexOf(DBObjectReference): PrivateScope, Public, HideBySig
    Insert(Int32, DBObjectReference): PrivateScope, Public, HideBySig
    Remove(DBObjectReference): PrivateScope, Public, HideBySig
    Contains(DBObjectReference): PrivateScope, Public, HideBySig
    CopyTo(DBObjectReference[], Int32): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.RegAppTable: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.SymbolTable
Class Autodesk.AutoCAD.DatabaseServices.RegAppTableRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.SymbolTableRecord
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.DrawOrderTable: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId BlockId 'get set' : 
  Methods:
    GetSortHandle(ObjectId): PrivateScope, Public, HideBySig
    MoveToBottom(ObjectIdCollection): PrivateScope, Public, HideBySig
    MoveToTop(ObjectIdCollection): PrivateScope, Public, HideBySig
    MoveBelow(ObjectIdCollection, ObjectId): PrivateScope, Public, HideBySig
    MoveAbove(ObjectIdCollection, ObjectId): PrivateScope, Public, HideBySig
    SwapOrder(ObjectId, ObjectId): PrivateScope, Public, HideBySig
    get_BlockId(): PrivateScope, Public, HideBySig, SpecialName
    set_BlockId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    FirstEntityIsDrawnBeforeSecond(ObjectId, ObjectId): PrivateScope, Public, HideBySig
    GetFullDrawOrder(Byte): PrivateScope, Public, HideBySig
    GetRelativeDrawOrder(Byte): PrivateScope, Public, HideBySig
    SetRelativeDrawOrder(ObjectIdCollection): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.TextStyleTable: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.SymbolTable
Class Autodesk.AutoCAD.DatabaseServices.TextStyleTableRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.SymbolTableRecord
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.FontDescriptor Font 'get set' : 
    System.String BigFontFileName 'get set' : 
    System.String FileName 'get set' : 
    Double PriorSize 'get set' : 
    Byte FlagBits 'get set' : 
    Double ObliquingAngle 'get set' : 
    Double XScale 'get set' : 
    Double TextSize 'get set' : 
    Boolean IsVertical 'get set' : 
    Boolean IsShapeFile 'get set' : 
  Methods:
    get_IsShapeFile(): PrivateScope, Public, HideBySig, SpecialName
    set_IsShapeFile(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_TextSize(): PrivateScope, Public, HideBySig, SpecialName
    set_TextSize(Double): PrivateScope, Public, HideBySig, SpecialName
    get_XScale(): PrivateScope, Public, HideBySig, SpecialName
    set_XScale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ObliquingAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_ObliquingAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_FlagBits(): PrivateScope, Public, HideBySig, SpecialName
    set_FlagBits(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_PriorSize(): PrivateScope, Public, HideBySig, SpecialName
    set_PriorSize(Double): PrivateScope, Public, HideBySig, SpecialName
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    set_FileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_BigFontFileName(): PrivateScope, Public, HideBySig, SpecialName
    set_BigFontFileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_Font(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Font(FontDescriptor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.UcsTable: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.SymbolTable
Class Autodesk.AutoCAD.DatabaseServices.UcsTableRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.SymbolTableRecord
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Vector3d YAxis 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d XAxis 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Origin 'get set' : 
  Methods:
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    set_Origin(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_XAxis(): PrivateScope, Public, HideBySig, SpecialName
    set_XAxis(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_YAxis(): PrivateScope, Public, HideBySig, SpecialName
    set_YAxis(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    GetUcsBaseOrigin(OrthographicView): PrivateScope, Public, HideBySig
    SetUcsBaseOrigin(Point3d, OrthographicView): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.ViewTable: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.SymbolTable
Class Autodesk.AutoCAD.DatabaseServices.ViewportTable: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.SymbolTable
Class Autodesk.AutoCAD.DatabaseServices.XrecordEnumerator: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Interfaces:
    System.Collections.Generic.IEnumerator`1[Autodesk.AutoCAD.DatabaseServices.TypedValue]
    System.Collections.IEnumerator
  Properties:
    Autodesk.AutoCAD.DatabaseServices.TypedValue Current 'get set' : 
    System.Object IEnumeratorCurrent 'get ' : 
    Int16 CurrentTypeCode 'get ' : 
  Methods:
    get_CurrentTypeCode(): PrivateScope, Public, HideBySig, SpecialName
    get_IEnumeratorCurrent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Current(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Current(TypedValue): PrivateScope, Public, HideBySig, SpecialName
    RemoveCurrent(): PrivateScope, Public, HideBySig
    InsertAtCurrent(ResultBuffer): PrivateScope, Public, HideBySig
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.Xrecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[Autodesk.AutoCAD.DatabaseServices.TypedValue]
    System.Collections.IEnumerable
  Properties:
    Autodesk.AutoCAD.DatabaseServices.DuplicateRecordCloning MergeStyle 'get set' : 
    Boolean XlateReferences 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ResultBuffer Data 'get set' : 
  Methods:
    get_Data(): PrivateScope, Public, HideBySig, SpecialName
    set_Data(ResultBuffer): PrivateScope, Public, HideBySig, SpecialName
    Append(ResultBuffer): PrivateScope, Public, HideBySig
    get_XlateReferences(): PrivateScope, Public, HideBySig, SpecialName
    set_XlateReferences(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_MergeStyle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_MergeStyle(DuplicateRecordCloning): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, HideBySig
    IEnumerableTypedValueGetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IEnumerableGetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.GraphicsInterface.CommonDraw: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Properties:
    Int32 NumberOfIsolines 'get ' : 
    Boolean IsDragging 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.Context Context 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.Geometry RawGeometry 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.SubEntityTraits SubEntityTraits 'get ' : 
    Boolean RegenAbort 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.RegenType RegenType 'get ' : 
  Methods:
    get_RegenType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_RegenAbort(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_SubEntityTraits(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_RawGeometry(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Context(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsDragging(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Deviation(DeviationType, Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_NumberOfIsolines(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Struct Autodesk.AutoCAD.GraphicsInterface.RegenType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.RegenType Invalid = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.RegenType StandardDisplay = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.RegenType HideOrShadeCommand = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.RegenType RenderCommand = 4 : Public, Static, Literal, HasDefault (Obsolete)
    Autodesk.AutoCAD.GraphicsInterface.RegenType ShadedDisplay = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.RegenType ForExplode = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.RegenType SaveWorldDrawForProxy = 6 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.GraphicsInterface.Geometry: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Properties:
    Autodesk.AutoCAD.Geometry.Matrix3d WorldToModelTransform 'get ' : 
    Autodesk.AutoCAD.Geometry.Matrix3d ModelToWorldTransform 'get ' : 
  Methods:
    get_ModelToWorldTransform(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_WorldToModelTransform(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    PushModelTransform(Matrix3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    PushModelTransform(Vector3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    PopModelTransform(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    PushPositionTransform(PositionBehavior, Point2d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    PushPositionTransform(PositionBehavior, Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    PushScaleTransform(ScaleBehavior, Point2d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    PushScaleTransform(ScaleBehavior, Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    PushOrientationTransform(OrientationBehavior): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Circle(Point3d, Point3d, Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Circle(Point3d, Double, Vector3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CircularArc(Point3d, Point3d, Point3d, ArcType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CircularArc(Point3d, Double, Vector3d, Vector3d, Double, ArcType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Polyline(Polyline, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Polyline(Polyline): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Polyline(Point3dCollection, Vector3d, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    PolyPolyline(PolylineCollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Polygon(Point3dCollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    PolyPolygon(UInt32Collection, Point3dCollection, UInt32Collection, Point3dCollection, EntityColorCollection, LinetypeCollection, EntityColorCollection, TransparencyCollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Mesh(Int32, Int32, Point3dCollection, EdgeData, FaceData, VertexData, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Shell(Point3dCollection, IntegerCollection, EdgeData, FaceData, VertexData, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Text(Point3d, Vector3d, Vector3d, String, Boolean(HasFieldMarshal), TextStyle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Text(Point3d, Vector3d, Vector3d, Double, Double, Double, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Xline(Point3d, Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Ray(Point3d, Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Draw(Drawable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    PushClipBoundary(ClipBoundary): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    PopClipBoundary(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    WorldLine(Point3d, Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Image(ImageBGRA32, Point3d, Vector3d, Vector3d, TransparencyMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Image(ImageBGRA32, Point3d, Vector3d, Vector3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RowOfDots(Int32, Point3d, Vector3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    EllipticalArc(Point3d, Vector3d, Double, Double, Double, Double, Double, ArcType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Polypoint(Point3dCollection, Vector3dCollection, IntPtrCollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    OwnerDraw(GdiDrawObject, Point3d, Vector3d, Vector3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Edge(Curve2dCollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct Autodesk.AutoCAD.GraphicsInterface.DeviationType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.DeviationType MaxDevForCircle = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DeviationType MaxDevForCurve = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DeviationType MaxDevForBoundary = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DeviationType MaxDevForIsoline = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DeviationType MaxDevForFacet = 4 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.GraphicsInterface.Fill: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.GraphicsInterface.HatchPattern: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.Fill
    Void .ctor(Autodesk.AutoCAD.GraphicsInterface.HatchPatternDefinition[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.HatchPatternDefinition[] PatternLines 'get ' : 
  Methods:
    get_PatternLines(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.GradientFill: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.Fill
    Void .ctor(Double, Double, Boolean, Autodesk.AutoCAD.Colors.Color[], Autodesk.AutoCAD.GraphicsInterface.GradientType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.GradientType Type 'get set' : 
    Autodesk.AutoCAD.Colors.Color[] GradientColors 'get set' : 
    Boolean IsAdjustAspect 'get set' : 
    Double GradientShift 'get set' : 
    Double GradientAngle 'get set' : 
  Methods:
    get_GradientAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_GradientAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_GradientShift(): PrivateScope, Public, HideBySig, SpecialName
    set_GradientShift(Double): PrivateScope, Public, HideBySig, SpecialName
    get_IsAdjustAspect(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAdjustAspect(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_GradientColors(): PrivateScope, Public, HideBySig, SpecialName
    set_GradientColors(Color[]): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(GradientType): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.GraphicsInterface.GradientType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.GradientType Linear = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.GradientType Cylinder = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.GradientType InvCylinder = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.GradientType Spherical = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.GradientType Hemispherical = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.GradientType Curved = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.GradientType InvSpherical = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.GradientType InvHemispherical = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.GradientType InvCurved = 8 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.FillType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.FillType FillAlways = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.FillType FillNever = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.ShadowFlags: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.ShadowFlags ShadowsCastAndReceive = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ShadowFlags ShadowsDoesNotCast = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ShadowFlags ShadowsDoesNotReceive = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ShadowFlags ShadowsIgnore = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.DrawableTraits+HighlightProperty: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    HighlightProperty VertexRolloverHighlightSize = 0 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.Linetype: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.Linetype Solid = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype Dashed = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype Dotted = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype DashDot = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype ShortDash = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype MediumDash = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype LongDash = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype ShortDashX2 = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype MediumDashX2 = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype LongDashX2 = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype MediumLongDash = 10 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype MediumDashShortDashShortDash = 11 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype LongDashShortDash = 12 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype LongDashDotDot = 13 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype LongDashDot = 14 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype MediumDashDotShortDashDot = 15 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype SparseDot = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype ISODash = 17 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype ISODashSpace = 18 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype ISOLongDashDot = 19 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype ISOLongDashDoubleDot = 20 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype ISOLongDashTripleDot = 21 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype ISODot = 22 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype ISOLongDashShortDash = 23 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype ISOLongDashDoubleShortDash = 24 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype ISODashDot = 25 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype ISODoubleDashDot = 26 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype ISODashDoubleDot = 27 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype ISODoubleDashDoubleDot = 28 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype ISODashTripleDot = 29 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype ISODoubleDashTripleDot = 30 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype LineTypeNone = 31 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Linetype Solid6PixelsBlank6Pixels = 32 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.SelectionFlags: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.SelectionFlags None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.SelectionFlags SelectionIgnore = 1 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.GraphicsInterface.LightAttenuation: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double EndLimit 'get ' : 
    Double StartLimit 'get ' : 
    Boolean UseLimits 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.AttenuationType AttenuationType 'get set' : 
  Methods:
    get_AttenuationType(): PrivateScope, Public, HideBySig, SpecialName
    set_AttenuationType(AttenuationType): PrivateScope, Public, HideBySig, SpecialName
    get_UseLimits(): PrivateScope, Public, HideBySig, SpecialName
    set_UseLimits(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    SetLimits(Double, Double): PrivateScope, Public, HideBySig
    get_StartLimit(): PrivateScope, Public, HideBySig, SpecialName
    get_EndLimit(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Struct Autodesk.AutoCAD.GraphicsInterface.AttenuationType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.AttenuationType None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.AttenuationType InverseLinear = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.AttenuationType InverseSquare = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.GraphicsInterface.SkyParameters: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Saturation 'get set' : 
    Double RedBlueShift 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d SunDirection 'get set' : 
    Autodesk.AutoCAD.Colors.Color NightColor 'get set' : 
    Autodesk.AutoCAD.Colors.Color GroundColor 'get set' : 
    Int16 SolarDiskSamples 'get set' : 
    Double DiskIntensity 'get set' : 
    Double GlowIntensity 'get set' : 
    Double DiskScale 'get set' : 
    Double VisibilityDistance 'get set' : 
    Double HorizonBlur 'get set' : 
    Double HorizonHeight 'get set' : 
    Double Haze 'get set' : 
    Double IntensityFactor 'get set' : 
    Boolean AerialPerspective 'get set' : 
    Boolean Illumination 'get set' : 
  Methods:
    get_Illumination(): PrivateScope, Public, HideBySig, SpecialName
    set_Illumination(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_AerialPerspective(): PrivateScope, Public, HideBySig, SpecialName
    set_AerialPerspective(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IntensityFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_IntensityFactor(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Haze(): PrivateScope, Public, HideBySig, SpecialName
    set_Haze(Double): PrivateScope, Public, HideBySig, SpecialName
    get_HorizonHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizonHeight(Double): PrivateScope, Public, HideBySig, SpecialName
    get_HorizonBlur(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizonBlur(Double): PrivateScope, Public, HideBySig, SpecialName
    get_VisibilityDistance(): PrivateScope, Public, HideBySig, SpecialName
    set_VisibilityDistance(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DiskScale(): PrivateScope, Public, HideBySig, SpecialName
    set_DiskScale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_GlowIntensity(): PrivateScope, Public, HideBySig, SpecialName
    set_GlowIntensity(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DiskIntensity(): PrivateScope, Public, HideBySig, SpecialName
    set_DiskIntensity(Double): PrivateScope, Public, HideBySig, SpecialName
    get_SolarDiskSamples(): PrivateScope, Public, HideBySig, SpecialName
    set_SolarDiskSamples(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_GroundColor(): PrivateScope, Public, HideBySig, SpecialName
    set_GroundColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_NightColor(): PrivateScope, Public, HideBySig, SpecialName
    set_NightColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_SunDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_SunDirection(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_RedBlueShift(): PrivateScope, Public, HideBySig, SpecialName
    set_RedBlueShift(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Saturation(): PrivateScope, Public, HideBySig, SpecialName
    set_Saturation(Double): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Equality(SkyParameters, SkyParameters): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(SkyParameters, SkyParameters): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.GraphicsInterface.ShadowParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double ExtendedLightRadius 'get set' : 
    Double ExtendedLightWidth 'get set' : 
    Double ExtendedLightLength 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.ExtendedLightShape ExtendedLightShape 'get set' : 
    Boolean ShapeVisibility 'get set' : 
    Int16 ShadowSamples 'get set' : 
    Byte ShadowMapSoftness 'get set' : 
    Int16 ShadowMapSize 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.ShadowType ShadowType 'get set' : 
    Boolean ShadowsOn 'get set' : 
  Methods:
    get_ShadowsOn(): PrivateScope, Public, HideBySig, SpecialName
    set_ShadowsOn(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ShadowType(): PrivateScope, Public, HideBySig, SpecialName
    set_ShadowType(ShadowType): PrivateScope, Public, HideBySig, SpecialName
    get_ShadowMapSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ShadowMapSize(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_ShadowMapSoftness(): PrivateScope, Public, HideBySig, SpecialName
    set_ShadowMapSoftness(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_ShadowSamples(): PrivateScope, Public, HideBySig, SpecialName
    set_ShadowSamples(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_ShapeVisibility(): PrivateScope, Public, HideBySig, SpecialName
    set_ShapeVisibility(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ExtendedLightShape(): PrivateScope, Public, HideBySig, SpecialName
    set_ExtendedLightShape(ExtendedLightShape): PrivateScope, Public, HideBySig, SpecialName
    get_ExtendedLightLength(): PrivateScope, Public, HideBySig, SpecialName
    set_ExtendedLightLength(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ExtendedLightWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_ExtendedLightWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ExtendedLightRadius(): PrivateScope, Public, HideBySig, SpecialName
    set_ExtendedLightRadius(Double): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Struct Autodesk.AutoCAD.GraphicsInterface.ShadowType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.ShadowType RayTraced = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ShadowType Maps = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ShadowType Sampled = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.ExtendedLightShape: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.ExtendedLightShape Linear = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ExtendedLightShape Rectangle = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ExtendedLightShape Disk = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ExtendedLightShape Cylinder = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ExtendedLightShape Sphere = 4 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.ExteriorDaylightMode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.ExteriorDaylightMode DaylightOff = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ExteriorDaylightMode DaylightOn = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ExteriorDaylightMode DaylightAuto = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.GraphicsInterface.PhotographicExposureParameters: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.ToneOperatorParameters
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Colors.Color WhiteColor 'get ' : 
    Double WhitePoint 'get set' : 
    Double Exposure 'get set' : 
  Methods:
    get_Exposure(): PrivateScope, Public, HideBySig, SpecialName
    set_Exposure(Double): PrivateScope, Public, HideBySig, SpecialName
    get_WhitePoint(): PrivateScope, Public, HideBySig, SpecialName
    set_WhitePoint(Double): PrivateScope, Public, HideBySig, SpecialName
    get_WhiteColor(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    CopyFrom(RXObject): PrivateScope, Public, Final, Virtual, HideBySig
    op_Equality(PhotographicExposureParameters, PhotographicExposureParameters): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(PhotographicExposureParameters, PhotographicExposureParameters): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.GraphicsInterface.NonEntityTraits: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.DrawableTraits
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.SelectionFlags SelectionFlags 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.Linetype LinePattern 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.Fill Fill 'get set' : 
    Boolean SelectionOnlyGeometry 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.ShadowFlags ShadowFlags 'get set' : 
    Int32 DrawFlags 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId VisualStyle 'get set' : 
    Boolean Sectionable 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.Mapper Mapper 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Material 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.PlotStyleDescriptor PlotStyleDescriptor 'get set' : 
    Double Thickness 'get set' : 
    Double LineTypeScale 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LineWeight LineWeight 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.FillType FillType 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId LineType 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Layer 'get set' : 
    Autodesk.AutoCAD.Colors.Transparency Transparency 'get set' : 
    Autodesk.AutoCAD.Colors.EntityColor TrueColor 'get set' : 
    Int16 Color 'get set' : 
  Methods:
    SetupForEntity(Entity): PrivateScope, Public, Final, Virtual, HideBySig
    SetSelectionMarker(IntPtr): PrivateScope, Public, Final, Virtual, HideBySig
    get_Color(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_Color(Int16): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_TrueColor(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_TrueColor(EntityColor): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Transparency(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_Transparency(Transparency): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Layer(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_Layer(ObjectId): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_LineType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_LineType(ObjectId): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_FillType(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_FillType(FillType): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_LineWeight(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_LineWeight(LineWeight): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_LineTypeScale(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_LineTypeScale(Double): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Thickness(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_Thickness(Double): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_PlotStyleDescriptor(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_PlotStyleDescriptor(PlotStyleDescriptor): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Material(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_Material(ObjectId): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Mapper(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_Mapper(Mapper): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Sectionable(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_Sectionable(Boolean(HasFieldMarshal)): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_VisualStyle(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_VisualStyle(ObjectId): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_DrawFlags(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_DrawFlags(Int32): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_ShadowFlags(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_ShadowFlags(ShadowFlags): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_SelectionOnlyGeometry(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_SelectionOnlyGeometry(Boolean(HasFieldMarshal)): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_Fill(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_Fill(Fill): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    AddLight(ObjectId): PrivateScope, Public, Final, Virtual, HideBySig
    get_LinePattern(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_LinePattern(Linetype): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    get_SelectionFlags(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    set_SelectionFlags(SelectionFlags): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    SetHighlightProperty(HighlightProperty, Object): PrivateScope, Public, Final, Virtual, HideBySig
    GetHighlightProperty(HighlightProperty): PrivateScope, Public, Final, Virtual, HideBySig
Struct Autodesk.AutoCAD.GraphicsInterface.ColorRGB: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Blue 'get set' : 
    Double Green 'get set' : 
    Double Red 'get set' : 
  Methods:
    get_Red(): PrivateScope, Public, HideBySig, SpecialName
    set_Red(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Green(): PrivateScope, Public, HideBySig, SpecialName
    set_Green(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Blue(): PrivateScope, Public, HideBySig, SpecialName
    set_Blue(Double): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.GraphicsInterface.ColorRGBA: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Alpha 'get set' : 
    Double Blue 'get set' : 
    Double Green 'get set' : 
    Double Red 'get set' : 
  Methods:
    get_Red(): PrivateScope, Public, HideBySig, SpecialName
    set_Red(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Green(): PrivateScope, Public, HideBySig, SpecialName
    set_Green(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Blue(): PrivateScope, Public, HideBySig, SpecialName
    set_Blue(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Alpha(): PrivateScope, Public, HideBySig, SpecialName
    set_Alpha(Double): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.GraphicsInterface.WebFileType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.WebFileType TypeC = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.WebFileType TypeB = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.WebFileType TypeA = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.WebSymmetry: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.WebSymmetry NoSymmetry = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.WebSymmetry SingleSymmetry = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.WebSymmetry DoubleSymmetry = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.WebSymmetry AxialSymmetry = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.DefaultLightingType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.DefaultLightingType OneDistantLight = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DefaultLightingType TwoDistantLights = 1 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.GraphicsInterface.MaterialColor: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
    Void .ctor(Autodesk.AutoCAD.GraphicsInterface.Method, Double, Autodesk.AutoCAD.Colors.EntityColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Colors.EntityColor Color 'get ' : 
    Double Factor 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.Method Method 'get ' : 
  Methods:
    get_Method(): PrivateScope, Public, HideBySig, SpecialName
    get_Factor(): PrivateScope, Public, HideBySig, SpecialName
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Struct Autodesk.AutoCAD.GraphicsInterface.Method: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.Method Inherit = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Method Override = 1 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.LayerManager.LayerFilterCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Interfaces:
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    Autodesk.AutoCAD.LayerManager.LayerFilter Item [Int32] 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(LayerFilter): PrivateScope, Public, HideBySig
    Remove(LayerFilter): PrivateScope, Public, HideBySig
    Contains(LayerFilter): PrivateScope, Public, HideBySig
    CopyTo(LayerFilter[], Int32): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.LayerManager.RelationalExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Properties:
    System.String Constant 'get ' : 
    System.String Variable 'get ' : 
  Methods:
    get_Variable(): PrivateScope, Public, HideBySig, SpecialName
    get_Constant(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.LayerManager.AndExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    GetRelationalExpressions(): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.LayerManager.LayerFilterDisplayImages: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(IntPtr, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 SelectedImageIndex 'get ' : 
    Int32 ImageIndex 'get ' : 
    IntPtr ImageListHandle 'get ' : 
  Methods:
    get_ImageListHandle(): PrivateScope, Public, HideBySig, SpecialName
    get_ImageIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_SelectedImageIndex(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.LayerManager.LayerFilter+DialogResult: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DialogResult OK = 0 : Public, Static, Literal, HasDefault
    DialogResult Cancel = 1 : Public, Static, Literal, HasDefault
    DialogResult UseDefault = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.LayerManager.LayerCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Interfaces:
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Item [Int32] 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(ObjectId): PrivateScope, Public, HideBySig
    Remove(ObjectId): PrivateScope, Public, HideBySig
    Contains(ObjectId): PrivateScope, Public, HideBySig
    CopyTo(ObjectId[], Int32): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.LayerManager.LayerGroup: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.LayerManager.LayerFilter
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.LayerManager.LayerCollection LayerIds 'get ' : 
  Methods:
    get_LayerIds(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.DBText: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint Justify 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.TextVerticalMode VerticalMode 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.TextHorizontalMode HorizontalMode 'get set' : 
    Boolean IsMirroredInY 'get set' : 
    Boolean IsMirroredInX 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId TextStyleId 'get set' : 
    System.String TextStyleName 'get ' : 
    System.String TextString 'get set' : 
    Double WidthFactor 'get set' : 
    Double Height 'get set' : 
    Double Rotation 'get set' : 
    Double Oblique 'get set' : 
    Double Thickness 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get set' : 
    Boolean IsDefaultAlignment 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d AlignmentPoint 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Position 'get set' : 
  Methods:
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_AlignmentPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_AlignmentPoint(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_IsDefaultAlignment(): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    set_Normal(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_Thickness(): PrivateScope, Public, HideBySig, SpecialName
    set_Thickness(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Oblique(): PrivateScope, Public, HideBySig, SpecialName
    set_Oblique(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Rotation(): PrivateScope, Public, HideBySig, SpecialName
    set_Rotation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Double): PrivateScope, Public, HideBySig, SpecialName
    get_WidthFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_WidthFactor(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TextString(): PrivateScope, Public, HideBySig, SpecialName
    set_TextString(String): PrivateScope, Public, HideBySig, SpecialName
    get_TextStyleName(): PrivateScope, Public, HideBySig, SpecialName
    get_TextStyleId(): PrivateScope, Public, HideBySig, SpecialName
    set_TextStyleId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_IsMirroredInX(): PrivateScope, Public, HideBySig, SpecialName
    set_IsMirroredInX(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsMirroredInY(): PrivateScope, Public, HideBySig, SpecialName
    set_IsMirroredInY(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HorizontalMode(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalMode(TextHorizontalMode): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalMode(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalMode(TextVerticalMode): PrivateScope, Public, HideBySig, SpecialName
    CorrectSpelling(): PrivateScope, Public, HideBySig
    AdjustAlignment(Database): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ConvertFieldToText(): PrivateScope, Public, HideBySig
    getTextWithFieldCodes(): PrivateScope, Public, HideBySig
    get_Justify(): PrivateScope, Public, HideBySig, SpecialName
    set_Justify(AttachmentPoint): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.TextHorizontalMode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.TextHorizontalMode TextLeft = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TextHorizontalMode TextCenter = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TextHorizontalMode TextRight = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TextHorizontalMode TextAlign = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TextHorizontalMode TextMid = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TextHorizontalMode TextFit = 5 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.TextVerticalMode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.TextVerticalMode TextBase = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TextVerticalMode TextBottom = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TextVerticalMode TextVerticalMid = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TextVerticalMode TextTop = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.AttachmentPoint: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint TopLeft = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint TopCenter = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint TopRight = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint MiddleLeft = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint MiddleCenter = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint MiddleRight = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint BottomLeft = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint BottomCenter = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint BottomRight = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint BaseLeft = 10 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint BaseCenter = 11 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint BaseRight = 12 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint BaseAlign = 13 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint BottomAlign = 14 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint MiddleAlign = 15 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint TopAlign = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint BaseFit = 17 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint BottomFit = 18 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint MiddleFit = 19 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint TopFit = 20 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint BaseMid = 21 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint BottomMid = 22 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint MiddleMid = 23 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint TopMid = 24 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.RasterImageDef: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ImageModified 'get set' : 
    Int32 UndoStoreSize 'get set' : 
    IntPtr FileDescCopy 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Unit ResolutionUnits 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector2d ResolutionMMPerPixel 'get set' : 
    System.String FileType 'get ' : 
    Int32 ColorDepth 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.ImageOrg Organization 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector2d Size 'get ' : 
    Boolean IsLoaded 'get ' : 
    Boolean IsEmbedded 'get ' : 
    System.String SearchForActivePath 'get ' :  (Obsolete)
    System.String ActiveFileName 'get set' : 
    System.String SourceFileName 'get set' : 
  Methods:
    set_SourceFileName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SourceFileName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ActiveFileName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ActiveFileName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SearchForActivePath(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    LocateActivePath(): PrivateScope, Public, HideBySig
    Embed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsEmbedded(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Load(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Unload(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsLoaded(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Organization(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ColorDepth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FileType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEntityCount(Boolean&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UpdateEntities(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_ResolutionMMPerPixel(Vector2d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ResolutionMMPerPixel(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ResolutionUnits(Unit): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ResolutionUnits(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ImageCopy(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_FileDescCopy(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    OpenImage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CloseImage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetImage(IntPtr, IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_UndoStoreSize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_UndoStoreSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ImageModified(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ImageModified(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CreateImageDictionary(Database): PrivateScope, Public, Static, HideBySig
    GetImageDictionary(Database): PrivateScope, Public, Static, HideBySig
    SuggestName(DBDictionary, String): PrivateScope, Public, Static, HideBySig
Struct Autodesk.AutoCAD.GraphicsInterface.ImageOrg: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.ImageOrg Bitonal = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ImageOrg Palette = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ImageOrg Gray = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ImageOrg RGBA = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ImageOrg BGRA = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ImageOrg ARGB = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ImageOrg ABGR = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ImageOrg BGR = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ImageOrg RGB = 8 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.Unit: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.Unit None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Unit Millimeter = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Unit Centimeter = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Unit Meter = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Unit Kilometer = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Unit Inch = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Unit Foot = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Unit Yard = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Unit Mile = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Unit Microinches = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Unit Mils = 10 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Unit Angstroms = 11 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Unit Nanometers = 12 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Unit Microns = 13 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Unit Decimeters = 14 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Unit Dekameters = 15 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Unit Hectometers = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Unit GigaMeters = 17 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Unit Astronomical = 18 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Unit LightYears = 19 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Unit Parsecs = 20 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.RasterVariables: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.Unit UserScale 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ImageQuality ImageQuality 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.FrameSetting ImageFrame 'get set' : 
  Methods:
    get_ImageFrame(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ImageFrame(FrameSetting): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ImageQuality(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ImageQuality(ImageQuality): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_UserScale(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_UserScale(Unit): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.FrameSetting: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.FrameSetting ImageFrameInvalid = -1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FrameSetting ImageFrameOff = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FrameSetting ImageFrameAbove = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FrameSetting ImageFrameBelow = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FrameSetting ImageFrameOnNoPlot = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.ImageQuality: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.ImageQuality Invalid = -1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ImageQuality Draft = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ImageQuality High = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilterVolume: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Vector2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Vector2d ViewField 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d UpDirection 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d ToPoint 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d FromPoint 'get ' : 
  Methods:
    get_FromPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_ToPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_UpDirection(): PrivateScope, Public, HideBySig, SpecialName
    get_ViewField(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.Filters.SpatialFilterDefinition: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2dCollection, Autodesk.AutoCAD.Geometry.Vector3d, Double, Double, Double, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Enabled 'get ' : 
    Double BackClip 'get ' : 
    Double FrontClip 'get ' : 
    Double Elevation 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get ' : 
  Methods:
    GetPoints(): PrivateScope, Public, HideBySig
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    get_Elevation(): PrivateScope, Public, HideBySig, SpecialName
    get_FrontClip(): PrivateScope, Public, HideBySig, SpecialName
    get_BackClip(): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.StandardScaleType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType ScaleToFit = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType CustomScale = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale1To1 = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale1To2 = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale1To4 = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale1To5 = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale1To8 = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale1To10 = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale1To16 = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale1To20 = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale1To30 = 10 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale1To40 = 11 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale1To50 = 12 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale1To100 = 13 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale2To1 = 14 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale4To1 = 15 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale8To1 = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale10To1 = 17 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale100To1 = 18 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale1To128inAnd1ft = 19 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale1To64inchAnd1ft = 20 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale1To32inchAnd1ft = 21 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale1To16inchAnd1ft = 22 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale3To32inchAnd1ft = 23 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale1To8inchAnd1ft = 24 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale3To16inchAnd1ft = 25 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale1To4inchAnd1ft = 26 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale3To8inchAnd1ft = 27 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale1To2inchAnd1ft = 28 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale3To4inchAnd1ft = 29 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale1inAnd1ft = 30 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale3inAnd1ft = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale6inAnd1ft = 33 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.StandardScaleType Scale1ftAnd1ft = 34 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.ShadePlotType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.ShadePlotType AsDisplayed = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ShadePlotType Wireframe = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ShadePlotType Hidden = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ShadePlotType Rendered = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ShadePlotType VisualStyle = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ShadePlotType RenderPreset = 5 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.Curve: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
  Properties:
    Double Area 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Spline Spline 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d EndPoint 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d StartPoint 'get set' : 
    Double EndParam 'get ' : 
    Double StartParam 'get ' : 
    Boolean IsPeriodic 'get ' : 
    Boolean Closed 'get ' : 
  Methods:
    get_Closed(): PrivateScope, Public, HideBySig, SpecialName
    get_IsPeriodic(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_StartParam(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EndParam(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_StartPoint(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_StartPoint(Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EndPoint(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_EndPoint(Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetPointAtParameter(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetParameterAtPoint(Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDistanceAtParameter(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetParameterAtDistance(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetDistAtPoint(Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetPointAtDist(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFirstDerivative(Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetFirstDerivative(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSecondDerivative(Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSecondDerivative(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetClosestPointTo(Point3d, Vector3d, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetClosestPointTo(Point3d, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetOrthoProjectedCurve(Plane): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetProjectedCurve(Plane, Vector3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetOffsetCurves(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetOffsetCurvesGivenPlaneNormal(Vector3d, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Spline(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetSplitCurves(Point3dCollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSplitCurves(DoubleCollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Extend(Boolean(HasFieldMarshal), Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Extend(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Area(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ReverseCurve(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetGeCurve(): PrivateScope, Public, HideBySig
    GetGeCurve(Tolerance): PrivateScope, Public, HideBySig
    CreateFromGeCurve(Curve3d): PrivateScope, Public, Static, HideBySig
    CreateFromGeCurve(Curve3d, Tolerance): PrivateScope, Public, Static, HideBySig
    CreateFromGeCurve(Curve3d, Vector3d): PrivateScope, Public, Static, HideBySig
    CreateFromGeCurve(Curve3d, Vector3d, Tolerance): PrivateScope, Public, Static, HideBySig
    SetFromGeCurve(Curve3d): PrivateScope, Public, HideBySig
    SetFromGeCurve(Curve3d, Tolerance): PrivateScope, Public, HideBySig
    SetFromGeCurve(Curve3d, Vector3d): PrivateScope, Public, HideBySig
    SetFromGeCurve(Curve3d, Vector3d, Tolerance): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.Spline: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Curve
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3dCollection, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.KnotParameterizationEnum, Int32, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3dCollection, Boolean, Autodesk.AutoCAD.Geometry.KnotParameterizationEnum, Int32, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3dCollection, Autodesk.AutoCAD.Geometry.KnotParameterizationEnum, Int32, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Vector3d, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Boolean, Boolean, Boolean, Autodesk.AutoCAD.Geometry.Point3dCollection, Autodesk.AutoCAD.Geometry.DoubleCollection, Autodesk.AutoCAD.Geometry.DoubleCollection, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3dCollection, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Vector3d, Int32, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3dCollection, Int32, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.SplineType Type 'get set' : 
    Boolean IsPlanar 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.NurbsData NurbsData 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.FitData FitData 'get set' : 
    Boolean HasFitData 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d EndFitTangent 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d StartFitTangent 'get ' : 
    Double FitTolerance 'get set' : 
    Int32 NumFitPoints 'get ' : 
    Int32 NumControlPoints 'get ' : 
    Int32 Degree 'get ' : 
    Boolean IsRational 'get ' : 
    Boolean IsNull 'get ' : 
  Methods:
    get_IsNull(): PrivateScope, Public, HideBySig, SpecialName
    get_IsRational(): PrivateScope, Public, HideBySig, SpecialName
    get_Degree(): PrivateScope, Public, HideBySig, SpecialName
    ElevateDegree(Int32): PrivateScope, Public, HideBySig
    get_NumControlPoints(): PrivateScope, Public, HideBySig, SpecialName
    GetControlPointAt(Int32): PrivateScope, Public, HideBySig
    SetControlPointAt(Int32, Point3d): PrivateScope, Public, HideBySig
    get_NumFitPoints(): PrivateScope, Public, HideBySig, SpecialName
    GetFitPointAt(Int32): PrivateScope, Public, HideBySig
    SetFitPointAt(Int32, Point3d): PrivateScope, Public, HideBySig
    InsertFitPointAt(Int32, Point3d): PrivateScope, Public, HideBySig
    RemoveFitPointAt(Int32): PrivateScope, Public, HideBySig
    get_FitTolerance(): PrivateScope, Public, HideBySig, SpecialName
    set_FitTolerance(Double): PrivateScope, Public, HideBySig, SpecialName
    get_StartFitTangent(): PrivateScope, Public, HideBySig, SpecialName
    get_EndFitTangent(): PrivateScope, Public, HideBySig, SpecialName
    get_HasFitData(): PrivateScope, Public, HideBySig, SpecialName
    get_FitData(): PrivateScope, Public, HideBySig, SpecialName
    set_FitData(FitData): PrivateScope, Public, HideBySig, SpecialName
    PurgeFitData(): PrivateScope, Public, HideBySig
    UpdateFitData(): PrivateScope, Public, HideBySig
    get_NurbsData(): PrivateScope, Public, HideBySig, SpecialName
    set_NurbsData(NurbsData): PrivateScope, Public, HideBySig, SpecialName
    WeightAt(Int32): PrivateScope, Public, HideBySig
    SetWeightAt(Int32, Double): PrivateScope, Public, HideBySig
    InsertKnot(Double): PrivateScope, Public, HideBySig
    get_IsPlanar(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    ToPolyline(UInt32, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ToPolyline(Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ToPolyline(UInt32): PrivateScope, Public, HideBySig
    ToPolyline(): PrivateScope, Public, HideBySig
    ToPolylineWithPrecision(Int32, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ToPolylineWithPrecision(Int32): PrivateScope, Public, HideBySig
    InsertControlPointAt(Double, Point3d, Double): PrivateScope, Public, HideBySig
    RemoveControlPointAt(Int32): PrivateScope, Public, HideBySig
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(SplineType): PrivateScope, Public, HideBySig, SpecialName
    Rebuild(Int32, Int32): PrivateScope, Public, HideBySig
    ModifyPositionAndTangent(Double, Point3d, Vector3d): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.Ray: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Curve
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d SecondPoint 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d UnitDir 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d BasePoint 'get set' : 
  Methods:
    get_BasePoint(): PrivateScope, Public, HideBySig, SpecialName
    set_BasePoint(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_UnitDir(): PrivateScope, Public, HideBySig, SpecialName
    set_UnitDir(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_SecondPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_SecondPoint(Point3d): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.Line: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Curve
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Length 'get ' : 
    Double Angle 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Delta 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get set' : 
    Double Thickness 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d EndPoint 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d StartPoint 'get set' : 
  Methods:
    get_StartPoint(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_StartPoint(Point3d): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_EndPoint(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_EndPoint(Point3d): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Thickness(): PrivateScope, Public, HideBySig, SpecialName
    set_Thickness(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    set_Normal(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_Delta(): PrivateScope, Public, HideBySig, SpecialName
    get_Angle(): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.Circle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Curve
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Vector3d, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Diameter 'get set' : 
    Double Circumference 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get set' : 
    Double Thickness 'get set' : 
    Double Radius 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Center 'get set' : 
  Methods:
    get_Center(): PrivateScope, Public, HideBySig, SpecialName
    set_Center(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_Radius(): PrivateScope, Public, HideBySig, SpecialName
    set_Radius(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Thickness(): PrivateScope, Public, HideBySig, SpecialName
    set_Thickness(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    set_Normal(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_Circumference(): PrivateScope, Public, HideBySig, SpecialName
    set_Circumference(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Diameter(): PrivateScope, Public, HideBySig, SpecialName
    set_Diameter(Double): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.Dimension: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
  Properties:
    Double Dimaltmzf 'get set' : 
    Double Dimmzf 'get set' : 
    System.String Dimaltmzs 'get set' : 
    System.String Dimmzs 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Dimblk2 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Dimblk1 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Dimblk 'get set' : 
    System.String Dimpost 'get set' : 
    System.String Dimapost 'get set' : 
    Int32 Dimzin 'get set' : 
    Boolean Dimupt 'get set' : 
    Int32 Dimtzin 'get set' : 
    Boolean Dimtxtdirection 'get set' : 
    Double Dimtxt 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId TextStyleId 'get set' : 
    Double Dimtvp 'get set' : 
    Double Dimtsz 'get set' : 
    Double Dimtp 'get set' : 
    Int32 Dimtolj 'get set' : 
    Boolean Dimtol 'get set' : 
    Boolean Dimtoh 'get set' : 
    Boolean Dimtofl 'get set' : 
    Int32 Dimtmove 'get set' : 
    Double Dimtm 'get set' : 
    Boolean Dimtix 'get set' : 
    Boolean Dimtih 'get set' : 
    Autodesk.AutoCAD.Colors.Color Dimtfillclr 'get set' : 
    Int32 Dimtfill 'get set' : 
    Double Dimtfac 'get set' : 
    Int32 Dimtdec 'get set' : 
    Int32 Dimtad 'get set' : 
    Boolean Dimsoxd 'get set' : 
    Boolean Dimse2 'get set' : 
    Boolean Dimse1 'get set' : 
    Boolean Dimsd2 'get set' : 
    Boolean Dimsd1 'get set' : 
    Double Dimscale 'get set' : 
    Boolean Dimsah 'get set' : 
    Double Dimrnd 'get set' : 
    System.String DimensionStyleName 'get set' : 
    Double CenterMarkSize 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.DimensionCenterMarkType CenterMarkType 'get ' : 
    Boolean ToleranceSuppressZeroInches 'get set' : 
    Boolean ToleranceSuppressZeroFeet 'get set' : 
    Boolean ToleranceSuppressTrailingZeros 'get set' : 
    Boolean ToleranceSuppressLeadingZeros 'get set' : 
    Boolean AltToleranceSuppressZeroInches 'get set' : 
    Boolean AltToleranceSuppressZeroFeet 'get set' : 
    Boolean AltToleranceSuppressTrailingZeros 'get set' : 
    Boolean AltToleranceSuppressLeadingZeros 'get set' : 
    Boolean AltSuppressZeroInches 'get set' : 
    Boolean AltSuppressZeroFeet 'get set' : 
    Boolean AltSuppressTrailingZeros 'get set' : 
    Boolean AltSuppressLeadingZeros 'get set' : 
    System.String AlternateSuffix 'get set' : 
    System.String AlternatePrefix 'get set' : 
    Boolean SuppressZeroInches 'get set' : 
    Boolean SuppressZeroFeet 'get set' : 
    Boolean SuppressTrailingZeros 'get set' : 
    Boolean SuppressLeadingZeros 'get set' : 
    Boolean SuppressAngularTrailingZeros 'get set' : 
    Boolean SuppressAngularLeadingZeros 'get set' : 
    System.String Suffix 'get set' : 
    System.String Prefix 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LineWeight Dimlwe 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LineWeight Dimlwd 'get set' : 
    Int32 Dimlunit 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Dimltype 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Dimltex2 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Dimltex1 'get set' : 
    Boolean Dimlim 'get set' : 
    Double Dimlfac 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Dimldrblk 'get set' : 
    Int32 Dimjust 'get set' : 
    Double Dimjogang 'get set' : 
    Double Dimgap 'get set' : 
    Double Dimfxlen 'get set' : 
    Boolean DimfxlenOn 'get set' : 
    Int32 Dimfrac 'get set' : 
    Double Dimexo 'get set' : 
    Double Dimexe 'get set' : 
    Char Dimdsep 'get set' : 
    Double Dimdli 'get set' : 
    Double Dimdle 'get set' : 
    Int32 Dimdec 'get set' : 
    Autodesk.AutoCAD.Colors.Color Dimclrt 'get set' : 
    Autodesk.AutoCAD.Colors.Color Dimclre 'get set' : 
    Autodesk.AutoCAD.Colors.Color Dimclrd 'get set' : 
    Double Dimcen 'get set' : 
    Int32 Dimazin 'get set' : 
    Int32 Dimaunit 'get set' : 
    Int32 Dimatfit 'get set' : 
    Double Dimasz 'get set' : 
    Int32 Dimarcsym 'get set' : 
    Int32 Dimaltz 'get set' : 
    Int32 Dimaltu 'get set' : 
    Int32 Dimalttz 'get set' : 
    Int32 Dimalttd 'get set' : 
    Double Dimaltrnd 'get set' : 
    Double Dimaltf 'get set' : 
    Int32 Dimaltd 'get set' : 
    Boolean Dimalt 'get set' : 
    Int32 Dimadec 'get set' : 
    Boolean DynamicDimension 'get set' : 
    Double Measurement 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d DimBlockPosition 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId DimBlockId 'get set' : 
    Double HorizontalRotation 'get set' : 
    Double TextLineSpacingFactor 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LineSpacingStyle TextLineSpacingStyle 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint TextAttachment 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId DimensionStyle 'get set' : 
    Double TextRotation 'get set' : 
    System.String DimensionText 'get set' : 
    Double Elevation 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get set' : 
    Boolean UsingDefaultTextPosition 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d TextPosition 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector2d TextDefinedSize 'get set' : 
  Methods:
    set_Dimblk1(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimblk2(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimblk2(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimmzs(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimmzs(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimaltmzs(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimaltmzs(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimmzf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimmzf(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimaltmzf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimaltmzf(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimltex1(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimltex1(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimltex2(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimltex2(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimltype(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimltype(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimlunit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimlunit(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimlwd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimlwd(LineWeight): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimlwe(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimlwe(LineWeight): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Prefix(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Prefix(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Suffix(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Suffix(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SuppressAngularLeadingZeros(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SuppressAngularLeadingZeros(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SuppressAngularTrailingZeros(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SuppressAngularTrailingZeros(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SuppressLeadingZeros(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SuppressLeadingZeros(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SuppressTrailingZeros(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SuppressTrailingZeros(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SuppressZeroFeet(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SuppressZeroFeet(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SuppressZeroInches(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SuppressZeroInches(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AlternatePrefix(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AlternatePrefix(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AlternateSuffix(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AlternateSuffix(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AltSuppressLeadingZeros(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AltSuppressLeadingZeros(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AltSuppressTrailingZeros(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AltSuppressTrailingZeros(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AltSuppressZeroFeet(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AltSuppressZeroFeet(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AltSuppressZeroInches(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AltSuppressZeroInches(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AltToleranceSuppressLeadingZeros(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AltToleranceSuppressLeadingZeros(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AltToleranceSuppressTrailingZeros(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AltToleranceSuppressTrailingZeros(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AltToleranceSuppressZeroFeet(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AltToleranceSuppressZeroFeet(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AltToleranceSuppressZeroInches(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AltToleranceSuppressZeroInches(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ToleranceSuppressLeadingZeros(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ToleranceSuppressLeadingZeros(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ToleranceSuppressTrailingZeros(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ToleranceSuppressTrailingZeros(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ToleranceSuppressZeroFeet(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ToleranceSuppressZeroFeet(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ToleranceSuppressZeroInches(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ToleranceSuppressZeroInches(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CenterMarkType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CenterMarkSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DimensionStyleName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DimensionStyleName(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimrnd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimrnd(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimsah(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimsah(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimscale(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimscale(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimsd1(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimsd1(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimsd2(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimsd2(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimse1(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimse1(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimse2(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimse2(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimsoxd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimsoxd(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtad(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtad(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtdec(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtdec(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtfac(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtfac(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtfill(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtfill(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtfillclr(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtfillclr(Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtih(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtih(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtix(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtix(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtm(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtm(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtmove(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtmove(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtofl(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtofl(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtoh(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtoh(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtol(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtol(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtolj(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtolj(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtp(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtp(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtsz(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtsz(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtvp(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtvp(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TextStyleId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TextStyleId(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtxt(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtxt(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtxtdirection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtxtdirection(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtzin(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtzin(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimupt(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimupt(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimzin(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimzin(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimapost(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimapost(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimpost(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimpost(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimblk(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimblk(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimblk1(): PrivateScope, Public, HideBySig, SpecialName
    ResetTextDefinedSize(): PrivateScope, Public, HideBySig
    get_TextDefinedSize(): PrivateScope, Public, HideBySig, SpecialName
    set_TextDefinedSize(Vector2d): PrivateScope, Public, HideBySig, SpecialName
    get_TextPosition(): PrivateScope, Public, HideBySig, SpecialName
    set_TextPosition(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_UsingDefaultTextPosition(): PrivateScope, Public, HideBySig, SpecialName
    set_UsingDefaultTextPosition(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    set_Normal(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_Elevation(): PrivateScope, Public, HideBySig, SpecialName
    set_Elevation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DimensionText(): PrivateScope, Public, HideBySig, SpecialName
    set_DimensionText(String): PrivateScope, Public, HideBySig, SpecialName
    get_TextRotation(): PrivateScope, Public, HideBySig, SpecialName
    set_TextRotation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DimensionStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_DimensionStyle(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_TextAttachment(): PrivateScope, Public, HideBySig, SpecialName
    set_TextAttachment(AttachmentPoint): PrivateScope, Public, HideBySig, SpecialName
    get_TextLineSpacingStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_TextLineSpacingStyle(LineSpacingStyle): PrivateScope, Public, HideBySig, SpecialName
    get_TextLineSpacingFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_TextLineSpacingFactor(Double): PrivateScope, Public, HideBySig, SpecialName
    SetDimstyleData(DimStyleTableRecord): PrivateScope, Public, HideBySig
    GetDimstyleData(): PrivateScope, Public, HideBySig
    get_HorizontalRotation(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalRotation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DimBlockId(): PrivateScope, Public, HideBySig, SpecialName
    set_DimBlockId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_DimBlockPosition(): PrivateScope, Public, HideBySig, SpecialName
    RecomputeDimensionBlock(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GenerateLayout(): PrivateScope, Public, HideBySig
    get_Measurement(): PrivateScope, Public, HideBySig, SpecialName
    RemoveTextField(): PrivateScope, Public, HideBySig
    FieldToMText(MText): PrivateScope, Public, HideBySig
    FieldFromMText(MText): PrivateScope, Public, HideBySig
    FormatMeasurement(Double, String): PrivateScope, Public, HideBySig
    get_DynamicDimension(): PrivateScope, Public, HideBySig, SpecialName
    set_DynamicDimension(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Dimadec(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimadec(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimalt(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimalt(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimaltd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimaltd(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimaltf(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimaltf(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimaltrnd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimaltrnd(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimalttd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimalttd(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimalttz(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimalttz(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimaltu(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimaltu(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimaltz(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimaltz(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimarcsym(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimarcsym(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimasz(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimasz(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimatfit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimatfit(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimaunit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimaunit(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimazin(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimazin(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimcen(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimcen(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimclrd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimclrd(Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimclre(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimclre(Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimclrt(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimclrt(Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimdec(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimdec(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimdle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimdle(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimdli(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimdli(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimdsep(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimdsep(Char(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimexe(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimexe(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimexo(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimexo(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimfrac(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimfrac(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DimfxlenOn(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DimfxlenOn(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimfxlen(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimfxlen(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimgap(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimgap(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimjogang(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimjogang(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimjust(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimjust(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimldrblk(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimldrblk(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimlfac(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimlfac(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimlim(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimlim(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.LineSpacingStyle: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.LineSpacingStyle AtLeast = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LineSpacingStyle Exactly = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.MText: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Height 'get set' : 
    Boolean ColumnFlowReversed 'get set' : 
    Double ColumnGutterWidth 'get set' : 
    Double ColumnWidth 'get set' : 
    Boolean ColumnAutoHeight 'get set' : 
    Int32 ColumnCount 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ColumnType ColumnType 'get set' : 
    Double LineSpaceDistance 'get set' : 
    Boolean ShowBorders 'get set' : 
    Boolean UseBackgroundColor 'get set' : 
    Autodesk.AutoCAD.Colors.Transparency BackgroundTransparency 'get set' : 
    Double BackgroundScaleFactor 'get set' : 
    Autodesk.AutoCAD.Colors.Color BackgroundFillColor 'get set' : 
    Boolean BackgroundFill 'get set' : 
    Double LineSpacingFactor 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LineSpacingStyle LineSpacingStyle 'get set' : 
    System.String BlockEnd 'get ' : 
    System.String BlockBegin 'get ' : 
    System.String AlignChange 'get ' : 
    System.String StackStart 'get ' : 
    System.String ParagraphBreak 'get ' : 
    System.String LineBreak 'get ' : 
    System.String TrackChange 'get ' : 
    System.String ObliqueChange 'get ' : 
    System.String WidthChange 'get ' : 
    System.String HeightChange 'get ' : 
    System.String FontChange 'get ' : 
    System.String ColorChange 'get ' : 
    System.String StrikethroughOff 'get ' : 
    System.String StrikethroughOn 'get ' : 
    System.String UnderlineOff 'get ' : 
    System.String UnderlineOn 'get ' : 
    System.String OverlineOff 'get ' : 
    System.String OverlineOn 'get ' : 
    System.String NonBreakSpace 'get ' : 
    Double ActualWidth 'get ' : 
    Double ActualHeight 'get ' : 
    System.String Text 'get ' : 
    System.String ContentsRTF 'get set' : 
    System.String Contents 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.FlowDirection FlowDirection 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint Attachment 'get set' : 
    Double TextHeight 'get set' : 
    System.String TextStyleName 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId TextStyleId 'get set' : 
    Double Descent 'get ' : 
    Double Ascent 'get ' : 
    Double Width 'get set' : 
    Double Rotation 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d Direction 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Location 'get set' : 
  Methods:
    get_ColumnWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_ColumnWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ColumnGutterWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_ColumnGutterWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ColumnFlowReversed(): PrivateScope, Public, HideBySig, SpecialName
    set_ColumnFlowReversed(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    SetColumnHeight(Int32, Double): PrivateScope, Public, HideBySig
    GetColumnHeight(Int32): PrivateScope, Public, HideBySig
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    set_Normal(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_Direction(): PrivateScope, Public, HideBySig, SpecialName
    set_Direction(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_Rotation(): PrivateScope, Public, HideBySig, SpecialName
    set_Rotation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Width(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Ascent(): PrivateScope, Public, HideBySig, SpecialName
    get_Descent(): PrivateScope, Public, HideBySig, SpecialName
    get_TextStyleId(): PrivateScope, Public, HideBySig, SpecialName
    set_TextStyleId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_TextStyleName(): PrivateScope, Public, HideBySig, SpecialName
    get_TextHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_TextHeight(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Attachment(): PrivateScope, Public, HideBySig, SpecialName
    set_Attachment(AttachmentPoint): PrivateScope, Public, HideBySig, SpecialName
    SetAttachmentMovingLocation(AttachmentPoint): PrivateScope, Public, HideBySig
    get_FlowDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_FlowDirection(FlowDirection): PrivateScope, Public, HideBySig, SpecialName
    get_Contents(): PrivateScope, Public, HideBySig, SpecialName
    set_Contents(String): PrivateScope, Public, HideBySig, SpecialName
    get_ContentsRTF(): PrivateScope, Public, HideBySig, SpecialName
    set_ContentsRTF(String): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    SetContentsRtf(String): PrivateScope, Public, HideBySig
    get_ActualHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_ActualWidth(): PrivateScope, Public, HideBySig, SpecialName
    CorrectSpelling(): PrivateScope, Public, HideBySig
    GetBoundingPoints(): PrivateScope, Public, HideBySig
    ExplodeFragments(MTextFragmentCallback): PrivateScope, Public, HideBySig
    ExplodeFragments(MTextFragmentCallback, Object): PrivateScope, Public, HideBySig
    ExplodeFragments(MTextFragmentCallback, Object, WorldDraw): PrivateScope, Public, HideBySig
    ConvertFieldToText(): PrivateScope, Public, HideBySig
    getMTextWithFieldCodes(): PrivateScope, Public, HideBySig
    get_NonBreakSpace(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OverlineOn(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OverlineOff(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnderlineOn(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_UnderlineOff(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_StrikethroughOn(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_StrikethroughOff(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ColorChange(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FontChange(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_HeightChange(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_WidthChange(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ObliqueChange(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TrackChange(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LineBreak(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ParagraphBreak(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_StackStart(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_AlignChange(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_BlockBegin(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_BlockEnd(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LineSpacingStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_LineSpacingStyle(LineSpacingStyle): PrivateScope, Public, HideBySig, SpecialName
    get_LineSpacingFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_LineSpacingFactor(Double): PrivateScope, Public, HideBySig, SpecialName
    get_BackgroundFill(): PrivateScope, Public, HideBySig, SpecialName
    set_BackgroundFill(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_BackgroundFillColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BackgroundFillColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BackgroundScaleFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_BackgroundScaleFactor(Double): PrivateScope, Public, HideBySig, SpecialName
    get_BackgroundTransparency(): PrivateScope, Public, HideBySig, SpecialName
    set_BackgroundTransparency(Transparency): PrivateScope, Public, HideBySig, SpecialName
    get_UseBackgroundColor(): PrivateScope, Public, HideBySig, SpecialName
    set_UseBackgroundColor(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ShowBorders(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowBorders(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_LineSpaceDistance(): PrivateScope, Public, HideBySig, SpecialName
    set_LineSpaceDistance(Double): PrivateScope, Public, HideBySig, SpecialName
    SetDynamicColumns(Double, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetStaticColumns(Double, Double, Int32): PrivateScope, Public, HideBySig
    get_ColumnType(): PrivateScope, Public, HideBySig, SpecialName
    set_ColumnType(ColumnType): PrivateScope, Public, HideBySig, SpecialName
    get_ColumnCount(): PrivateScope, Public, HideBySig, SpecialName
    set_ColumnCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ColumnAutoHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_ColumnAutoHeight(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.DimensionCenterMarkType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.DimensionCenterMarkType Mark = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DimensionCenterMarkType Line = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DimensionCenterMarkType None = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.RadialDimension: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Dimension
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Double, System.String, Autodesk.AutoCAD.DatabaseServices.ObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d ChordPoint 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Center 'get set' : 
    Double LeaderLength 'get set' : 
  Methods:
    get_LeaderLength(): PrivateScope, Public, HideBySig, SpecialName
    set_LeaderLength(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Center(): PrivateScope, Public, HideBySig, SpecialName
    set_Center(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_ChordPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_ChordPoint(Point3d): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.OrdinateDimension: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Dimension
    Void .ctor(Boolean, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, System.String, Autodesk.AutoCAD.DatabaseServices.ObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d LeaderEndPoint 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d DefiningPoint 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Origin 'get set' : 
    Boolean UsingXAxis 'get set' : 
    Boolean UsingYAxis 'get ' : 
  Methods:
    get_UsingYAxis(): PrivateScope, Public, HideBySig, SpecialName
    get_UsingXAxis(): PrivateScope, Public, HideBySig, SpecialName
    set_UsingXAxis(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    set_Origin(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_DefiningPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_DefiningPoint(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_LeaderEndPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_LeaderEndPoint(Point3d): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.RotatedDimension: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Dimension
    Void .ctor(Double, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, System.String, Autodesk.AutoCAD.DatabaseServices.ObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Rotation 'get set' : 
    Double Oblique 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d DimLinePoint 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d XLine2Point 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d XLine1Point 'get set' : 
  Methods:
    get_XLine1Point(): PrivateScope, Public, HideBySig, SpecialName
    set_XLine1Point(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_XLine2Point(): PrivateScope, Public, HideBySig, SpecialName
    set_XLine2Point(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_DimLinePoint(): PrivateScope, Public, HideBySig, SpecialName
    set_DimLinePoint(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_Oblique(): PrivateScope, Public, HideBySig, SpecialName
    set_Oblique(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Rotation(): PrivateScope, Public, HideBySig, SpecialName
    set_Rotation(Double): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.Point3AngularDimension: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Dimension
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, System.String, Autodesk.AutoCAD.DatabaseServices.ObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d CenterPoint 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d XLine2Point 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d XLine1Point 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d ArcPoint 'get set' : 
  Methods:
    get_ArcPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_ArcPoint(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_XLine1Point(): PrivateScope, Public, HideBySig, SpecialName
    set_XLine1Point(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_XLine2Point(): PrivateScope, Public, HideBySig, SpecialName
    set_XLine2Point(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_CenterPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_CenterPoint(Point3d): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.Polyline3d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Curve
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.Poly3dType, Autodesk.AutoCAD.Geometry.Point3dCollection, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerable
  Properties:
    Double Length 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Poly3dType PolyType 'get set' : 
    Boolean Closed 'get set' : 
  Methods:
    get_Closed(): PrivateScope, Public, HideBySig, SpecialName
    set_Closed(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_PolyType(): PrivateScope, Public, HideBySig, SpecialName
    set_PolyType(Poly3dType): PrivateScope, Public, HideBySig, SpecialName
    ConvertToPolyType(Poly3dType): PrivateScope, Public, HideBySig
    Straighten(): PrivateScope, Public, HideBySig
    SplineFit(Poly3dType, Int32): PrivateScope, Public, HideBySig
    SplineFit(): PrivateScope, Public, HideBySig
    AppendVertex(PolylineVertex3d): PrivateScope, Public, HideBySig
    InsertVertexAt(ObjectId, PolylineVertex3d): PrivateScope, Public, HideBySig
    InsertVertexAt(PolylineVertex3d, PolylineVertex3d): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.Poly3dType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.Poly3dType SimplePoly = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Poly3dType QuadSplinePoly = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Poly3dType CubicSplinePoly = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.PolylineVertex3d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Vertex
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d Position 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.Vertex3dType VertexType 'get ' : 
  Methods:
    get_VertexType(): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Point3d): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.LineAngularDimension2: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Dimension
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, System.String, Autodesk.AutoCAD.DatabaseServices.ObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d XLine2End 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d XLine2Start 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d XLine1End 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d XLine1Start 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d ArcPoint 'get set' : 
  Methods:
    get_ArcPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_ArcPoint(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_XLine1Start(): PrivateScope, Public, HideBySig, SpecialName
    set_XLine1Start(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_XLine1End(): PrivateScope, Public, HideBySig, SpecialName
    set_XLine1End(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_XLine2Start(): PrivateScope, Public, HideBySig, SpecialName
    set_XLine2Start(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_XLine2End(): PrivateScope, Public, HideBySig, SpecialName
    set_XLine2End(Point3d): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.Polyline2d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Curve
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.Poly2dType, Autodesk.AutoCAD.Geometry.Point3dCollection, Double, Boolean, Double, Double, Autodesk.AutoCAD.Geometry.DoubleCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerable
  Properties:
    Double Length 'get ' : 
    Double ConstantWidth 'get set' : 
    Boolean LinetypeGenerationOn 'get set' : 
    Double Elevation 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get set' : 
    Double Thickness 'get set' : 
    Double DefaultEndWidth 'get set' : 
    Double DefaultStartWidth 'get set' : 
    Boolean Closed 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.Poly2dType PolyType 'get set' : 
  Methods:
    get_PolyType(): PrivateScope, Public, HideBySig, SpecialName
    set_PolyType(Poly2dType): PrivateScope, Public, HideBySig, SpecialName
    ConvertToPolyType(Poly2dType): PrivateScope, Public, HideBySig
    get_Closed(): PrivateScope, Public, HideBySig, SpecialName
    set_Closed(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultStartWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultStartWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultEndWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultEndWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Thickness(): PrivateScope, Public, HideBySig, SpecialName
    set_Thickness(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    set_Normal(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_Elevation(): PrivateScope, Public, HideBySig, SpecialName
    set_Elevation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LinetypeGenerationOn(): PrivateScope, Public, HideBySig, SpecialName
    set_LinetypeGenerationOn(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    Straighten(): PrivateScope, Public, HideBySig
    SplineFit(Poly2dType, Int32): PrivateScope, Public, HideBySig
    SplineFit(): PrivateScope, Public, HideBySig
    CurveFit(): PrivateScope, Public, HideBySig
    NonDBAppendVertex(Vertex2d): PrivateScope, Public, HideBySig
    AppendVertex(Vertex2d): PrivateScope, Public, HideBySig
    InsertVertexAt(ObjectId, Vertex2d): PrivateScope, Public, HideBySig
    InsertVertexAt(Vertex2d, Vertex2d): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    VertexPosition(Vertex2d): PrivateScope, Public, HideBySig
    get_ConstantWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_ConstantWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.Poly2dType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.Poly2dType SimplePoly = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Poly2dType FitCurvePoly = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Poly2dType QuadSplinePoly = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Poly2dType CubicSplinePoly = 3 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.Vertex2d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Vertex
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Tangent 'get set' : 
    Boolean TangentUsed 'get set' : 
    Double Bulge 'get set' : 
    Double EndWidth 'get set' : 
    Double StartWidth 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Position 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.Vertex2dType VertexType 'get ' : 
  Methods:
    get_VertexType(): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_StartWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_StartWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_EndWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_EndWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Bulge(): PrivateScope, Public, HideBySig, SpecialName
    set_Bulge(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TangentUsed(): PrivateScope, Public, HideBySig, SpecialName
    set_TangentUsed(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Tangent(): PrivateScope, Public, HideBySig, SpecialName
    set_Tangent(Double): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.Vertex: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
Struct Autodesk.AutoCAD.DatabaseServices.Vertex2dType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.Vertex2dType SimpleVertex = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Vertex2dType SplineControlVertex = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Vertex2dType SplineFitVertex = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Vertex2dType CurveFitVertex = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.Vertex3dType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.Vertex3dType SimpleVertex = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Vertex3dType ControlVertex = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Vertex3dType FitVertex = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.SurfaceSliceResults: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.Surface, Autodesk.AutoCAD.DatabaseServices.Surface): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.Surface NewSurface 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.Surface NegativeHalfSurface 'get set' : 
  Methods:
    get_NegativeHalfSurface(): PrivateScope, Public, HideBySig, SpecialName
    set_NegativeHalfSurface(Surface): PrivateScope, Public, HideBySig, SpecialName
    get_NewSurface(): PrivateScope, Public, HideBySig, SpecialName
    set_NewSurface(Surface): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.Surface: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean UsesGraphicsCache 'get ' : 
    Double Perimeter 'get ' : 
    WireframeTypeEnum WireframeType 'get set' : 
    Int16 VIsoLineDensity 'get set' : 
    Int16 UIsoLineDensity 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection ModificationActionBodyIds 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId CreationActionBodyId 'get ' : 
  Methods:
    CreateFrom(Entity): PrivateScope, Public, Static, HideBySig
    ConvertToRegion(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Thicken(Double, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetArea(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateInterferenceObjects(Entity, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BooleanUnion(Surface): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BooleanSubtract(Solid3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BooleanSubtract(Surface): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BooleanIntersect(Solid3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BooleanIntersect(Surface): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ImprintEntity(Entity): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateSectionObjects(Plane): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SliceByPlane(Plane): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SliceBySurface(Surface): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ChamferEdges(SubentityId[], SubentityId, Double, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ChamferEdges(SubentityId[], SubentityId, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FilletEdges(SubentityId[], Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    FilletEdges(SubentityId[], DoubleCollection, DoubleCollection, DoubleCollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSubentityColor(SubentityId, Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSubentityColor(SubentityId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSubentityMaterial(SubentityId, ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSubentityMaterial(SubentityId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSubentityMaterialMapper(SubentityId, Mapper): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSubentityMaterialMapper(SubentityId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_CreationActionBodyId(): PrivateScope, Public, HideBySig, SpecialName
    get_ModificationActionBodyIds(): PrivateScope, Public, HideBySig, SpecialName
    get_UIsoLineDensity(): PrivateScope, Public, HideBySig, SpecialName
    set_UIsoLineDensity(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_VIsoLineDensity(): PrivateScope, Public, HideBySig, SpecialName
    set_VIsoLineDensity(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_WireframeType(): PrivateScope, Public, HideBySig, SpecialName
    set_WireframeType(WireframeTypeEnum): PrivateScope, Public, HideBySig, SpecialName
    get_Perimeter(): PrivateScope, Public, HideBySig, SpecialName
    get_UsesGraphicsCache(): PrivateScope, Public, HideBySig, SpecialName
    ProjectOnToSurface(Entity, Vector3d): PrivateScope, Public, HideBySig
    RayTest(Point3d, Vector3d, Double, SubentityId[]&(Out), DoubleCollection&(Out)): PrivateScope, Public, HideBySig
    ConvertToNurbSurface(): PrivateScope, Public, HideBySig
    ExtendEdges(FullSubentityPath[], Double, EdgeExtensionType, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    CreateExtendSurface(ObjectId, SubentityId[], Double, EdgeExtensionType, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    CreateExtrudedSurface(Profile3d, Vector3d, SweepOptions): PrivateScope, Public, Static, HideBySig
    CreateExtrudedSurface(Profile3d, Vector3d, SweepOptions, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    CreateRevolvedSurface(Profile3d, Profile3d, Boolean(HasFieldMarshal), Double, Double, RevolveOptions): PrivateScope, Public, Static, HideBySig
    CreateRevolvedSurface(Profile3d, Profile3d, Boolean(HasFieldMarshal), Double, Double, RevolveOptions, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    CreateRevolvedSurface(Profile3d, Point3d, Vector3d, Double, Double, RevolveOptions): PrivateScope, Public, Static, HideBySig
    CreateRevolvedSurface(Profile3d, Point3d, Vector3d, Double, Double, RevolveOptions, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    CreateSweptSurface(Profile3d, Profile3d, SweepOptions): PrivateScope, Public, Static, HideBySig
    CreateSweptSurface(Profile3d, Profile3d, SweepOptions, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    CreateLoftedSurface(LoftProfile[], LoftProfile[], LoftProfile, LoftOptions): PrivateScope, Public, Static, HideBySig
    CreateLoftedSurface(LoftProfile[], LoftProfile[], LoftProfile, LoftOptions, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    CreateNetworkSurface(Profile3d[], Profile3d[]): PrivateScope, Public, Static, HideBySig
    CreateNetworkSurface(Profile3d[], Profile3d[], Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    CreatePatchSurface(PathRef, ObjectIdCollection, Int32, Double): PrivateScope, Public, Static, HideBySig
    CreatePatchSurface(PathRef, ObjectIdCollection, Int32, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    CreateBlendSurface(LoftProfile, LoftProfile, BlendOptions): PrivateScope, Public, Static, HideBySig
    CreateBlendSurface(LoftProfile, LoftProfile, BlendOptions, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    CreateFilletSurface(ObjectId, Point3d, ObjectId, Point3d, Double, FilletTrimMode, Vector3d): PrivateScope, Public, Static, HideBySig
    CreateFilletSurface(ObjectId, Point3d, ObjectId, Point3d, Double, FilletTrimMode, Vector3d, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    CreateOffsetSurface(Entity, Double): PrivateScope, Public, Static, HideBySig
    CreateOffsetSurface(Entity, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    TrimSurface(ObjectId, ObjectIdCollection, ObjectIdCollection, Vector3dCollection, Point3d, Vector3d, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.Surface+WireframeTypeEnum: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    WireframeTypeEnum Isolines = 0 : Public, Static, Literal, HasDefault
    WireframeTypeEnum IsoParms = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.Surface+EdgeExtensionType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    EdgeExtensionType ExtendEdge = 0 : Public, Static, Literal, HasDefault
    EdgeExtensionType StretchEdge = 1 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.Solid3d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean UsesGraphicsCache 'get ' : 
    Boolean ShowHistory 'get set' : 
    Boolean RecordHistory 'get set' : 
    Int32 NumChanges 'get ' : 
    Boolean IsNull 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Solid3dMassProperties MassProperties 'get ' : 
    Double Area 'get ' : 
  Methods:
    CreateBox(Double, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateFrustum(Double, Double, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateSphere(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateTorus(Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateWedge(Double, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreatePyramid(Double, Int32, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Extrude(Region, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExtrudeAlongPath(Region, Curve, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Revolve(Region, Point3d, Vector3d, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateRevolvedSolid(Entity, SubentityId, Point3d, Vector3d, Double, Double, RevolveOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateRevolvedSolid(Entity, Point3d, Vector3d, Double, Double, RevolveOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateSweptSolid(Entity, SubentityId, Entity, SweepOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateSweptSolid(Entity, Entity, SweepOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateExtrudedSolid(Entity, SubentityId, Double, SweepOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateExtrudedSolid(Entity, SubentityId, Vector3d, SweepOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateExtrudedSolid(Entity, Vector3d, SweepOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateLoftedSolid(LoftProfile[], LoftProfile[], LoftProfile, LoftOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateLoftedSolid(Entity[], Entity[], Entity, LoftOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CreateFrom(Entity): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Area(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CheckInterference(Solid3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_MassProperties(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsNull(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetSection(Plane): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    StlOut(String, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BooleanOperation(BooleanOperationType, Solid3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Slice(Surface, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Slice(Surface): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Slice(Plane, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Slice(Plane): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_NumChanges(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CopyEdge(SubentityId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyFace(SubentityId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExtrudeFaces(SubentityId[], Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ExtrudeFacesAlongPath(SubentityId[], Curve): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ImprintEntity(Entity): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CleanBody(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OffsetBody(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    OffsetFaces(SubentityId[], Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveFaces(SubentityId[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SeparateBody(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ShellBody(SubentityId[], Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TaperFaces(SubentityId[], Point3d, Vector3d, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TransformFaces(SubentityId[], Matrix3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSubentityColor(SubentityId, Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSubentityColor(SubentityId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSubentityMaterial(SubentityId, ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSubentityMaterial(SubentityId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetSubentityMaterialMapper(SubentityId, Mapper): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSubentityMaterialMapper(SubentityId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_RecordHistory(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_RecordHistory(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ShowHistory(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ShowHistory(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ConvertToBrepAtSubentPaths(FullSubentityPath[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ChamferEdges(SubentityId[], SubentityId, Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FilletEdges(SubentityId[], DoubleCollection, DoubleCollection, DoubleCollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_UsesGraphicsCache(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CreateSculptedSolid(Entity[], IntegerCollection): PrivateScope, Public, HideBySig
    ProjectOnToSolid(Entity, Vector3d): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.NurbSurface: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Surface
    Void .ctor(Int32, Int32, Boolean, Int32, Int32, Autodesk.AutoCAD.Geometry.Point3dCollection, Autodesk.AutoCAD.Geometry.DoubleCollection, Autodesk.AutoCAD.Geometry.KnotCollection, Autodesk.AutoCAD.Geometry.KnotCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 NumberOfSpansInV 'get ' : 
    Int32 NumberOfSpansInU 'get ' : 
    Boolean IsRational 'get ' : 
    Double PeriodInV 'get ' : 
    Double PeriodInU 'get ' : 
    Boolean IsPeriodicInV 'get ' : 
    Boolean IsPeriodicInU 'get ' : 
    Boolean IsClosedInV 'get ' : 
    Boolean IsClosedInU 'get ' : 
    Int32 DegreeInV 'get ' : 
    Int32 DegreeInU 'get ' : 
    Int32 NumberOfKnotsInV 'get ' : 
    Int32 NumberOfKnotsInU 'get ' : 
    Autodesk.AutoCAD.Geometry.KnotCollection VKnots 'get ' : 
    Autodesk.AutoCAD.Geometry.KnotCollection UKnots 'get ' : 
    Int32 NumberOfControlPointsInV 'get ' : 
    Int32 NumberOfControlPointsInU 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3dCollection ControlPoints 'get ' : 
  Methods:
    Set(Int32, Int32, Boolean(HasFieldMarshal), Int32, Int32, Point3dCollection, DoubleCollection, KnotCollection, KnotCollection): PrivateScope, Public, HideBySig
    get_ControlPoints(): PrivateScope, Public, HideBySig, SpecialName
    SetControlPoints(Int32, Int32, Point3dCollection): PrivateScope, Public, HideBySig
    GetControlPointAt(Int32, Int32): PrivateScope, Public, HideBySig
    SetControlPointAt(Int32, Int32, Point3d): PrivateScope, Public, HideBySig
    get_NumberOfControlPointsInU(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfControlPointsInV(): PrivateScope, Public, HideBySig, SpecialName
    get_UKnots(): PrivateScope, Public, HideBySig, SpecialName
    get_VKnots(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfKnotsInU(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfKnotsInV(): PrivateScope, Public, HideBySig, SpecialName
    GetWeight(Int32, Int32): PrivateScope, Public, HideBySig
    SetWeight(Int32, Int32, Double): PrivateScope, Public, HideBySig
    Evaluate(Double, Double, Int32, Point3d&, Vector3dCollection&): PrivateScope, Public, HideBySig
    Evaluate(Double, Double, Point3d&, Vector3d&, Vector3d&, Vector3d&, Vector3d&, Vector3d&): PrivateScope, Public, HideBySig
    Evaluate(Double, Double, Point3d&, Vector3d&, Vector3d&): PrivateScope, Public, HideBySig
    Evaluate(Double, Double): PrivateScope, Public, HideBySig
    get_DegreeInU(): PrivateScope, Public, HideBySig, SpecialName
    get_DegreeInV(): PrivateScope, Public, HideBySig, SpecialName
    get_IsClosedInU(): PrivateScope, Public, HideBySig, SpecialName
    get_IsClosedInV(): PrivateScope, Public, HideBySig, SpecialName
    get_IsPeriodicInU(): PrivateScope, Public, HideBySig, SpecialName
    get_IsPeriodicInV(): PrivateScope, Public, HideBySig, SpecialName
    get_PeriodInU(): PrivateScope, Public, HideBySig, SpecialName
    get_PeriodInV(): PrivateScope, Public, HideBySig, SpecialName
    get_IsRational(): PrivateScope, Public, HideBySig, SpecialName
    IsPlanar(Point3d&(Out), Vector3d&(Out)): PrivateScope, Public, HideBySig
    IsPointOnSurface(Point3d): PrivateScope, Public, HideBySig
    GetNormal(Double, Double): PrivateScope, Public, HideBySig
    get_NumberOfSpansInU(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfSpansInV(): PrivateScope, Public, HideBySig, SpecialName
    GetIsolineAtU(Double): PrivateScope, Public, HideBySig
    GetIsolineAtV(Double): PrivateScope, Public, HideBySig
    InsertKnotAtU(Double): PrivateScope, Public, HideBySig
    InsertKnotAtV(Double): PrivateScope, Public, HideBySig
    InsertControlPointsAtU(Double, Point3dCollection, DoubleCollection): PrivateScope, Public, HideBySig
    InsertControlPointsAtV(Double, Point3dCollection, DoubleCollection): PrivateScope, Public, HideBySig
    RemoveControlPointsAtU(Int32): PrivateScope, Public, HideBySig
    RemoveControlPointsAtV(Int32): PrivateScope, Public, HideBySig
    Rebuild(Int32, Int32, Int32, Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Rebuild(Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    ModifyPosition(Double, Double, Point3d): PrivateScope, Public, HideBySig
    ModifyPositionAndTangent(Double, Double, Point3d, Vector3d, Vector3d): PrivateScope, Public, HideBySig
    GetParameterOfPoint(Point3d, Double&(Out), Double&(Out)): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.ExtrudedSurface: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Surface
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double TaperAngle 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.SweepOptions SweepOptions 'get set' : 
    Double Height 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d SweepVec 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.Profile3d SweepProfile 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Entity SweepEntity 'get ' : 
  Methods:
    CreateExtrudedSurface(Entity, Vector3d, SweepOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_SweepEntity(): PrivateScope, Public, HideBySig, SpecialName
    get_SweepProfile(): PrivateScope, Public, HideBySig, SpecialName
    get_SweepVec(): PrivateScope, Public, HideBySig, SpecialName
    set_SweepVec(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Double): PrivateScope, Public, HideBySig, SpecialName
    get_SweepOptions(): PrivateScope, Public, HideBySig, SpecialName
    set_SweepOptions(SweepOptions): PrivateScope, Public, HideBySig, SpecialName
    SetExtrude(Vector3d, SweepOptions): PrivateScope, Public, HideBySig
    get_TaperAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_TaperAngle(Double): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.Profile3d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.Profile3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.VertexRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.PathRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.Entity): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsValid 'get ' : 
    Boolean IsEdge 'get ' : 
    Boolean IsFace 'get ' : 
    Boolean IsSubent 'get ' : 
    Boolean IsPlanar 'get ' : 
    Boolean IsClosed 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.VertexRef ProfileVertexRef 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.PathRef ProfilePathRef 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.Entity Entity 'get set' : 
  Methods:
    get_Entity(): PrivateScope, Public, HideBySig, SpecialName
    set_Entity(Entity): PrivateScope, Public, HideBySig, SpecialName
    get_ProfilePathRef(): PrivateScope, Public, HideBySig, SpecialName
    set_ProfilePathRef(PathRef): PrivateScope, Public, HideBySig, SpecialName
    get_ProfileVertexRef(): PrivateScope, Public, HideBySig, SpecialName
    set_ProfileVertexRef(VertexRef): PrivateScope, Public, HideBySig, SpecialName
    ConvertProfile(PathRef[]): PrivateScope, Public, Static, HideBySig
    ConvertProfile(Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    MergeProfiles(Profile3d[], Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_IsClosed(): PrivateScope, Public, HideBySig, SpecialName
    get_IsPlanar(): PrivateScope, Public, HideBySig, SpecialName
    get_IsSubent(): PrivateScope, Public, HideBySig, SpecialName
    get_IsFace(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEdge(): PrivateScope, Public, HideBySig, SpecialName
    get_IsValid(): PrivateScope, Public, HideBySig, SpecialName
    CopyFrom(Profile3d): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.SweepOptions: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.SweepOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Properties:
    Autodesk.AutoCAD.Geometry.Matrix3d PathEntityTransform 'get ' : 
    Autodesk.AutoCAD.Geometry.Matrix3d SweepEntityTransform 'get ' : 
    Boolean CheckIntersections 'get ' : 
    Boolean Bank 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d BasePoint 'get ' : 
    Boolean AlignStart 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.SweepOptionsAlignOption Align 'get ' : 
    Double AlignAngle 'get ' : 
    Double ScaleFactor 'get ' : 
    Double TwistAngle 'get ' : 
    Double EndDraftDist 'get ' : 
    Double StartDraftDist 'get ' : 
    Double DraftAngle 'get ' : 
  Methods:
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_DraftAngle(): PrivateScope, Public, HideBySig, SpecialName
    get_StartDraftDist(): PrivateScope, Public, HideBySig, SpecialName
    get_EndDraftDist(): PrivateScope, Public, HideBySig, SpecialName
    get_TwistAngle(): PrivateScope, Public, HideBySig, SpecialName
    get_ScaleFactor(): PrivateScope, Public, HideBySig, SpecialName
    get_AlignAngle(): PrivateScope, Public, HideBySig, SpecialName
    get_Align(): PrivateScope, Public, HideBySig, SpecialName
    get_AlignStart(): PrivateScope, Public, HideBySig, SpecialName
    get_BasePoint(): PrivateScope, Public, HideBySig, SpecialName
    get_Bank(): PrivateScope, Public, HideBySig, SpecialName
    get_CheckIntersections(): PrivateScope, Public, HideBySig, SpecialName
    get_SweepEntityTransform(): PrivateScope, Public, HideBySig, SpecialName
    get_PathEntityTransform(): PrivateScope, Public, HideBySig, SpecialName
    CheckSweepCurve(Entity, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    CheckPathCurve(Entity, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.RevolvedSurface: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Surface
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.RevolveOptions RevolveOptions 'get set' : 
    Double StartAngle 'get ' : 
    Double RevolveAngle 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d AxisDirection 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d AxisPoint 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.Profile3d RevolveProfile 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Entity RevolveEntity 'get ' : 
  Methods:
    CreateRevolvedSurface(Entity, Point3d, Vector3d, Double, Double, RevolveOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_RevolveEntity(): PrivateScope, Public, HideBySig, SpecialName
    get_RevolveProfile(): PrivateScope, Public, HideBySig, SpecialName
    get_AxisPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_AxisPoint(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_AxisDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_AxisDirection(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_RevolveAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_RevolveAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_StartAngle(): PrivateScope, Public, HideBySig, SpecialName
    get_RevolveOptions(): PrivateScope, Public, HideBySig, SpecialName
    set_RevolveOptions(RevolveOptions): PrivateScope, Public, HideBySig, SpecialName
    SetRevolve(Point3d, Vector3d, Double, RevolveOptions): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.RevolveOptions: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.RevolveOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Properties:
    Boolean CloseToAxis 'get ' : 
    Double TwistAngle 'get ' : 
    Double DraftAngle 'get ' : 
  Methods:
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_DraftAngle(): PrivateScope, Public, HideBySig, SpecialName
    get_TwistAngle(): PrivateScope, Public, HideBySig, SpecialName
    get_CloseToAxis(): PrivateScope, Public, HideBySig, SpecialName
    CheckRevolveCurve(Entity, Point3d, Vector3d, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.SweptSurface: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Surface
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double TwistAlongPath 'get set' : 
    Double ScaleAlongPath 'get set' : 
    Double ProfileRotation 'get set' : 
    Boolean Bank 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.SweepOptions SweepOptions 'get set' : 
    Double PathLength 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Profile3d PathProfile 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Profile3d SweepProfile 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Entity PathEntity 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Entity SweepEntity 'get ' : 
  Methods:
    CreateSweptSurface(Entity, Entity, SweepOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_SweepEntity(): PrivateScope, Public, HideBySig, SpecialName
    get_PathEntity(): PrivateScope, Public, HideBySig, SpecialName
    get_SweepProfile(): PrivateScope, Public, HideBySig, SpecialName
    get_PathProfile(): PrivateScope, Public, HideBySig, SpecialName
    get_PathLength(): PrivateScope, Public, HideBySig, SpecialName
    get_SweepOptions(): PrivateScope, Public, HideBySig, SpecialName
    set_SweepOptions(SweepOptions): PrivateScope, Public, HideBySig, SpecialName
    get_Bank(): PrivateScope, Public, HideBySig, SpecialName
    set_Bank(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ProfileRotation(): PrivateScope, Public, HideBySig, SpecialName
    set_ProfileRotation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ScaleAlongPath(): PrivateScope, Public, HideBySig, SpecialName
    set_ScaleAlongPath(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TwistAlongPath(): PrivateScope, Public, HideBySig, SpecialName
    set_TwistAlongPath(Double): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.LoftProfile: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Profile3d
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.LoftProfile): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.Entity): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.PathRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Magnitude 'get set' : 
    Int16 Continuity 'get set' : 
  Methods:
    get_Continuity(): PrivateScope, Public, HideBySig, SpecialName
    set_Continuity(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_Magnitude(): PrivateScope, Public, HideBySig, SpecialName
    set_Magnitude(Double): PrivateScope, Public, HideBySig, SpecialName
    CopyFrom(Profile3d): PrivateScope, Public, HideBySig
    CopyFrom(LoftProfile): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.LoftOptions: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.LoftOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Properties:
    Autodesk.AutoCAD.DatabaseServices.LoftOptionsNormalOption NormalOption 'get ' : 
    Boolean VirtualGuide 'get ' : 
    Boolean Ruled 'get ' : 
    Boolean Closed 'get ' : 
    Boolean Simplify 'get ' : 
    Boolean AlignDirection 'get ' : 
    Boolean NoTwist 'get ' : 
    Boolean ArcLengthParam 'get ' : 
    Double DraftEndMag 'get ' : 
    Double DraftStartMag 'get ' : 
    Double DraftEnd 'get ' : 
    Double DraftStart 'get ' : 
  Methods:
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_DraftStart(): PrivateScope, Public, HideBySig, SpecialName
    get_DraftEnd(): PrivateScope, Public, HideBySig, SpecialName
    get_DraftStartMag(): PrivateScope, Public, HideBySig, SpecialName
    get_DraftEndMag(): PrivateScope, Public, HideBySig, SpecialName
    get_ArcLengthParam(): PrivateScope, Public, HideBySig, SpecialName
    get_NoTwist(): PrivateScope, Public, HideBySig, SpecialName
    get_AlignDirection(): PrivateScope, Public, HideBySig, SpecialName
    get_Simplify(): PrivateScope, Public, HideBySig, SpecialName
    get_Closed(): PrivateScope, Public, HideBySig, SpecialName
    get_Ruled(): PrivateScope, Public, HideBySig, SpecialName
    get_VirtualGuide(): PrivateScope, Public, HideBySig, SpecialName
    get_NormalOption(): PrivateScope, Public, HideBySig, SpecialName
    CheckLoftCurves(Entity[], Entity[], Entity, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    CheckCrossSectionCurves(Entity[], Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    CheckGuideCurves(Entity[], Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    CheckPathCurve(Entity, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.PathRef: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.GeomRef
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[], Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.EdgeRef[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.EdgeRef[] EdgeRefs 'get set' : 
  Methods:
    GetEntityArray(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_EdgeRefs(): PrivateScope, Public, HideBySig, SpecialName
    set_EdgeRefs(EdgeRef[]): PrivateScope, Public, HideBySig, SpecialName
    IsEqualTo(Curve3d): PrivateScope, Public, HideBySig
    IsReferencePath(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.BlendOptions: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Properties:
    DriveModeType DriveMode 'get ' : 
    System.Nullable`1[Autodesk.AutoCAD.Geometry.Vector3d] CoplanarDirection 'get ' : 
    System.Nullable`1[Autodesk.AutoCAD.Geometry.Point3d] CoplanarPoint 'get ' : 
    UInt32 Quality 'get ' : 
    Boolean Solid 'get ' : 
    Boolean Simplify 'get ' : 
  Methods:
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Simplify(): PrivateScope, Public, HideBySig, SpecialName
    get_Solid(): PrivateScope, Public, HideBySig, SpecialName
    get_Quality(): PrivateScope, Public, HideBySig, SpecialName
    get_CoplanarPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_CoplanarDirection(): PrivateScope, Public, HideBySig, SpecialName
    get_DriveMode(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.FilletTrimMode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.FilletTrimMode TrimNone = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FilletTrimMode TrimStart = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FilletTrimMode TrimSecond = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FilletTrimMode TrimBoth = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.Solid3dMassProperties: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Vector3d PrincipalAxes [Int32] 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Extents3d Extents 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d RadiiOfGyration 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d PrincipalMoments 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d ProductsOfIntertia 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d MomentsOfIntertia 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d Centroid 'get ' : 
    Double Volume 'get ' : 
  Methods:
    get_Volume(): PrivateScope, Public, HideBySig, SpecialName
    get_Centroid(): PrivateScope, Public, HideBySig, SpecialName
    get_MomentsOfIntertia(): PrivateScope, Public, HideBySig, SpecialName
    get_ProductsOfIntertia(): PrivateScope, Public, HideBySig, SpecialName
    get_PrincipalMoments(): PrivateScope, Public, HideBySig, SpecialName
    get_RadiiOfGyration(): PrivateScope, Public, HideBySig, SpecialName
    get_Extents(): PrivateScope, Public, HideBySig, SpecialName
    get_PrincipalAxes(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.Region: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean UsesGraphicsCache 'get ' : 
    Int32 NumChanges 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get ' : 
    Boolean IsNull 'get ' : 
    Double Area 'get ' : 
    Double Perimeter 'get ' : 
  Methods:
    CreateFromCurves(DBObjectCollection): PrivateScope, Public, Static, HideBySig
    get_Perimeter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Area(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AreaProperties(Point3d&, Vector3d&, Vector3d&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsNull(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Normal(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    BooleanOperation(BooleanOperationType, Region): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_NumChanges(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_UsesGraphicsCache(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.BooleanOperationType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.BooleanOperationType BoolUnite = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.BooleanOperationType BoolIntersect = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.BooleanOperationType BoolSubtract = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.AlignedDimension: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Dimension
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, System.String, Autodesk.AutoCAD.DatabaseServices.ObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Oblique 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d DimLinePoint 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d XLine2Point 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d XLine1Point 'get set' : 
  Methods:
    get_XLine1Point(): PrivateScope, Public, HideBySig, SpecialName
    set_XLine1Point(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_XLine2Point(): PrivateScope, Public, HideBySig, SpecialName
    set_XLine2Point(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_DimLinePoint(): PrivateScope, Public, HideBySig, SpecialName
    set_DimLinePoint(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_Oblique(): PrivateScope, Public, HideBySig, SpecialName
    set_Oblique(Double): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.Arc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Curve
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Vector3d, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double TotalAngle 'get ' : 
    Double Length 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get set' : 
    Double Thickness 'get set' : 
    Double EndAngle 'get set' : 
    Double StartAngle 'get set' : 
    Double Radius 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Center 'get set' : 
  Methods:
    get_Center(): PrivateScope, Public, HideBySig, SpecialName
    set_Center(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_Radius(): PrivateScope, Public, HideBySig, SpecialName
    set_Radius(Double): PrivateScope, Public, HideBySig, SpecialName
    get_StartAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_StartAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_EndAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_EndAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Thickness(): PrivateScope, Public, HideBySig, SpecialName
    set_Thickness(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    set_Normal(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_TotalAngle(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.AttributeDefinition: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBText
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, System.String, System.String, System.String, Autodesk.AutoCAD.DatabaseServices.ObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.MText MTextAttributeDefinition 'get set' : 
    Boolean IsMTextAttributeDefinition 'get set' : 
    Boolean LockPositionInBlock 'get set' : 
    Int32 FieldLength 'get set' : 
    Boolean Preset 'get set' : 
    Boolean Verifiable 'get set' : 
    Boolean Constant 'get set' : 
    Boolean Invisible 'get set' : 
    System.String Tag 'get set' : 
    System.String Prompt 'get set' : 
  Methods:
    get_Prompt(): PrivateScope, Public, HideBySig, SpecialName
    set_Prompt(String): PrivateScope, Public, HideBySig, SpecialName
    get_Tag(): PrivateScope, Public, HideBySig, SpecialName
    set_Tag(String): PrivateScope, Public, HideBySig, SpecialName
    get_Invisible(): PrivateScope, Public, HideBySig, SpecialName
    set_Invisible(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Constant(): PrivateScope, Public, HideBySig, SpecialName
    set_Constant(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Verifiable(): PrivateScope, Public, HideBySig, SpecialName
    set_Verifiable(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Preset(): PrivateScope, Public, HideBySig, SpecialName
    set_Preset(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_FieldLength(): PrivateScope, Public, HideBySig, SpecialName
    set_FieldLength(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_LockPositionInBlock(): PrivateScope, Public, HideBySig, SpecialName
    set_LockPositionInBlock(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsMTextAttributeDefinition(): PrivateScope, Public, HideBySig, SpecialName
    set_IsMTextAttributeDefinition(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_MTextAttributeDefinition(): PrivateScope, Public, HideBySig, SpecialName
    set_MTextAttributeDefinition(MText): PrivateScope, Public, HideBySig, SpecialName
    UpdateMTextAttributeDefinition(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.BlockBegin: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.BlockEnd: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.MInsertBlock: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.BlockReference
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.DatabaseServices.ObjectId, Int16, Int16, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double RowSpacing 'get set' : 
    Double ColumnSpacing 'get set' : 
    Int16 Rows 'get set' : 
    Int16 Columns 'get set' : 
  Methods:
    get_Columns(): PrivateScope, Public, HideBySig, SpecialName
    set_Columns(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_Rows(): PrivateScope, Public, HideBySig, SpecialName
    set_Rows(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_ColumnSpacing(): PrivateScope, Public, HideBySig, SpecialName
    set_ColumnSpacing(Double): PrivateScope, Public, HideBySig, SpecialName
    get_RowSpacing(): PrivateScope, Public, HideBySig, SpecialName
    set_RowSpacing(Double): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.Body: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 NumChanges 'get ' : 
    Boolean UsesGraphicsCache 'get ' : 
    Boolean IsNull 'get ' : 
  Methods:
    get_IsNull(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_UsesGraphicsCache(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AcisOut(String, DBObjectCollection): PrivateScope, Public, Static, HideBySig
    AcisIn(String): PrivateScope, Public, Static, HideBySig
    get_NumChanges(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.DiametricDimension: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Dimension
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Double, System.String, Autodesk.AutoCAD.DatabaseServices.ObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d FarChordPoint 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d ChordPoint 'get set' : 
    Double LeaderLength 'get set' : 
  Methods:
    get_LeaderLength(): PrivateScope, Public, HideBySig, SpecialName
    set_LeaderLength(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ChordPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_ChordPoint(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_FarChordPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_FarChordPoint(Point3d): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.Ellipse: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Curve
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Vector3d, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double MinorRadius 'get ' : 
    Double MajorRadius 'get ' : 
    Boolean IsNull 'get ' : 
    Double EndParam 'get set' : 
    Double StartParam 'get set' : 
    Double EndAngle 'get set' : 
    Double StartAngle 'get set' : 
    Double RadiusRatio 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d MinorAxis 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d MajorAxis 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d Center 'get set' : 
  Methods:
    get_Center(): PrivateScope, Public, HideBySig, SpecialName
    set_Center(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    get_MajorAxis(): PrivateScope, Public, HideBySig, SpecialName
    get_MinorAxis(): PrivateScope, Public, HideBySig, SpecialName
    get_RadiusRatio(): PrivateScope, Public, HideBySig, SpecialName
    set_RadiusRatio(Double): PrivateScope, Public, HideBySig, SpecialName
    get_StartAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_StartAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_EndAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_EndAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_StartParam(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_StartParam(Double): PrivateScope, Public, HideBySig, SpecialName
    get_EndParam(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_EndParam(Double): PrivateScope, Public, HideBySig, SpecialName
    GetParameterAtAngle(Double): PrivateScope, Public, HideBySig
    GetAngleAtParameter(Double): PrivateScope, Public, HideBySig
    Set(Point3d, Vector3d, Vector3d, Double, Double, Double): PrivateScope, Public, HideBySig
    get_IsNull(): PrivateScope, Public, HideBySig, SpecialName
    get_MajorRadius(): PrivateScope, Public, HideBySig, SpecialName
    get_MinorRadius(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.Face: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Boolean, Boolean, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Boolean, Boolean, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetVertexAt(Int16): PrivateScope, Public, HideBySig
    SetVertexAt(Int16, Point3d): PrivateScope, Public, HideBySig
    IsEdgeVisibleAt(Int16): PrivateScope, Public, HideBySig
    MakeEdgeVisibleAt(Int16): PrivateScope, Public, HideBySig
    MakeEdgeInvisibleAt(Int16): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.FaceRecord: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Vertex
    Void .ctor(Int16, Int16, Int16, Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetVertexAt(Int16): PrivateScope, Public, HideBySig
    SetVertexAt(Int16, Int16): PrivateScope, Public, HideBySig
    IsEdgeVisibleAt(Int16): PrivateScope, Public, HideBySig
    MakeEdgeVisibleAt(Int16): PrivateScope, Public, HideBySig
    MakeEdgeInvisibleAt(Int16): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.FeatureControlFrame: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(System.String, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Vector3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String TextStyleName 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId TextStyleId 'get set' : 
    System.String DimensionStyleName 'get set' : 
    Double Dimtxt 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Dimtxsty 'get set' : 
    Double Dimscale 'get set' : 
    Double Dimgap 'get set' : 
    Autodesk.AutoCAD.Colors.Color Dimclrt 'get set' : 
    Autodesk.AutoCAD.Colors.Color Dimclrd 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId DimensionStyle 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d Direction 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d Location 'get set' : 
    System.String Text 'get set' : 
  Methods:
    get_Text(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Text(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Location(Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetOrientation(Vector3d, Vector3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Normal(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Direction(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetBoundingPoints(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetBoundingPolyline(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetDimstyleData(DimStyleTableRecord): PrivateScope, Public, HideBySig
    GetDimstyleData(): PrivateScope, Public, HideBySig
    get_DimensionStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_DimensionStyle(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_Dimclrd(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimclrd(Color): PrivateScope, Public, HideBySig, SpecialName
    get_Dimclrt(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimclrt(Color): PrivateScope, Public, HideBySig, SpecialName
    get_Dimgap(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimgap(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Dimscale(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimscale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Dimtxsty(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimtxsty(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_Dimtxt(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimtxt(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DimensionStyleName(): PrivateScope, Public, HideBySig, SpecialName
    set_DimensionStyleName(String): PrivateScope, Public, HideBySig, SpecialName
    get_TextStyleId(): PrivateScope, Public, HideBySig, SpecialName
    set_TextStyleId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_TextStyleName(): PrivateScope, Public, HideBySig, SpecialName
    set_TextStyleName(String): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.Rectangle3d: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d LowerRight 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d LowerLeft 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d UpperRight 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d UpperLeft 'get ' : 
  Methods:
    get_UpperLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_UpperRight(): PrivateScope, Public, HideBySig, SpecialName
    get_LowerLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_LowerRight(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.Ole2Frame: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object OleObject 'get ' : 
    Boolean LockAspect 'get set' : 
    Double ScaleHeight 'get set' : 
    Double ScaleWidth 'get set' : 
    Double WcsHeight 'get set' : 
    Double WcsWidth 'get set' : 
    Double Rotation 'get set' : 
    Byte AutoOutputQuality 'get set' : 
    Byte OutputQuality 'get set' : 
    System.String LinkPath 'get ' : 
    System.String LinkName 'get ' : 
    Boolean IsLinked 'get ' : 
    ItemType Type 'get ' : 
    System.String UserType 'get ' : 
    System.Drawing.Rectangle Position2d 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.Rectangle3d Position3d 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Location 'get ' : 
  Methods:
    get_Location(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Position3d(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Position3d(Rectangle3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Position2d(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Position2d(Rectangle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_UserType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Type(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsLinked(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LinkName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LinkPath(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_OutputQuality(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_OutputQuality(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AutoOutputQuality(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoOutputQuality(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_Rotation(): PrivateScope, Public, HideBySig, SpecialName
    set_Rotation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_WcsWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_WcsWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_WcsHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_WcsHeight(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ScaleWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_ScaleWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ScaleHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_ScaleHeight(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LockAspect(): PrivateScope, Public, HideBySig, SpecialName
    set_LockAspect(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OleObject(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.Ole2Frame+ItemType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ItemType Link = 1 : Public, Static, Literal, HasDefault
    ItemType Embedded = 2 : Public, Static, Literal, HasDefault
    ItemType Static = 3 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.BulgeVertex: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2d, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Bulge 'get set' : 
    Autodesk.AutoCAD.Geometry.Point2d Vertex 'get set' : 
  Methods:
    get_Vertex(): PrivateScope, Public, HideBySig, SpecialName
    set_Vertex(Point2d): PrivateScope, Public, HideBySig, SpecialName
    get_Bulge(): PrivateScope, Public, HideBySig, SpecialName
    set_Bulge(Double): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.BulgeVertexCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Collections.CollectionBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.BulgeVertex Item [Int32] 'get set' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, BulgeVertex): PrivateScope, Public, HideBySig, SpecialName
    Add(BulgeVertex): PrivateScope, Public, HideBySig
    IndexOf(BulgeVertex): PrivateScope, Public, HideBySig
    Insert(Int32, BulgeVertex): PrivateScope, Public, HideBySig
    Remove(BulgeVertex): PrivateScope, Public, HideBySig
    Contains(BulgeVertex): PrivateScope, Public, HideBySig
    CopyTo(BulgeVertex[], Int32): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.DoubleCollectionEnumerator: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.Geometry.DoubleCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    Double Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Autodesk.AutoCAD.DatabaseServices.PatternDefinition: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Autodesk.AutoCAD.Geometry.Point2d, Autodesk.AutoCAD.Geometry.Point2d, Autodesk.AutoCAD.Geometry.DoubleCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double OffsetY 'get ' : 
    Double OffsetX 'get ' : 
    Double BaseY 'get ' : 
    Double BaseX 'get ' : 
    Double Angle 'get ' : 
  Methods:
    get_Angle(): PrivateScope, Public, HideBySig, SpecialName
    get_BaseX(): PrivateScope, Public, HideBySig, SpecialName
    get_BaseY(): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    GetDashes(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.HatchLoop: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.HatchLoopTypes): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Curve2dCollection Curves 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.BulgeVertexCollection Polyline 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.HatchLoopTypes LoopType 'get ' : 
    Boolean IsPolyline 'get ' : 
  Methods:
    get_IsPolyline(): PrivateScope, Public, HideBySig, SpecialName
    get_LoopType(): PrivateScope, Public, HideBySig, SpecialName
    get_Polyline(): PrivateScope, Public, HideBySig, SpecialName
    get_Curves(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.Geometry.Curve2dCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Autodesk.AutoCAD.Geometry.Curve2d Item [Int32] 'get set' : 
    Boolean IsReadOnly 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Curve2d): PrivateScope, Public, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RemoveAt(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(Curve2d[], Int32): PrivateScope, Public, HideBySig
    Insert(Int32, Curve2d): PrivateScope, Public, HideBySig
    Remove(Curve2d): PrivateScope, Public, HideBySig
    Contains(Curve2d): PrivateScope, Public, HideBySig
    IndexOf(Curve2d): PrivateScope, Public, HideBySig
    Add(Curve2d): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.HatchLoopTypes: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.HatchLoopTypes Default = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.HatchLoopTypes External = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.HatchLoopTypes Polyline = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.HatchLoopTypes Derived = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.HatchLoopTypes Textbox = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.HatchLoopTypes Outermost = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.HatchLoopTypes NotClosed = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.HatchLoopTypes SelfIntersecting = 64 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.HatchLoopTypes TextIsland = 128 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.HatchLoopTypes Duplicate = 256 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.GradientColor: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.Colors.Color, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    get_Color(): PrivateScope, Public, HideBySig
    get_Value(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.Hatch: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point2d Origin 'get set' : 
    Double Area 'get ' : 
    Int32 NumberOfHatchLines 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.HatchStyle HatchStyle 'get set' : 
    Int32 NumberOfPatternDefinitions 'get ' : 
    Boolean PatternDouble 'get set' : 
    Double PatternScale 'get set' : 
    Double PatternSpace 'get set' : 
    Double PatternAngle 'get set' : 
    System.String PatternName 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.HatchPatternType PatternType 'get ' : 
    Single GradientShift 'get set' : 
    Single ShadeTintValue 'get set' : 
    Boolean GradientOneColorMode 'get set' : 
    Double GradientAngle 'get set' : 
    System.String GradientName 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.GradientPatternType GradientType 'get ' : 
    Boolean IsSolidFill 'get ' : 
    Boolean IsHatch 'get ' : 
    Boolean IsGradient 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.HatchObjectType HatchObjectType 'get set' : 
    Boolean Associative 'get set' : 
    Int32 NumberOfLoops 'get ' : 
    Autodesk.AutoCAD.Colors.Color BackgroundColor 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get set' : 
    Double Elevation 'get set' : 
  Methods:
    get_Elevation(): PrivateScope, Public, HideBySig, SpecialName
    set_Elevation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    set_Normal(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_BackgroundColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BackgroundColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfLoops(): PrivateScope, Public, HideBySig, SpecialName
    LoopTypeAt(Int32): PrivateScope, Public, HideBySig
    GetLoopAt(Int32): PrivateScope, Public, HideBySig
    AppendLoop(HatchLoopTypes, Point2dCollection, DoubleCollection): PrivateScope, Public, HideBySig
    AppendLoop(HatchLoopTypes, Curve2dCollection, IntegerCollection): PrivateScope, Public, HideBySig
    AppendLoop(HatchLoopTypes, ObjectIdCollection): PrivateScope, Public, HideBySig
    AppendLoop(HatchLoop): PrivateScope, Public, HideBySig
    InsertLoopAt(Int32, HatchLoopTypes, ObjectIdCollection): PrivateScope, Public, HideBySig
    InsertLoopAt(Int32, HatchLoop): PrivateScope, Public, HideBySig
    RemoveLoopAt(Int32): PrivateScope, Public, HideBySig
    get_Associative(): PrivateScope, Public, HideBySig, SpecialName
    set_Associative(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    GetAssociatedObjectIdsAt(Int32): PrivateScope, Public, HideBySig
    GetAssociatedObjectIds(): PrivateScope, Public, HideBySig
    RemoveAssociatedObjectIds(): PrivateScope, Public, HideBySig
    get_HatchObjectType(): PrivateScope, Public, HideBySig, SpecialName
    set_HatchObjectType(HatchObjectType): PrivateScope, Public, HideBySig, SpecialName
    get_IsGradient(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsHatch(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSolidFill(): PrivateScope, Public, HideBySig, SpecialName
    SetGradient(GradientPatternType, String): PrivateScope, Public, HideBySig
    get_GradientType(): PrivateScope, Public, HideBySig, SpecialName
    get_GradientName(): PrivateScope, Public, HideBySig, SpecialName
    get_GradientAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_GradientAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_GradientOneColorMode(): PrivateScope, Public, HideBySig, SpecialName
    set_GradientOneColorMode(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ShadeTintValue(): PrivateScope, Public, HideBySig, SpecialName
    set_ShadeTintValue(Single): PrivateScope, Public, HideBySig, SpecialName
    get_GradientShift(): PrivateScope, Public, HideBySig, SpecialName
    set_GradientShift(Single): PrivateScope, Public, HideBySig, SpecialName
    GetGradientColors(): PrivateScope, Public, HideBySig
    SetGradientColors(GradientColor[]): PrivateScope, Public, HideBySig
    EvaluateGradientColorAt(Single): PrivateScope, Public, HideBySig
    SetHatchPattern(HatchPatternType, String): PrivateScope, Public, HideBySig
    get_PatternType(): PrivateScope, Public, HideBySig, SpecialName
    get_PatternName(): PrivateScope, Public, HideBySig, SpecialName
    get_PatternAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_PatternAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_PatternSpace(): PrivateScope, Public, HideBySig, SpecialName
    set_PatternSpace(Double): PrivateScope, Public, HideBySig, SpecialName
    get_PatternScale(): PrivateScope, Public, HideBySig, SpecialName
    set_PatternScale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_PatternDouble(): PrivateScope, Public, HideBySig, SpecialName
    set_PatternDouble(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfPatternDefinitions(): PrivateScope, Public, HideBySig, SpecialName
    GetPatternDefinitionAt(Int32): PrivateScope, Public, HideBySig
    get_HatchStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_HatchStyle(HatchStyle): PrivateScope, Public, HideBySig, SpecialName
    EvaluateHatch(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_NumberOfHatchLines(): PrivateScope, Public, HideBySig, SpecialName
    GetHatchLinesData(): PrivateScope, Public, HideBySig
    GetHatchLineDataAt(Int32): PrivateScope, Public, HideBySig
    get_Area(): PrivateScope, Public, HideBySig, SpecialName
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    set_Origin(Point2d): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.HatchObjectType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.HatchObjectType HatchObject = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.HatchObjectType GradientObject = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.GradientPatternType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.GradientPatternType PreDefinedGradient = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GradientPatternType UserDefinedGradient = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.HatchPatternType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.HatchPatternType UserDefined = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.HatchPatternType PreDefined = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.HatchPatternType CustomDefined = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.HatchStyle: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.HatchStyle Normal = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.HatchStyle Outer = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.HatchStyle Ignore = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.Geometry.Line2dCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    Autodesk.AutoCAD.Geometry.Line2d Item [Int32] 'get set' : 
  Methods:
    Add(Line2d): PrivateScope, Public, HideBySig
    Contains(Line2d): PrivateScope, Public, HideBySig
    IndexOf(Line2d): PrivateScope, Public, HideBySig
    Insert(Int32, Line2d): PrivateScope, Public, HideBySig
    Remove(Line2d): PrivateScope, Public, HideBySig
    CopyTo(Line2d[], Int32): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Line2d): PrivateScope, Public, HideBySig, SpecialName
    RemoveAt(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.Image: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
Class Autodesk.AutoCAD.DatabaseServices.RasterImage: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Image
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Width 'get ' : 
    Boolean ImageTransparency 'get set' : 
    Boolean ShowImage 'get set' : 
    Double Rotation 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Position 'get ' : 
    System.String Path 'get ' : 
    System.String Name 'get set' : 
    Double ImageWidth 'get ' : 
    Double ImageHeight 'get ' : 
    Double Height 'get ' : 
    Byte Fade  'get set' : 
    Byte Contrast 'get set' : 
    Byte Brightness 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ImageDisplayOptions DisplayOptions 'get set' : 
    Autodesk.AutoCAD.Geometry.Matrix3d PixelToModelTransform 'get ' : 
    Boolean IsClipped 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ClipBoundaryType ClipBoundaryType 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector2d Scale 'get ' : 
    Autodesk.AutoCAD.Geometry.CoordinateSystem3d Orientation 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ReactorId 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ImageDefId 'get set' : 
  Methods:
    set_ImageDefId(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ImageDefId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ReactorId(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ReactorId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AssociateRasterDef(RasterImageDef): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EnableReactors(Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    set_Orientation(CoordinateSystem3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Orientation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Scale(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ImageSize(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetClipBoundaryToWholeImage(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetClipBoundary(ClipBoundaryType, Point2dCollection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetClipBoundary(Vector2d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetClipBoundary(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_ClipBoundaryType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsClipped(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsClipped(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetVertices(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_PixelToModelTransform(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DisplayOptions(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DisplayOptions(ImageDisplayOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Brightness(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Brightness(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Contrast(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Contrast(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Fade(Byte): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Fade(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_ImageHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_ImageWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Path(): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    get_Rotation(): PrivateScope, Public, HideBySig, SpecialName
    set_Rotation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ShowImage(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowImage(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ImageTransparency(): PrivateScope, Public, HideBySig, SpecialName
    set_ImageTransparency(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.ClipBoundaryType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.ClipBoundaryType Invalid = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ClipBoundaryType Rectangle = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ClipBoundaryType Poly = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.ImageDisplayOptions: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.ImageDisplayOptions Show = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ImageDisplayOptions ShowUnaligned = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ImageDisplayOptions Clip = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ImageDisplayOptions Transparent = 8 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.DBPoint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double EcsRotation 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get set' : 
    Double Thickness 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Position 'get set' : 
  Methods:
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_Thickness(): PrivateScope, Public, HideBySig, SpecialName
    set_Thickness(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    set_Normal(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_EcsRotation(): PrivateScope, Public, HideBySig, SpecialName
    set_EcsRotation(Double): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.PolyFaceMesh: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerable
  Properties:
    Int32 NumFaces 'get ' : 
    Int32 NumVertices 'get ' : 
  Methods:
    get_NumVertices(): PrivateScope, Public, HideBySig, SpecialName
    get_NumFaces(): PrivateScope, Public, HideBySig, SpecialName
    AppendVertex(PolyFaceMeshVertex): PrivateScope, Public, HideBySig
    AppendFaceRecord(FaceRecord): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.PolyFaceMeshVertex: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Vertex
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d Position 'get set' : 
  Methods:
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Point3d): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.PolygonMesh: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.PolyMeshType, Int32, Int32, Autodesk.AutoCAD.Geometry.Point3dCollection, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerable
  Properties:
    Int16 NSurfaceDensity 'get set' : 
    Int16 MSurfaceDensity 'get set' : 
    Boolean IsNClosed 'get ' : 
    Boolean IsMClosed 'get ' : 
    Int16 NSize 'get set' : 
    Int16 MSize 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.PolyMeshType PolyMeshType 'get set' : 
  Methods:
    get_PolyMeshType(): PrivateScope, Public, HideBySig, SpecialName
    set_PolyMeshType(PolyMeshType): PrivateScope, Public, HideBySig, SpecialName
    ConvertToPolyMeshType(PolyMeshType): PrivateScope, Public, HideBySig
    get_MSize(): PrivateScope, Public, HideBySig, SpecialName
    set_MSize(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_NSize(): PrivateScope, Public, HideBySig, SpecialName
    set_NSize(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_IsMClosed(): PrivateScope, Public, HideBySig, SpecialName
    MakeMClosed(): PrivateScope, Public, HideBySig
    MakeMOpen(): PrivateScope, Public, HideBySig
    get_IsNClosed(): PrivateScope, Public, HideBySig, SpecialName
    MakeNClosed(): PrivateScope, Public, HideBySig
    MakeNOpen(): PrivateScope, Public, HideBySig
    get_MSurfaceDensity(): PrivateScope, Public, HideBySig, SpecialName
    set_MSurfaceDensity(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_NSurfaceDensity(): PrivateScope, Public, HideBySig, SpecialName
    set_NSurfaceDensity(Int16): PrivateScope, Public, HideBySig, SpecialName
    Straighten(): PrivateScope, Public, HideBySig
    SurfaceFit(PolyMeshType, Int32, Int32): PrivateScope, Public, HideBySig
    SurfaceFit(): PrivateScope, Public, HideBySig
    AppendVertex(PolygonMeshVertex): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Autodesk.AutoCAD.DatabaseServices.PolyMeshType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.PolyMeshType SimpleMesh = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PolyMeshType QuadSurfaceMesh = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PolyMeshType CubicSurfaceMesh = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PolyMeshType BezierSurfaceMesh = 8 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.PolygonMeshVertex: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Vertex
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d Position 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.Vertex3dType VertexType 'get ' : 
  Methods:
    get_VertexType(): PrivateScope, Public, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Point3d): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.Leader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Curve
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String DimensionStyleName 'get set' : 
    Double Dimtxt 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId TextStyleId 'get set' : 
    Int32 Dimtad 'get set' : 
    Double Dimscale 'get set' : 
    Boolean Dimsah 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Dimldrblk 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LineWeight Dimlwd 'get set' : 
    Double Dimgap 'get set' : 
    Autodesk.AutoCAD.Colors.Color Dimclrd 'get set' : 
    Double Dimasz 'get set' : 
    Double AnnoWidth 'get ' : 
    Double AnnoHeight 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.AnnotationType AnnoType 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d AnnotationOffset 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Annotation 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId DimensionStyle 'get set' : 
    Boolean IsSplined 'get set' : 
    Boolean HasHookLine 'get ' : 
    Boolean HasArrowHead 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d LastVertex 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d FirstVertex 'get ' : 
    Int32 NumVertices 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get ' : 
  Methods:
    SetPlane(Plane): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Normal(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NumVertices(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AppendVertex(Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveLastVertex(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_FirstVertex(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LastVertex(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    VertexAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetVertexAt(Int32, Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_HasArrowHead(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_HasArrowHead(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HasHookLine(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSplined(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsSplined(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DimensionStyle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DimensionStyle(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetDimstyleData(DimStyleTableRecord): PrivateScope, Public, HideBySig
    GetDimstyleData(): PrivateScope, Public, HideBySig
    get_Annotation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Annotation(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    EvaluateLeader(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_AnnotationOffset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_AnnotationOffset(Vector3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AnnoType(): PrivateScope, Public, HideBySig, SpecialName
    get_AnnoHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_AnnoWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_Dimasz(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimasz(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimclrd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimclrd(Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimgap(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimgap(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimlwd(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimlwd(LineWeight): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimldrblk(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimldrblk(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimsah(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimsah(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimscale(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimscale(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtad(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtad(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TextStyleId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TextStyleId(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Dimtxt(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Dimtxt(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DimensionStyleName(): PrivateScope, Public, HideBySig, SpecialName
    set_DimensionStyleName(String): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.AnnotationType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.AnnotationType MText = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AnnotationType FeatureControlFrame = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AnnotationType BlockRef = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AnnotationType NoAnnotation = 3 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.MTextFragmentCallback: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(MTextFragment, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(MTextFragment, Object, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Struct Autodesk.AutoCAD.DatabaseServices.MTextFragmentCallbackStatus: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.MTextFragmentCallbackStatus Terminate = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MTextFragmentCallbackStatus Continue = 1 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.MTextFragment: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Properties:
    Boolean Italic 'get ' : 
    Boolean Bold 'get ' : 
    System.String TrueTypeFont 'get ' : 
    Boolean Strikethrough 'get ' : 
    Boolean Overlined 'get ' : 
    Boolean Underlined 'get ' : 
    Boolean StackBottom 'get ' : 
    Boolean StackTop 'get ' : 
    Autodesk.AutoCAD.Colors.EntityColor Color 'get ' : 
    Double TrackingFactor 'get ' : 
    Double ObliqueAngle 'get ' : 
    Double WidthFactor 'get ' : 
    Double CapsHeight 'get ' : 
    Autodesk.AutoCAD.Geometry.Point2d Extents 'get ' : 
    System.String BigFont 'get ' : 
    System.String ShxFont 'get ' : 
    System.String Text 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Direction 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d Location 'get ' : 
  Methods:
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    get_Direction(): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    get_ShxFont(): PrivateScope, Public, HideBySig, SpecialName
    get_BigFont(): PrivateScope, Public, HideBySig, SpecialName
    get_Extents(): PrivateScope, Public, HideBySig, SpecialName
    get_CapsHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_WidthFactor(): PrivateScope, Public, HideBySig, SpecialName
    get_ObliqueAngle(): PrivateScope, Public, HideBySig, SpecialName
    get_TrackingFactor(): PrivateScope, Public, HideBySig, SpecialName
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    get_StackTop(): PrivateScope, Public, HideBySig, SpecialName
    get_StackBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_Underlined(): PrivateScope, Public, HideBySig, SpecialName
    get_Overlined(): PrivateScope, Public, HideBySig, SpecialName
    get_Strikethrough(): PrivateScope, Public, HideBySig, SpecialName
    GetUnderLinePoints(): PrivateScope, Public, HideBySig
    GetOverLinePoints(): PrivateScope, Public, HideBySig
    GetStrikethroughPoints(): PrivateScope, Public, HideBySig
    get_TrueTypeFont(): PrivateScope, Public, HideBySig, SpecialName
    get_Bold(): PrivateScope, Public, HideBySig, SpecialName
    get_Italic(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.ColumnType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.ColumnType NoColumns = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ColumnType StaticColumns = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ColumnType DynamicColumns = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.Mline: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 NumberOfVertices 'get ' : 
    Boolean SupressEndCaps 'get set' : 
    Boolean SupressStartCaps 'get set' : 
    Boolean IsClosed 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get set' : 
    Double Scale 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.MlineJustification Justification 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Style 'get set' : 
  Methods:
    get_Style(): PrivateScope, Public, HideBySig, SpecialName
    set_Style(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_Justification(): PrivateScope, Public, HideBySig, SpecialName
    set_Justification(MlineJustification): PrivateScope, Public, HideBySig, SpecialName
    get_Scale(): PrivateScope, Public, HideBySig, SpecialName
    set_Scale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    set_Normal(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    AppendSegment(Point3d): PrivateScope, Public, HideBySig
    RemoveLastSegment(Point3d): PrivateScope, Public, HideBySig
    MoveVertexAt(Int32, Point3d): PrivateScope, Public, HideBySig
    get_IsClosed(): PrivateScope, Public, HideBySig, SpecialName
    set_IsClosed(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SupressStartCaps(): PrivateScope, Public, HideBySig, SpecialName
    set_SupressStartCaps(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SupressEndCaps(): PrivateScope, Public, HideBySig, SpecialName
    set_SupressEndCaps(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfVertices(): PrivateScope, Public, HideBySig, SpecialName
    Element(Point3d): PrivateScope, Public, HideBySig
    VertexAt(Int32): PrivateScope, Public, HideBySig
    GetClosestPointTo(Point3d, Vector3d, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetClosestPointTo(Point3d, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.MlineJustification: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.MlineJustification Top = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MlineJustification Zero = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MlineJustification Bottom = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.Polyline: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Curve
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Length 'get ' : 
    Boolean HasWidth 'get ' : 
    Boolean HasBulges 'get ' : 
    Int32 NumberOfVertices 'get ' : 
    Boolean IsOnlyLines 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get set' : 
    Double ConstantWidth 'get set' : 
    Double Thickness 'get set' : 
    Double Elevation 'get set' : 
    Boolean Plinegen 'get set' : 
    Boolean Closed 'get set' : 
  Methods:
    ConvertFrom(Entity, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ConvertTo(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetPoint3dAt(Int32): PrivateScope, Public, HideBySig
    GetSegmentType(Int32): PrivateScope, Public, HideBySig
    GetLineSegment2dAt(Int32): PrivateScope, Public, HideBySig
    GetArcSegment2dAt(Int32): PrivateScope, Public, HideBySig
    GetLineSegmentAt(Int32): PrivateScope, Public, HideBySig
    GetArcSegmentAt(Int32): PrivateScope, Public, HideBySig
    OnSegmentAt(Int32, Point2d, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Closed(): PrivateScope, Public, HideBySig, SpecialName
    set_Closed(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Plinegen(): PrivateScope, Public, HideBySig, SpecialName
    set_Plinegen(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Elevation(): PrivateScope, Public, HideBySig, SpecialName
    set_Elevation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Thickness(): PrivateScope, Public, HideBySig, SpecialName
    set_Thickness(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ConstantWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_ConstantWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    set_Normal(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_IsOnlyLines(): PrivateScope, Public, HideBySig, SpecialName
    AddVertexAt(Int32, Point2d, Double, Double, Double): PrivateScope, Public, HideBySig
    RemoveVertexAt(Int32): PrivateScope, Public, HideBySig
    get_NumberOfVertices(): PrivateScope, Public, HideBySig, SpecialName
    GetPoint2dAt(Int32): PrivateScope, Public, HideBySig
    SetPointAt(Int32, Point2d): PrivateScope, Public, HideBySig
    GetBulgeAt(Int32): PrivateScope, Public, HideBySig
    SetBulgeAt(Int32, Double): PrivateScope, Public, HideBySig
    GetStartWidthAt(Int32): PrivateScope, Public, HideBySig
    GetEndWidthAt(Int32): PrivateScope, Public, HideBySig
    SetStartWidthAt(Int32, Double): PrivateScope, Public, HideBySig
    SetEndWidthAt(Int32, Double): PrivateScope, Public, HideBySig
    MinimizeMemory(): PrivateScope, Public, HideBySig
    MaximizeMemory(): PrivateScope, Public, HideBySig
    Reset(Boolean(HasFieldMarshal), Int32): PrivateScope, Public, HideBySig
    get_HasBulges(): PrivateScope, Public, HideBySig, SpecialName
    get_HasWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.SegmentType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.SegmentType Line = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SegmentType Arc = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SegmentType Coincident = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SegmentType Point = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SegmentType Empty = 4 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.Geometry.LineSegment2d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.LinearEntity2d
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2d, Autodesk.AutoCAD.Geometry.Vector2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2d, Autodesk.AutoCAD.Geometry.Point2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Length 'get ' : 
    Autodesk.AutoCAD.Geometry.Point2d EndPoint 'get ' : 
    Autodesk.AutoCAD.Geometry.Point2d MidPoint 'get ' : 
    Autodesk.AutoCAD.Geometry.Point2d StartPoint 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    GetBisector(): PrivateScope, Public, HideBySig
    BaryComb(Double): PrivateScope, Public, HideBySig
    get_StartPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_MidPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_EndPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    GetSegmentLength(Double, Double): PrivateScope, Public, HideBySig
    GetSegmentLength(Double, Double, Tolerance): PrivateScope, Public, HideBySig
    Set(Curve2d, Point2d, Double): PrivateScope, Public, HideBySig
    Set(Curve2d, Curve2d, Double, Double): PrivateScope, Public, HideBySig
    Set(Point2d, Point2d): PrivateScope, Public, HideBySig
    Set(Point2d, Vector2d): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.CircularArc2d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Curve2d
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2d, Autodesk.AutoCAD.Geometry.Point2d, Double, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2d, Autodesk.AutoCAD.Geometry.Point2d, Autodesk.AutoCAD.Geometry.Point2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2d, Double, Double, Double, Autodesk.AutoCAD.Geometry.Vector2d, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2d, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point2d EndPoint 'get ' : 
    Autodesk.AutoCAD.Geometry.Point2d StartPoint 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector2d ReferenceVector 'get set' : 
    Boolean IsClockWise 'get ' : 
    Double EndAngle 'get ' : 
    Double StartAngle 'get ' : 
    Double Radius 'get set' : 
    Autodesk.AutoCAD.Geometry.Point2d Center 'get set' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    IntersectWith(CircularArc2d): PrivateScope, Public, HideBySig
    IntersectWith(CircularArc2d, Tolerance): PrivateScope, Public, HideBySig
    IntersectWith(LinearEntity2d): PrivateScope, Public, HideBySig
    IntersectWith(LinearEntity2d, Tolerance): PrivateScope, Public, HideBySig
    GetTangent(Point2d): PrivateScope, Public, HideBySig
    GetTangent(Point2d, Tolerance): PrivateScope, Public, HideBySig
    IsInside(Point2d): PrivateScope, Public, HideBySig
    IsInside(Point2d, Tolerance): PrivateScope, Public, HideBySig
    get_Center(): PrivateScope, Public, HideBySig, SpecialName
    set_Center(Point2d): PrivateScope, Public, HideBySig, SpecialName
    get_Radius(): PrivateScope, Public, HideBySig, SpecialName
    set_Radius(Double): PrivateScope, Public, HideBySig, SpecialName
    get_StartAngle(): PrivateScope, Public, HideBySig, SpecialName
    get_EndAngle(): PrivateScope, Public, HideBySig, SpecialName
    SetAngles(Double, Double): PrivateScope, Public, HideBySig
    get_IsClockWise(): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceVector(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferenceVector(Vector2d): PrivateScope, Public, HideBySig, SpecialName
    get_StartPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_EndPoint(): PrivateScope, Public, HideBySig, SpecialName
    SetToComplement(): PrivateScope, Public, HideBySig
    Set(Curve2d, Curve2d, Curve2d, Double, Double, Double): PrivateScope, Public, HideBySig
    Set(Curve2d, Curve2d, Double, Double, Double): PrivateScope, Public, HideBySig
    Set(Point2d, Point2d, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Set(Point2d, Point2d, Point2d): PrivateScope, Public, HideBySig
    Set(Point2d, Double, Double, Double, Vector2d, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Set(Point2d, Double): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.LineSegment3d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.LinearEntity3d
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Vector3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Length 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d EndPoint 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d MidPoint 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d StartPoint 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    GetBisector(): PrivateScope, Public, HideBySig
    BaryComb(Double): PrivateScope, Public, HideBySig
    get_StartPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_MidPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_EndPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    Set(Curve3d, Point3d, Double): PrivateScope, Public, HideBySig
    Set(Curve3d, Curve3d, Double, Double): PrivateScope, Public, HideBySig
    Set(Point3d, Point3d): PrivateScope, Public, HideBySig
    Set(Point3d, Vector3d): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.CircularArc3d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Curve3d
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Vector3d, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Vector3d, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d EndPoint 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d StartPoint 'get ' : 
    Double EndAngle 'get ' : 
    Double StartAngle 'get ' : 
    Double Radius 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d ReferenceVector 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d Center 'get set' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    ClosestPointToPlane(PlanarEntity): PrivateScope, Public, HideBySig
    ClosestPointToPlane(PlanarEntity, Tolerance): PrivateScope, Public, HideBySig
    IntersectWith(PlanarEntity): PrivateScope, Public, HideBySig
    IntersectWith(PlanarEntity, Tolerance): PrivateScope, Public, HideBySig
    IntersectWith(CircularArc3d): PrivateScope, Public, HideBySig
    IntersectWith(CircularArc3d, Tolerance): PrivateScope, Public, HideBySig
    IntersectWith(LinearEntity3d): PrivateScope, Public, HideBySig
    IntersectWith(LinearEntity3d, Tolerance): PrivateScope, Public, HideBySig
    ProjectedIntersectWith(LinearEntity3d, Vector3d): PrivateScope, Public, HideBySig
    ProjectedIntersectWith(LinearEntity3d, Vector3d, Tolerance): PrivateScope, Public, HideBySig
    GetTangent(Point3d): PrivateScope, Public, HideBySig
    GetTangent(Point3d, Tolerance): PrivateScope, Public, HideBySig
    GetPlane(): PrivateScope, Public, HideBySig
    IsInside(Point3d): PrivateScope, Public, HideBySig
    IsInside(Point3d, Tolerance): PrivateScope, Public, HideBySig
    get_Center(): PrivateScope, Public, HideBySig, SpecialName
    set_Center(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceVector(): PrivateScope, Public, HideBySig, SpecialName
    SetAxes(Vector3d, Vector3d): PrivateScope, Public, HideBySig
    get_Radius(): PrivateScope, Public, HideBySig, SpecialName
    set_Radius(Double): PrivateScope, Public, HideBySig, SpecialName
    get_StartAngle(): PrivateScope, Public, HideBySig, SpecialName
    get_EndAngle(): PrivateScope, Public, HideBySig, SpecialName
    SetAngles(Double, Double): PrivateScope, Public, HideBySig
    get_StartPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_EndPoint(): PrivateScope, Public, HideBySig, SpecialName
    Set(Curve3d, Curve3d, Curve3d, Double, Double, Double): PrivateScope, Public, HideBySig
    Set(Curve3d, Curve3d, Double, Double, Double): PrivateScope, Public, HideBySig
    Set(Point3d, Point3d, Point3d): PrivateScope, Public, HideBySig
    Set(Point3d, Vector3d, Vector3d, Double, Double, Double): PrivateScope, Public, HideBySig
    Set(Point3d, Vector3d, Double): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.ProxyEntity: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
  Properties:
    Autodesk.AutoCAD.DatabaseServices.GraphicsMetafileType GraphicsMetafileType 'get ' : 
    System.String ApplicationDescription 'get ' : 
    System.String OriginalDxfName 'get ' : 
    System.String OriginalClassName 'get ' : 
    Int32 ProxyFlags 'get ' : 
  Methods:
    get_ProxyFlags(): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalClassName(): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalDxfName(): PrivateScope, Public, HideBySig, SpecialName
    get_ApplicationDescription(): PrivateScope, Public, HideBySig, SpecialName
    GetReferences(): PrivateScope, Public, HideBySig
    get_GraphicsMetafileType(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.GraphicsMetafileType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.GraphicsMetafileType NoMetafile = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GraphicsMetafileType BoundingBox = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GraphicsMetafileType FullGraphics = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.RegionAreaProperties: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Autodesk.AutoCAD.DatabaseServices.Extents2d Extents 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector2d RadiiOfGyration 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector2d PrincipalAxes [Int32] 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector2d PrincipalMoments 'get ' : 
    Double ProductOfInertia 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector2d MomentsOfInertia 'get ' : 
    Autodesk.AutoCAD.Geometry.Point2d Centroid 'get ' : 
    Double Area 'get ' : 
    Double Perimeter 'get ' : 
  Methods:
    get_Perimeter(): PrivateScope, Public, HideBySig, SpecialName
    get_Area(): PrivateScope, Public, HideBySig, SpecialName
    get_Centroid(): PrivateScope, Public, HideBySig, SpecialName
    get_MomentsOfInertia(): PrivateScope, Public, HideBySig, SpecialName
    get_ProductOfInertia(): PrivateScope, Public, HideBySig, SpecialName
    get_PrincipalMoments(): PrivateScope, Public, HideBySig, SpecialName
    get_PrincipalAxes(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_RadiiOfGyration(): PrivateScope, Public, HideBySig, SpecialName
    get_Extents(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.SequenceEnd: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.Shape: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId ShapeIndex 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId StyleId 'get set' : 
    Int16 ShapeNumber 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get set' : 
    Double Thickness 'get set' : 
    Double Oblique 'get set' : 
    Double WidthFactor 'get set' : 
    Double Rotation 'get set' : 
    System.String Name 'get set' : 
    Double Size 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Position 'get set' : 
  Methods:
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Rotation(): PrivateScope, Public, HideBySig, SpecialName
    set_Rotation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_WidthFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_WidthFactor(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Oblique(): PrivateScope, Public, HideBySig, SpecialName
    set_Oblique(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Thickness(): PrivateScope, Public, HideBySig, SpecialName
    set_Thickness(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    set_Normal(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_ShapeNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_ShapeNumber(Int16): PrivateScope, Public, HideBySig, SpecialName
    get_StyleId(): PrivateScope, Public, HideBySig, SpecialName
    set_StyleId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_ShapeIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_ShapeIndex(ObjectId): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.Solid: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get set' : 
    Double Thickness 'get set' : 
  Methods:
    GetPointAt(Int16): PrivateScope, Public, HideBySig
    SetPointAt(Int16, Point3d): PrivateScope, Public, HideBySig
    get_Thickness(): PrivateScope, Public, HideBySig, SpecialName
    set_Thickness(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    set_Normal(Vector3d): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.Trace: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get set' : 
    Double Thickness 'get set' : 
  Methods:
    GetPointAt(Int16): PrivateScope, Public, HideBySig
    SetPointAt(Int16, Point3d): PrivateScope, Public, HideBySig
    get_Thickness(): PrivateScope, Public, HideBySig, SpecialName
    set_Thickness(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    set_Normal(Vector3d): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.Xline: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Curve
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d SecondPoint 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d UnitDir 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d BasePoint 'get set' : 
  Methods:
    get_BasePoint(): PrivateScope, Public, HideBySig, SpecialName
    set_BasePoint(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_UnitDir(): PrivateScope, Public, HideBySig, SpecialName
    set_UnitDir(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_SecondPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_SecondPoint(Point3d): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.Geometry.KnotCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Int32 NumberOfIntervals 'get ' : 
    Double EndParameter 'get ' : 
    Double StartParameter 'get ' : 
    Double Tolerance 'get set' : 
    Int32 Count 'get ' : 
    Double Item [Int32] 'get set' : 
  Methods:
    CopyTo(Double[], Int32): PrivateScope, Public, HideBySig
    Add(Double): PrivateScope, Public, HideBySig
    Contains(Double): PrivateScope, Public, HideBySig
    Insert(Int32, Double): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Double): PrivateScope, Public, HideBySig, SpecialName
    RemoveAt(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Tolerance(): PrivateScope, Public, HideBySig, SpecialName
    set_Tolerance(Double): PrivateScope, Public, HideBySig, SpecialName
    GetDistinctKnots(): PrivateScope, Public, HideBySig
    get_StartParameter(): PrivateScope, Public, HideBySig, SpecialName
    get_EndParameter(): PrivateScope, Public, HideBySig, SpecialName
    GetMultiplicityAt(Int32): PrivateScope, Public, HideBySig
    get_NumberOfIntervals(): PrivateScope, Public, HideBySig, SpecialName
    GetInterval(Int32, Double, Interval&(Out)): PrivateScope, Public, HideBySig
    IsOn(Double): PrivateScope, Public, HideBySig
    Reverse(): PrivateScope, Public, HideBySig
    SetRange(Double, Double): PrivateScope, Public, HideBySig
    Split(Double, Int32, Int32): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.Interval: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(Autodesk.AutoCAD.Geometry.Interval): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsSingleton 'get ' : 
    Boolean IsUnbounded 'get ' : 
    Boolean IsBoundedBelow 'get ' : 
    Boolean IsBoundedAbove 'get ' : 
    Boolean IsBounded 'get ' : 
    Double Tolerance 'get ' : 
    Double Length 'get ' : 
    Double Element 'get ' : 
    Double UpperBound 'get ' : 
    Double LowerBound 'get ' : 
    Autodesk.AutoCAD.Geometry.Interval Unbounded 'get ' : 
  Methods:
    get_Unbounded(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LowerBound(): PrivateScope, Public, HideBySig, SpecialName
    get_UpperBound(): PrivateScope, Public, HideBySig, SpecialName
    get_Element(): PrivateScope, Public, HideBySig, SpecialName
    GetBounds(): PrivateScope, Public, HideBySig
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_Tolerance(): PrivateScope, Public, HideBySig, SpecialName
    GetMerge(Interval): PrivateScope, Public, HideBySig
    Subtract(Interval): PrivateScope, Public, HideBySig
    IntersectWith(Interval): PrivateScope, Public, HideBySig
    get_IsBounded(): PrivateScope, Public, HideBySig, SpecialName
    get_IsBoundedAbove(): PrivateScope, Public, HideBySig, SpecialName
    get_IsBoundedBelow(): PrivateScope, Public, HideBySig, SpecialName
    get_IsUnbounded(): PrivateScope, Public, HideBySig, SpecialName
    get_IsSingleton(): PrivateScope, Public, HideBySig, SpecialName
    IsDisjoint(Interval): PrivateScope, Public, HideBySig
    Contains(Double): PrivateScope, Public, HideBySig
    Contains(Interval): PrivateScope, Public, HideBySig
    IsContinuousAtUpper(Interval): PrivateScope, Public, HideBySig
    IsOverlapAtUpper(Interval, Interval): PrivateScope, Public, HideBySig
    IsEqualAtUpper(Double): PrivateScope, Public, HideBySig
    IsEqualAtUpper(Interval): PrivateScope, Public, HideBySig
    IsEqualAtLower(Double): PrivateScope, Public, HideBySig
    IsEqualAtLower(Interval): PrivateScope, Public, HideBySig
    IsPeriodicallyOn(Double, Double&(Out)): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.FitData: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Periodic 'get set' : 
    Autodesk.AutoCAD.Geometry.KnotParameterizationEnum KnotParam 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d EndTangent 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d StartTangent 'get set' : 
    Boolean TangentsExist 'get set' : 
    Double FitTolerance 'get set' : 
    Int32 Degree 'get set' : 
  Methods:
    GetFitPoints(): PrivateScope, Public, HideBySig
    get_Degree(): PrivateScope, Public, HideBySig, SpecialName
    set_Degree(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_FitTolerance(): PrivateScope, Public, HideBySig, SpecialName
    set_FitTolerance(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TangentsExist(): PrivateScope, Public, HideBySig, SpecialName
    set_TangentsExist(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_StartTangent(): PrivateScope, Public, HideBySig, SpecialName
    set_StartTangent(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_EndTangent(): PrivateScope, Public, HideBySig, SpecialName
    set_EndTangent(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_KnotParam(): PrivateScope, Public, HideBySig, SpecialName
    set_KnotParam(KnotParameterizationEnum): PrivateScope, Public, HideBySig, SpecialName
    get_Periodic(): PrivateScope, Public, HideBySig, SpecialName
    set_Periodic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    IsEqualTo(FitData): PrivateScope, Public, HideBySig
    IsEqualTo(FitData, Tolerance): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Inequality(FitData, FitData): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(FitData, FitData): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Struct Autodesk.AutoCAD.Geometry.KnotParameterizationEnum: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.Geometry.KnotParameterizationEnum Chord = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.KnotParameterizationEnum SqrtChord = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.KnotParameterizationEnum Uniform = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.KnotParameterizationEnum CustomParameterization = 15 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.KnotParameterizationEnum NotDefinedParameterization = 16 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.NurbsData: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Double KnotTolerance 'get ' : 
    Double ControlPointTolerance 'get ' : 
    Boolean Periodic 'get ' : 
    Boolean Closed 'get ' : 
    Boolean Rational 'get ' : 
    Int32 Degree 'get ' : 
  Methods:
    get_Degree(): PrivateScope, Public, HideBySig, SpecialName
    get_Rational(): PrivateScope, Public, HideBySig, SpecialName
    get_Closed(): PrivateScope, Public, HideBySig, SpecialName
    get_Periodic(): PrivateScope, Public, HideBySig, SpecialName
    GetControlPoints(): PrivateScope, Public, HideBySig
    GetKnots(): PrivateScope, Public, HideBySig
    GetWeights(): PrivateScope, Public, HideBySig
    get_ControlPointTolerance(): PrivateScope, Public, HideBySig, SpecialName
    get_KnotTolerance(): PrivateScope, Public, HideBySig, SpecialName
    IsEqualTo(NurbsData): PrivateScope, Public, HideBySig
    IsEqualTo(NurbsData, Tolerance): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Inequality(NurbsData, NurbsData): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(NurbsData, NurbsData): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.SplineType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.SplineType FitPoints = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SplineType ControlPoints = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.OrientationType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.OrientationType CounterClockwise = -1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.OrientationType NoOrientation = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.OrientationType Clockwise = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.MapChannel: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.MapChannel AllChannels = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.MapChannel MapChannels = 1 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.Geometry.IntegerCollectionEnumerator: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.Geometry.IntegerCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    Int32 Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Autodesk.AutoCAD.GraphicsInterface.PixelBGRA32: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Byte, Byte, Byte, Byte): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Byte Alpha 'get set' : 
    Byte Blue  'get set' : 
    Byte Green 'get set' : 
    Byte Red   'get set' : 
  Methods:
    init(): PrivateScope, Public, HideBySig
    get_Red(): PrivateScope, Public, HideBySig, SpecialName
    set_Red(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_Green(): PrivateScope, Public, HideBySig, SpecialName
    set_Green(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_Blue(): PrivateScope, Public, HideBySig, SpecialName
    set_Blue(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_Alpha(): PrivateScope, Public, HideBySig, SpecialName
    set_Alpha(Byte): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.ImageBGRA32: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(UInt32, UInt32, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr Image 'get set' : 
    UInt32 Height 'get set' : 
    UInt32 Width 'get set' : 
  Methods:
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Width(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Image(): PrivateScope, Public, HideBySig, SpecialName
    set_Image(IntPtr): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.Polyline: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3dCollection, Autodesk.AutoCAD.Geometry.Vector3d, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr BaseSubEntMarker 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3dCollection Points 'get set' : 
  Methods:
    get_Points(): PrivateScope, Public, HideBySig, SpecialName
    set_Points(Point3dCollection): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    set_Normal(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_BaseSubEntMarker(): PrivateScope, Public, HideBySig, SpecialName
    set_BaseSubEntMarker(IntPtr): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.PolylineCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Count 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.Polyline Item [Int32] 'get set' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Polyline): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(Polyline): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RemoveAt(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.GraphicsInterface.ClipBoundary: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean DrawBoundary 'get set' : 
    Double BackClipZ 'get set' : 
    Double FrontClipZ 'get set' : 
    Boolean ClippingBack 'get set' : 
    Boolean ClippingFront 'get set' : 
    Autodesk.AutoCAD.Geometry.Matrix3d TransformInverseBlockRefXForm 'get set' : 
    Autodesk.AutoCAD.Geometry.Matrix3d TransformToClipSpace 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Point 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d NormalVector 'get set' : 
  Methods:
    get_NormalVector(): PrivateScope, Public, HideBySig, SpecialName
    set_NormalVector(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_Point(): PrivateScope, Public, HideBySig, SpecialName
    set_Point(Point3d): PrivateScope, Public, HideBySig, SpecialName
    GetAptPoints(): PrivateScope, Public, HideBySig
    SetAptPoints(Point2dCollection): PrivateScope, Public, HideBySig
    get_TransformToClipSpace(): PrivateScope, Public, HideBySig, SpecialName
    set_TransformToClipSpace(Matrix3d): PrivateScope, Public, HideBySig, SpecialName
    get_TransformInverseBlockRefXForm(): PrivateScope, Public, HideBySig, SpecialName
    set_TransformInverseBlockRefXForm(Matrix3d): PrivateScope, Public, HideBySig, SpecialName
    get_ClippingFront(): PrivateScope, Public, HideBySig, SpecialName
    set_ClippingFront(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ClippingBack(): PrivateScope, Public, HideBySig, SpecialName
    set_ClippingBack(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_FrontClipZ(): PrivateScope, Public, HideBySig, SpecialName
    set_FrontClipZ(Double): PrivateScope, Public, HideBySig, SpecialName
    get_BackClipZ(): PrivateScope, Public, HideBySig, SpecialName
    set_BackClipZ(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DrawBoundary(): PrivateScope, Public, HideBySig, SpecialName
    set_DrawBoundary(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Interface Autodesk.AutoCAD.Runtime.IExtensionApplication: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Terminate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Autodesk.AutoCAD.Runtime.ExtensionLoader: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MarshalByRefObject
  Methods:
    Load(String): PrivateScope, Public, Static, HideBySig, HasSecurity
    IsLoaded(String): PrivateScope, Public, Static, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.FindFileHint: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.FindFileHint Default = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FindFileHint FontFile = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FindFileHint CompiledShapeFile = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FindFileHint TrueTypeFontFile = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FindFileHint EmbeddedImageFile = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FindFileHint XRefDrawing = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FindFileHint PatternFile = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FindFileHint ArxApplication = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FindFileHint FontMapFile = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FindFileHint UnderlayFile = 9 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.ModelerFlavor: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.ModelerFlavor Full = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ModelerFlavor RegionsOnly = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ModelerFlavor ObjectsOnly = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.ApplicationLoadReasons: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.ApplicationLoadReasons OnProxyDetection = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ApplicationLoadReasons OnAutoCADStartup = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ApplicationLoadReasons OnCommandInvocation = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ApplicationLoadReasons OnLoadRequest = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ApplicationLoadReasons LoadDisabled = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ApplicationLoadReasons TransparentlyLoadable = 32 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.PasswordOptions: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.PasswordOptions Default = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PasswordOptions UpperCase = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PasswordOptions IsExternalReference = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.BlockTable: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.SymbolTable
Class Autodesk.AutoCAD.Geometry.Vector3dCollectionEnumerator: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.Geometry.Vector3dCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    Autodesk.AutoCAD.Geometry.Vector3d Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.BlockInsertionPointsEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, BlockInsertionPointsEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, BlockInsertionPointsEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.BlockInsertionPointsEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.BlockTableRecord, Autodesk.AutoCAD.Geometry.Point3dCollection, Autodesk.AutoCAD.Geometry.Vector3dCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Vector3dCollection AlignmentVectors 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3dCollection InsertionPoints 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.BlockTableRecord BlockTableRecord 'get ' : 
  Methods:
    get_BlockTableRecord(): PrivateScope, Public, HideBySig, SpecialName
    get_InsertionPoints(): PrivateScope, Public, HideBySig, SpecialName
    get_AlignmentVectors(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.BlockTableRecordEnumerator: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Autodesk.AutoCAD.DatabaseServices.XrefStatus: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.XrefStatus NotAnXref = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.XrefStatus Resolved = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.XrefStatus Unloaded = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.XrefStatus Unreferenced = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.XrefStatus FileNotFound = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.XrefStatus Unresolved = 5 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.BlockScaling: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.BlockScaling Any = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.BlockScaling Uniform = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.MaterialDiffuseComponent: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.GraphicsInterface.MaterialColor, Autodesk.AutoCAD.GraphicsInterface.MaterialMap): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.MaterialMap Map 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialColor Color 'get ' : 
  Methods:
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    get_Map(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Inequality(MaterialDiffuseComponent, MaterialDiffuseComponent): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(MaterialDiffuseComponent, MaterialDiffuseComponent): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Struct Autodesk.AutoCAD.GraphicsInterface.MaterialSpecularComponent: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.GraphicsInterface.MaterialColor, Autodesk.AutoCAD.GraphicsInterface.MaterialMap, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Gloss 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialMap Map 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialColor Color 'get ' : 
  Methods:
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    get_Map(): PrivateScope, Public, HideBySig, SpecialName
    get_Gloss(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Inequality(MaterialSpecularComponent, MaterialSpecularComponent): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(MaterialSpecularComponent, MaterialSpecularComponent): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Struct Autodesk.AutoCAD.GraphicsInterface.MaterialOpacityComponent: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Autodesk.AutoCAD.GraphicsInterface.MaterialMap): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Percentage 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialMap Map 'get ' : 
  Methods:
    get_Map(): PrivateScope, Public, HideBySig, SpecialName
    get_Percentage(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Inequality(MaterialOpacityComponent, MaterialOpacityComponent): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(MaterialOpacityComponent, MaterialOpacityComponent): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Struct Autodesk.AutoCAD.GraphicsInterface.MaterialRefractionComponent: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Autodesk.AutoCAD.GraphicsInterface.MaterialMap): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Index 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialMap Map 'get ' : 
  Methods:
    get_Map(): PrivateScope, Public, HideBySig, SpecialName
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Inequality(MaterialRefractionComponent, MaterialRefractionComponent): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(MaterialRefractionComponent, MaterialRefractionComponent): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Struct Autodesk.AutoCAD.GraphicsInterface.MaterialNormalMapComponent: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.GraphicsInterface.MaterialMap, Autodesk.AutoCAD.GraphicsInterface.NormalMapMethod, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Strength 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.NormalMapMethod Method 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialMap Map 'get ' : 
  Methods:
    get_Map(): PrivateScope, Public, HideBySig, SpecialName
    get_Method(): PrivateScope, Public, HideBySig, SpecialName
    get_Strength(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Inequality(MaterialNormalMapComponent, MaterialNormalMapComponent): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(MaterialNormalMapComponent, MaterialNormalMapComponent): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Struct Autodesk.AutoCAD.GraphicsInterface.NormalMapMethod: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.NormalMapMethod TangentSpaceNormalMap = 0 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.IlluminationModel: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.IlluminationModel BlinnShader = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.IlluminationModel MetalShader = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.ChannelFlags: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.ChannelFlags None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ChannelFlags UseDiffuse = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ChannelFlags UseSpecular = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ChannelFlags UseReflection = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ChannelFlags UseOpacity = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ChannelFlags UseBump = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ChannelFlags UseRefraction = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ChannelFlags UseAll = 63 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.Mode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.Mode Realistic = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Mode Advanced = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.LuminanceMode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.LuminanceMode SelfIllumination = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.LuminanceMode Luminance = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.GlobalIlluminationMode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.GlobalIlluminationMode GlobalIlluminationNone = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.GlobalIlluminationMode GlobalIlluminationCast = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.GlobalIlluminationMode GlobalIlluminationReceive = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.GlobalIlluminationMode GlobalIlluminationCastAndReceive = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.FinalGatherMode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.FinalGatherMode FinalGatherNone = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.FinalGatherMode FinalGatherCast = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.FinalGatherMode FinalGatherReceive = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.FinalGatherMode FinalGatherCastAndReceive = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.Projection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.Projection InheritProjection = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Projection Planar = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Projection Box = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Projection Cylinder = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Projection Sphere = 4 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.Tiling: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.Tiling InheritTiling = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Tiling Tile = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Tiling Crop = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Tiling Clamp = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.Tiling Mirror = 4 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.AutoTransform: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.AutoTransform InheritAutoTransform = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.AutoTransform None = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.AutoTransform TransformObject = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.AutoTransform Model = 4 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.RapidRTQuitCondition: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.RapidRTQuitCondition ERenderLevel = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.RapidRTQuitCondition ERenderTime = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.RapidRTLightingMode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.RapidRTLightingMode Simplified = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.RapidRTLightingMode Basic = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.RapidRTLightingMode Advanced = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.RapidRTFilterType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.RapidRTFilterType Box = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.RapidRTFilterType Triangle = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.RapidRTFilterType Gaussian = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.RapidRTFilterType Lanczos = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.RapidRTFilterType Mitchell = 4 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.Geometry.IntPtrCollectionEnumerator: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.Geometry.IntPtrCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    IntPtr Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.Geometry.UInt32CollectionEnumerator: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.Geometry.UInt32Collection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    UInt32 Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.Colors.EntityColorCollectionEnumerator: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.Colors.EntityColorCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    Autodesk.AutoCAD.Colors.EntityColor Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.Colors.TransparencyCollectionEnumerator: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.Colors.TransparencyCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    Autodesk.AutoCAD.Colors.Transparency Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.GraphicsInterface.LinetypeCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(Autodesk.AutoCAD.GraphicsInterface.Linetype[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    Autodesk.AutoCAD.GraphicsInterface.Linetype Item [Int32] 'get set' : 
  Methods:
    CopyTo(Linetype[], Int32): PrivateScope, Public, HideBySig
    Add(Linetype): PrivateScope, Public, HideBySig
    Contains(Linetype): PrivateScope, Public, HideBySig
    IndexOf(Linetype): PrivateScope, Public, HideBySig
    Insert(Int32, Linetype): PrivateScope, Public, HideBySig
    Remove(Linetype): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Linetype): PrivateScope, Public, HideBySig, SpecialName
    RemoveAt(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.Geometry.Curve2d: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Entity2d
  Properties:
    Autodesk.AutoCAD.Geometry.Point2d EndPoint 'get ' : 
    Autodesk.AutoCAD.Geometry.Point2d StartPoint 'get ' : 
    Boolean HasEndPoint 'get ' : 
    Boolean HasStartPoint 'get ' : 
    Autodesk.AutoCAD.Geometry.BoundBlock2d OrthoBoundBlock 'get ' : 
    Autodesk.AutoCAD.Geometry.BoundBlock2d BoundBlock 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    GetInterval(): PrivateScope, Public, HideBySig
    SetInterval(Interval): PrivateScope, Public, HideBySig
    GetReverseParameterCurve(): PrivateScope, Public, HideBySig
    GetDistanceTo(Curve2d): PrivateScope, Public, HideBySig
    GetDistanceTo(Curve2d, Tolerance): PrivateScope, Public, HideBySig
    GetDistanceTo(Point2d): PrivateScope, Public, HideBySig
    GetDistanceTo(Point2d, Tolerance): PrivateScope, Public, HideBySig
    GetClosestPointTo(Curve2d): PrivateScope, Public, HideBySig
    GetClosestPointTo(Curve2d, Tolerance): PrivateScope, Public, HideBySig
    GetClosestPointTo(Point2d): PrivateScope, Public, HideBySig
    GetClosestPointTo(Point2d, Tolerance): PrivateScope, Public, HideBySig
    GetNormalPoint(Point2d): PrivateScope, Public, HideBySig
    GetNormalPoint(Point2d, Tolerance): PrivateScope, Public, HideBySig
    IsOn(Double): PrivateScope, Public, HideBySig
    IsOn(Double, Tolerance): PrivateScope, Public, HideBySig
    IsOn(Point2d, Double&(Out)): PrivateScope, Public, HideBySig
    IsOn(Point2d, Double&(Out), Tolerance): PrivateScope, Public, HideBySig
    IsOn(Point2d): PrivateScope, Public, HideBySig
    IsOn(Point2d, Tolerance): PrivateScope, Public, HideBySig
    GetParameterOf(Point2d): PrivateScope, Public, HideBySig
    GetParameterOf(Point2d, Tolerance): PrivateScope, Public, HideBySig
    GetTrimmedOffset(Double, OffsetCurveExtensionType): PrivateScope, Public, HideBySig
    GetTrimmedOffset(Double, OffsetCurveExtensionType, Tolerance): PrivateScope, Public, HideBySig
    IsClosed(): PrivateScope, Public, HideBySig
    IsClosed(Tolerance): PrivateScope, Public, HideBySig
    IsPeriodic(Double&(Out)): PrivateScope, Public, HideBySig
    IsLinear(Line2d&(Out)): PrivateScope, Public, HideBySig
    IsLinear(Line2d&(Out), Tolerance): PrivateScope, Public, HideBySig
    GetLength(Double, Double): PrivateScope, Public, HideBySig
    GetLength(Double, Double, Tolerance): PrivateScope, Public, HideBySig
    GetParameterAtLength(Double, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetParameterAtLength(Double, Double, Boolean(HasFieldMarshal), Tolerance): PrivateScope, Public, HideBySig
    GetArea(Double, Double): PrivateScope, Public, HideBySig
    GetArea(Double, Double, Tolerance): PrivateScope, Public, HideBySig
    IsDegenerate(Entity2d&(Out)): PrivateScope, Public, HideBySig
    IsDegenerate(Entity2d&(Out), Tolerance): PrivateScope, Public, HideBySig
    GetSplitCurves(Double): PrivateScope, Public, HideBySig
    Explode(Interval): PrivateScope, Public, HideBySig
    get_BoundBlock(): PrivateScope, Public, HideBySig, SpecialName
    GetBoundBlockOf(Interval): PrivateScope, Public, HideBySig
    get_OrthoBoundBlock(): PrivateScope, Public, HideBySig, SpecialName
    GetOrthoBoundBlockOf(Interval): PrivateScope, Public, HideBySig
    get_HasStartPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_HasEndPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_StartPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_EndPoint(): PrivateScope, Public, HideBySig, SpecialName
    EvaluatePoint(Double): PrivateScope, Public, HideBySig
    GetSamplePoints(Int32): PrivateScope, Public, HideBySig
    GetSamplePoints(Double, Double, Double): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.GraphicsInterface.PositionBehavior: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.PositionBehavior World = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.PositionBehavior Viewport = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.PositionBehavior Screen = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.PositionBehavior ScreenLocalOrigin = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.PositionBehavior WorldWithScreenOffset = 4 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.ScaleBehavior: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.ScaleBehavior World = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ScaleBehavior Viewport = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ScaleBehavior Screen = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ScaleBehavior ViewportLocalOrigin = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ScaleBehavior ScreenLocalOrigin = 4 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.OrientationBehavior: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.OrientationBehavior World = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.OrientationBehavior Screen = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.OrientationBehavior ZAxis = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.ArcType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.ArcType ArcSimple = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ArcType ArcSector = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ArcType ArcChord = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.TransparencyMode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.TransparencyMode TransparencyOff = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.TransparencyMode Transparency1Bit = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.TransparencyMode Transparency8Bit = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.ImageSource: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.ImageSource FromDwg = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ImageSource FromOleObject = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ImageSource FromRender = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.FrontAndBackClipping: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Boolean, Boolean, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Back 'get ' : 
    Double Front 'get ' : 
    Boolean ClipBack 'get ' : 
    Boolean ClipFront 'get ' : 
  Methods:
    get_ClipFront(): PrivateScope, Public, HideBySig, SpecialName
    get_ClipBack(): PrivateScope, Public, HideBySig, SpecialName
    get_Front(): PrivateScope, Public, HideBySig, SpecialName
    get_Back(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    IsEqualTo(FrontAndBackClipping): PrivateScope, Public, HideBySig
    IsEqualTo(FrontAndBackClipping, Tolerance): PrivateScope, Public, HideBySig
    op_Inequality(FrontAndBackClipping, FrontAndBackClipping): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(FrontAndBackClipping, FrontAndBackClipping): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.GraphicsInterface.ProceduralTexture: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.MaterialTexture
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.GraphicsInterface.WoodTexture: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.ProceduralTexture
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double GrainThickness 'get set' : 
    Double AxialNoise 'get set' : 
    Double RadialNoise 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialColor Color2 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialColor Color1 'get set' : 
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    Set(WoodTexture): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Equality(WoodTexture, WoodTexture): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(WoodTexture, WoodTexture): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    get_Color1(): PrivateScope, Public, HideBySig, SpecialName
    set_Color1(MaterialColor): PrivateScope, Public, HideBySig, SpecialName
    get_Color2(): PrivateScope, Public, HideBySig, SpecialName
    set_Color2(MaterialColor): PrivateScope, Public, HideBySig, SpecialName
    get_RadialNoise(): PrivateScope, Public, HideBySig, SpecialName
    set_RadialNoise(Double): PrivateScope, Public, HideBySig, SpecialName
    get_AxialNoise(): PrivateScope, Public, HideBySig, SpecialName
    set_AxialNoise(Double): PrivateScope, Public, HideBySig, SpecialName
    get_GrainThickness(): PrivateScope, Public, HideBySig, SpecialName
    set_GrainThickness(Double): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.GraphicsInterface.MarbleTexture: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.ProceduralTexture
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double VeinWidth 'get set' : 
    Double VeinSpacing 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialColor VeinColor 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialColor StoneColor 'get set' : 
  Methods:
    get_StoneColor(): PrivateScope, Public, HideBySig, SpecialName
    set_StoneColor(MaterialColor): PrivateScope, Public, HideBySig, SpecialName
    get_VeinColor(): PrivateScope, Public, HideBySig, SpecialName
    set_VeinColor(MaterialColor): PrivateScope, Public, HideBySig, SpecialName
    get_VeinSpacing(): PrivateScope, Public, HideBySig, SpecialName
    set_VeinSpacing(Double): PrivateScope, Public, HideBySig, SpecialName
    get_VeinWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_VeinWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    Set(MarbleTexture): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Equality(MarbleTexture, MarbleTexture): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(MarbleTexture, MarbleTexture): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.GraphicsInterface.GenericTexture: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.ProceduralTexture
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object Definition 'get set' : 
  Methods:
    get_Definition(): PrivateScope, Public, HideBySig, SpecialName
    set_Definition(Object): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, HideBySig
    Set(GenericTexture): PrivateScope, Public, HideBySig
    CopyFrom(GenericTexture): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Equality(GenericTexture, GenericTexture): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(GenericTexture, GenericTexture): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.GraphicsInterface.ImageTexture: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.MaterialTexture
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.GraphicsInterface.ImageFileTexture: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.ImageTexture
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String SourceFileName 'get set' : 
  Methods:
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    op_Equality(ImageFileTexture, ImageFileTexture): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(ImageFileTexture, ImageFileTexture): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    get_SourceFileName(): PrivateScope, Public, HideBySig, SpecialName
    set_SourceFileName(String): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.Geometry.Entity2d: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Interfaces:
    System.ICloneable
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsEqualTo(Entity2d): PrivateScope, Public, HideBySig
    IsEqualTo(Entity2d, Tolerance): PrivateScope, Public, HideBySig
    TransformBy(Matrix2d): PrivateScope, Public, HideBySig
    TranslateBy(Vector2d): PrivateScope, Public, HideBySig
    RotateBy(Double, Point2d): PrivateScope, Public, HideBySig
    Mirror(Line2d): PrivateScope, Public, HideBySig
    ScaleBy(Double, Point2d): PrivateScope, Public, HideBySig
    IsOn(Point2d): PrivateScope, Public, HideBySig
    IsOn(Point2d, Tolerance): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.PointOnCurve2d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.PointEntity2d
    Void .ctor(Autodesk.AutoCAD.Geometry.Curve2d, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Curve2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point2d Point 'get ' : 
    Double Parameter 'get set' : 
    Autodesk.AutoCAD.Geometry.Curve2d Curve 'get set' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_Curve(): PrivateScope, Public, HideBySig, SpecialName
    set_Curve(Curve2d): PrivateScope, Public, HideBySig, SpecialName
    get_Parameter(): PrivateScope, Public, HideBySig, SpecialName
    set_Parameter(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Point(): PrivateScope, Public, HideBySig, SpecialName
    GetPointAtParameter(Double): PrivateScope, Public, HideBySig
    GetPointOnCurve(Curve2d, Double): PrivateScope, Public, HideBySig
    GetDerivative(Int32, Curve2d, Double): PrivateScope, Public, HideBySig
    GetDerivative(Int32, Double): PrivateScope, Public, HideBySig
    GetDerivative(Int32): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.Geometry.OffsetCurveExtensionType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.Geometry.OffsetCurveExtensionType Fillet = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.OffsetCurveExtensionType Chamfer = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.OffsetCurveExtensionType Extend = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.Geometry.BoundBlock2d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Entity2d
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2d, Autodesk.AutoCAD.Geometry.Vector2d, Autodesk.AutoCAD.Geometry.Vector2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2d, Autodesk.AutoCAD.Geometry.Point2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsBox 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector2d Direction2 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector2d Direction1 'get ' : 
    Autodesk.AutoCAD.Geometry.Point2d BasePoint 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    GetMaximumPoint(): PrivateScope, Public, HideBySig
    GetMinimumPoint(): PrivateScope, Public, HideBySig
    get_BasePoint(): PrivateScope, Public, HideBySig, SpecialName
    get_Direction1(): PrivateScope, Public, HideBySig, SpecialName
    get_Direction2(): PrivateScope, Public, HideBySig, SpecialName
    Set(Point2d, Vector2d, Vector2d): PrivateScope, Public, HideBySig
    Set(Point2d, Point2d): PrivateScope, Public, HideBySig
    Extend(Point2d): PrivateScope, Public, HideBySig
    Swell(Double): PrivateScope, Public, HideBySig
    Contains(Point2d): PrivateScope, Public, HideBySig
    IsDisjoint(BoundBlock2d): PrivateScope, Public, HideBySig
    get_IsBox(): PrivateScope, Public, HideBySig, SpecialName
    set_IsBox(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.Transaction: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Properties:
    Autodesk.AutoCAD.DatabaseServices.TransactionManager TransactionManager 'get ' : 
    Int32 NumberOfOpenedObjects 'get ' : 
  Methods:
    GetObject(ObjectId, OpenMode, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetObject(ObjectId, OpenMode, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetObject(ObjectId, OpenMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_NumberOfOpenedObjects(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetAllObjects(): PrivateScope, Public, HideBySig
    Commit(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Abort(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_TransactionManager(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    AddNewlyCreatedDBObject(DBObject, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.OpenCloseTransaction: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Transaction
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.TransactionManager TransactionManager 'get ' : 
  Methods:
    GetObject(ObjectId, OpenMode, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig
    GetObject(ObjectId, OpenMode, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig
    GetObject(ObjectId, OpenMode): PrivateScope, Public, Virtual, HideBySig
    Commit(): PrivateScope, Public, Virtual, HideBySig
    Abort(): PrivateScope, Public, Virtual, HideBySig
    get_TransactionManager(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    AddNewlyCreatedDBObject(DBObject, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.TableStyle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.ArrayList CellStyles 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Template 'get set' : 
    Boolean IsHeaderSuppressed 'get set' : 
    Boolean IsTitleSuppressed 'get set' : 
    Double VerticalCellMargin 'get set' : 
    Double HorizontalCellMargin 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.FlowDirection FlowDirection 'get set' : 
    Int32 BitFlags 'get set' : 
    System.String Description 'get set' : 
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Description(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Description(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BitFlags(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_BitFlags(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FlowDirection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_FlowDirection(FlowDirection): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_HorizontalCellMargin(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_HorizontalCellMargin(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_VerticalCellMargin(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_VerticalCellMargin(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsTitleSuppressed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsTitleSuppressed(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsHeaderSuppressed(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsHeaderSuppressed(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Template(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Template(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CellStyles(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    TextStyle(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TextStyle(RowType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTextStyle(ObjectId, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTextStyle(ObjectId, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    TextHeight(String): PrivateScope, Public, HideBySig
    TextHeight(RowType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTextHeight(Double, String): PrivateScope, Public, HideBySig
    SetTextHeight(Double, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Alignment(RowType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetAlignment(CellAlignment, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Color(RowType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetColor(Color, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BackgroundColor(RowType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetBackgroundColor(Color, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsBackgroundColorNone(RowType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetBackgroundColorNone(Boolean(HasFieldMarshal), Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GridLineWeight(GridLineType, RowType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetGridLineWeight(LineWeight, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GridColor(GridLineType, RowType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetGridColor(Color, Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GridVisibility(GridLineType, RowType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetGridVisibility(Boolean(HasFieldMarshal), Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    PostTableStyleToDatabase(Database, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DataType(RowType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UnitType(RowType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetDataType(DataType, UnitType, RowType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Format(RowType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetFormat(String, RowType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CellClass(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetCellClass(CellClass, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Margin(CellMargins, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetMargin(CellMargins, Double, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GridDoubleLineSpacing(GridLineType, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetGridDoubleLineSpacing(Double, GridLineType, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GridLineStyle(GridLineType, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetGridLineStyle(GridLineStyle, GridLineType, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GridLinetype(GridLineType, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetGridLinetype(ObjectId, GridLineType, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Autodesk.AutoCAD.DatabaseServices.CellClass: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.CellClass None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellClass Label = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.CellClass Data = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.Runtime.DynamicLinkerEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String FileName 'get ' : 
  Methods:
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.Runtime.ModuleLoadingEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, DynamicLinkerEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, DynamicLinkerEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.Runtime.ModuleLoadedEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, DynamicLinkerEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, DynamicLinkerEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.Runtime.ModuleLoadAbortedEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, DynamicLinkerEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, DynamicLinkerEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.Runtime.ModuleUnloadingEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, DynamicLinkerEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, DynamicLinkerEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.Runtime.ModuleUnloadedEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, DynamicLinkerEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, DynamicLinkerEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.Runtime.ModuleUnloadAbortedEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, DynamicLinkerEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, DynamicLinkerEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.Runtime.SystemObjects: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Properties:
    Autodesk.AutoCAD.Runtime.Variables Variables 'get ' : 
    Autodesk.AutoCAD.Runtime.DynamicLinker DynamicLinker 'get ' : 
    Autodesk.AutoCAD.Runtime.Dictionary ServiceDictionary 'get ' : 
    Autodesk.AutoCAD.Runtime.Dictionary ClassDictionary 'get ' : 
  Methods:
    get_ClassDictionary(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ServiceDictionary(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DynamicLinker(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Variables(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.RadialDimensionLarge: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Dimension
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Double, System.String, Autodesk.AutoCAD.DatabaseServices.ObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d OverrideCenter 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d JogPoint 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d ChordPoint 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Center 'get set' : 
    Double JogAngle 'get set' : 
  Methods:
    get_JogAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_JogAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Center(): PrivateScope, Public, HideBySig, SpecialName
    set_Center(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_ChordPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_ChordPoint(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_JogPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_JogPoint(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_OverrideCenter(): PrivateScope, Public, HideBySig, SpecialName
    set_OverrideCenter(Point3d): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.ArcDimension: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Dimension
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, System.String, Autodesk.AutoCAD.DatabaseServices.ObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean HasLeader 'get set' : 
    Boolean IsPartial 'get set' : 
    Int32 ArcSymbolType 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d XLine2Point 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d XLine1Point 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Leader2Point 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Leader1Point 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d CenterPoint 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d ArcPoint 'get set' : 
    Double ArcEndParam 'get set' : 
    Double ArcStartParam 'get set' : 
  Methods:
    get_ArcStartParam(): PrivateScope, Public, HideBySig, SpecialName
    set_ArcStartParam(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ArcEndParam(): PrivateScope, Public, HideBySig, SpecialName
    set_ArcEndParam(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ArcPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_ArcPoint(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_CenterPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_CenterPoint(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_Leader1Point(): PrivateScope, Public, HideBySig, SpecialName
    set_Leader1Point(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_Leader2Point(): PrivateScope, Public, HideBySig, SpecialName
    set_Leader2Point(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_XLine1Point(): PrivateScope, Public, HideBySig, SpecialName
    set_XLine1Point(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_XLine2Point(): PrivateScope, Public, HideBySig, SpecialName
    set_XLine2Point(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_ArcSymbolType(): PrivateScope, Public, HideBySig, SpecialName
    set_ArcSymbolType(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IsPartial(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPartial(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasLeader(): PrivateScope, Public, HideBySig, SpecialName
    set_HasLeader(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.SectionHitTestInfo: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.SectionSubItem SubItem 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d PtOnSegment 'get ' : 
    Int32 Index 'get ' : 
  Methods:
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    get_PtOnSegment(): PrivateScope, Public, HideBySig, SpecialName
    get_SubItem(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.SectionSubItem: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.SectionSubItem SectionSubItemNone = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SectionSubItem SectionLine = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SectionSubItem SectionLineTop = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SectionSubItem SectionLineBottom = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SectionSubItem BackLine = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SectionSubItem BackLineTop = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SectionSubItem BackLineBottom = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SectionSubItem VerticalLineTop = 64 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SectionSubItem VerticalLineBottom = 128 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.Section: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3dCollection, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Vector3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3dCollection, Autodesk.AutoCAD.Geometry.Vector3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double SectionPlaneOffset 'get set' : 
    Double BottomPlane 'get set' : 
    Double TopPlane 'get set' : 
    Double Elevation 'get set' : 
    Boolean IsLiveSectionEnabled 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Settings 'get ' : 
    System.Collections.Generic.IList`1[Autodesk.AutoCAD.Geometry.Point3d] Boundary 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3dCollection Vertices 'set' :  (Obsolete)
    Int32 NumVertices 'get ' :  (Obsolete)
    Autodesk.AutoCAD.Colors.Color IndicatorFillColor 'get set' : 
    Int32 IndicatorTransparency 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d VerticalDirection 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d ViewingDirection 'get set' : 
    System.String Name 'get set' : 
    Boolean HasJogs 'get ' : 
    Double ThicknessDepth 'get set' : 
    Boolean IsSlice 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.SectionState State 'get set' : 
  Methods:
    get_State(): PrivateScope, Public, HideBySig, SpecialName
    set_State(SectionState): PrivateScope, Public, HideBySig, SpecialName
    get_IsSlice(): PrivateScope, Public, HideBySig, SpecialName
    set_IsSlice(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ThicknessDepth(): PrivateScope, Public, HideBySig, SpecialName
    set_ThicknessDepth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_HasJogs(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_ViewingDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewingDirection(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalDirection(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    get_IndicatorTransparency(): PrivateScope, Public, HideBySig, SpecialName
    set_IndicatorTransparency(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_IndicatorFillColor(): PrivateScope, Public, HideBySig, SpecialName
    set_IndicatorFillColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_NumVertices(): PrivateScope, Public, HideBySig, SpecialName
    GetVertex(Int32): PrivateScope, Public, HideBySig (Obsolete)
    SetVertex(Int32, Point3d): PrivateScope, Public, HideBySig (Obsolete)
    AddVertex(Int32, Point3d): PrivateScope, Public, HideBySig (Obsolete)
    RemoveVertex(Int32): PrivateScope, Public, HideBySig (Obsolete)
    GetVertices(Point3dCollection): PrivateScope, Public, HideBySig (Obsolete)
    set_Vertices(Point3dCollection): PrivateScope, Public, HideBySig, SpecialName
    get_Boundary(): PrivateScope, Public, HideBySig, SpecialName
    Height(SectionHeight): PrivateScope, Public, HideBySig
    SetHeight(SectionHeight, Double): PrivateScope, Public, HideBySig
    HitTest(Point3d): PrivateScope, Public, HideBySig
    CreateJog(Point3d): PrivateScope, Public, HideBySig
    get_Settings(): PrivateScope, Public, HideBySig, SpecialName
    get_IsLiveSectionEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_IsLiveSectionEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    GenerateSectionGeometry(Entity, Array&(Out), Array&(Out), Array&(Out), Array&(Out), Array&(Out)): PrivateScope, Public, HideBySig
    get_Elevation(): PrivateScope, Public, HideBySig, SpecialName
    set_Elevation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TopPlane(): PrivateScope, Public, HideBySig, SpecialName
    set_TopPlane(Double): PrivateScope, Public, HideBySig, SpecialName
    get_BottomPlane(): PrivateScope, Public, HideBySig, SpecialName
    set_BottomPlane(Double): PrivateScope, Public, HideBySig, SpecialName
    get_SectionPlaneOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_SectionPlaneOffset(Double): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.SectionState: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.SectionState Plane = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SectionState Boundary = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SectionState Volume = 4 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.SectionHeight: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.SectionHeight HeightAboveSectionLine = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SectionHeight HeightBelowSectionLine = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.SectionSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.SectionType CurrentSectionType 'get set' : 
  Methods:
    Reset(SectionType): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, HideBySig
    get_CurrentSectionType(): PrivateScope, Public, HideBySig, SpecialName
    set_CurrentSectionType(SectionType): PrivateScope, Public, HideBySig, SpecialName
    GenerationOptions(SectionType): PrivateScope, Public, HideBySig
    SetGenerationOptions(SectionType, SectionGeneration): PrivateScope, Public, HideBySig
    GetSourceObjects(SectionType, ObjectIdCollection): PrivateScope, Public, HideBySig
    SetSourceObjects(SectionType, ObjectIdCollection): PrivateScope, Public, HideBySig
    DestinationBlock(SectionType): PrivateScope, Public, HideBySig
    SetDestinationBlock(SectionType, ObjectId): PrivateScope, Public, HideBySig
    DestinationFile(SectionType): PrivateScope, Public, HideBySig
    SetDestinationFile(SectionType, String): PrivateScope, Public, HideBySig
    Visibility(SectionType, SectionGeometry): PrivateScope, Public, HideBySig
    SetVisibility(SectionType, SectionGeometry, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Color(SectionType, SectionGeometry): PrivateScope, Public, HideBySig
    SetColor(SectionType, SectionGeometry, Color): PrivateScope, Public, HideBySig
    Layer(SectionType, SectionGeometry): PrivateScope, Public, HideBySig
    SetLayer(SectionType, SectionGeometry, String): PrivateScope, Public, HideBySig
    Linetype(SectionType, SectionGeometry): PrivateScope, Public, HideBySig
    SetLinetype(SectionType, SectionGeometry, String): PrivateScope, Public, HideBySig
    LinetypeScale(SectionType, SectionGeometry): PrivateScope, Public, HideBySig
    SetLinetypeScale(SectionType, SectionGeometry, Double): PrivateScope, Public, HideBySig
    PlotStyleName(SectionType, SectionGeometry): PrivateScope, Public, HideBySig
    SetPlotStyleName(SectionType, SectionGeometry, String): PrivateScope, Public, HideBySig
    LineWeight(SectionType, SectionGeometry): PrivateScope, Public, HideBySig
    SetLineWeight(SectionType, SectionGeometry, LineWeight): PrivateScope, Public, HideBySig
    FaceTransparency(SectionType, SectionGeometry): PrivateScope, Public, HideBySig
    SetFaceTransparency(SectionType, SectionGeometry, Int32): PrivateScope, Public, HideBySig
    EdgeTransparency(SectionType, SectionGeometry): PrivateScope, Public, HideBySig
    SetEdgeTransparency(SectionType, SectionGeometry, Int32): PrivateScope, Public, HideBySig
    HatchVisibility(SectionType, SectionGeometry): PrivateScope, Public, HideBySig
    SetHatchVisibility(SectionType, SectionGeometry, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetHatchPatternType(SectionType, SectionGeometry): PrivateScope, Public, HideBySig
    GetHatchPatternName(SectionType, SectionGeometry): PrivateScope, Public, HideBySig
    SetHatchPatternType(SectionType, SectionGeometry, HatchPatternType): PrivateScope, Public, HideBySig
    SetHatchPatternName(SectionType, SectionGeometry, String): PrivateScope, Public, HideBySig
    HatchAngle(SectionType, SectionGeometry): PrivateScope, Public, HideBySig
    SetHatchAngle(SectionType, SectionGeometry, Double): PrivateScope, Public, HideBySig
    HatchSpacing(SectionType, SectionGeometry): PrivateScope, Public, HideBySig
    SetHatchSpacing(SectionType, SectionGeometry, Double): PrivateScope, Public, HideBySig
    HatchScale(SectionType, SectionGeometry): PrivateScope, Public, HideBySig
    SetHatchScale(SectionType, SectionGeometry, Double): PrivateScope, Public, HideBySig
    HiddenLine(SectionType, SectionGeometry): PrivateScope, Public, HideBySig
    SetHiddenLine(SectionType, SectionGeometry, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    DivisionLines(SectionType, SectionGeometry): PrivateScope, Public, HideBySig
    SetDivisionLines(SectionType, SectionGeometry, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.SectionType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.SectionType LiveSection = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SectionType Section2d = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SectionType Section3d = 4 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.SectionGeneration: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.SectionGeneration SourceAllObjects = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SectionGeneration SourceSelectedObjects = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SectionGeneration DestinationNewBlock = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SectionGeneration DestinationReplaceBlock = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SectionGeneration DestinationFile = 64 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.SectionGeometry: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.SectionGeometry IntersectionBoundary = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SectionGeometry IntersectionFill = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SectionGeometry BackgroundGeometry = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SectionGeometry ForegroundGeometry = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SectionGeometry CurveTangencyLines = 16 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.SectionManager: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerable
  Properties:
    Int32 NumSections 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId LiveSection 'get ' : 
  Methods:
    GetSection(String): PrivateScope, Public, HideBySig
    get_LiveSection(): PrivateScope, Public, HideBySig, SpecialName
    get_NumSections(): PrivateScope, Public, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetUniqueSectionName(String): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.UnderlayLayer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.UnderlayLayerState State 'get set' : 
    System.String Name 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_State(): PrivateScope, Public, HideBySig, SpecialName
    set_State(UnderlayLayerState): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.UnderlayLayerState: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.UnderlayLayerState On = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.UnderlayLayerState Off = 0 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.UnderlayLayerCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Interfaces:
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.UnderlayLayer Item [Int32] 'get set' : 
  Methods:
    CopyTo(UnderlayLayer[], Int32): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, UnderlayLayer): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.UnderlayReference: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
  Properties:
    Boolean IsClipInverted 'get set' : 
    System.String Path 'get set' : 
    System.String NameOfSheet 'get set' : 
    System.String Name 'get set' : 
    Double Width 'get set' : 
    Double Height 'get set' : 
    Boolean AdjustColorForBackground 'get set' : 
    Int32 DefaultFade 'get ' : 
    Int32 FadeUpperLimit 'get ' : 
    Int32 FadeLowerLimit 'get ' : 
    Int32 DefaultContrast 'get ' : 
    Int32 ContrastUpperLimit 'get ' : 
    Int32 ContrastLowerLimit 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.UnderlayLayerCollection UnderlayLayerCollection 'get ' : 
    Boolean Monochrome 'get set' : 
    Int32 Fade 'get set' : 
    Int32 Contrast 'get set' : 
    Boolean IsOn 'get set' : 
    Boolean IsClipped 'get set' : 
    Autodesk.AutoCAD.Geometry.Matrix3d Transform 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId DefinitionId 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get set' : 
    Double Rotation 'get set' : 
    Autodesk.AutoCAD.Geometry.Scale3d ScaleFactors 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Position 'get set' : 
  Methods:
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_ScaleFactors(): PrivateScope, Public, HideBySig, SpecialName
    set_ScaleFactors(Scale3d): PrivateScope, Public, HideBySig, SpecialName
    get_Rotation(): PrivateScope, Public, HideBySig, SpecialName
    set_Rotation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    set_Normal(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_DefinitionId(): PrivateScope, Public, HideBySig, SpecialName
    set_DefinitionId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_Transform(): PrivateScope, Public, HideBySig, SpecialName
    set_Transform(Matrix3d): PrivateScope, Public, HideBySig, SpecialName
    SetClipBoundary(Point2d[]): PrivateScope, Public, HideBySig
    GetClipBoundary(): PrivateScope, Public, HideBySig
    GenerateClipBoundaryFromPline(ObjectId): PrivateScope, Public, HideBySig
    get_IsClipped(): PrivateScope, Public, HideBySig, SpecialName
    set_IsClipped(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsOn(): PrivateScope, Public, HideBySig, SpecialName
    set_IsOn(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Contrast(): PrivateScope, Public, HideBySig, SpecialName
    set_Contrast(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Fade(): PrivateScope, Public, HideBySig, SpecialName
    set_Fade(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Monochrome(): PrivateScope, Public, HideBySig, SpecialName
    set_Monochrome(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_UnderlayLayerCollection(): PrivateScope, Public, HideBySig, SpecialName
    get_ContrastLowerLimit(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ContrastUpperLimit(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DefaultContrast(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FadeLowerLimit(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_FadeUpperLimit(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DefaultFade(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_AdjustColorForBackground(): PrivateScope, Public, HideBySig, SpecialName
    set_AdjustColorForBackground(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Width(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_NameOfSheet(): PrivateScope, Public, HideBySig, SpecialName
    set_NameOfSheet(String): PrivateScope, Public, HideBySig, SpecialName
    get_Path(): PrivateScope, Public, HideBySig, SpecialName
    set_Path(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsClipInverted(): PrivateScope, Public, HideBySig, SpecialName
    set_IsClipInverted(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.DwfReference: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.UnderlayReference
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.DgnReference: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.UnderlayReference
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.PdfReference: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.UnderlayReference
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.UnderlayDefinition: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
  Properties:
    Boolean Loaded 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.UnderlayItem UnderlayItem 'get ' : 
    System.String ItemName 'get set' : 
    System.String ActiveFileName 'get ' : 
    System.String SourceFileName 'get set' : 
  Methods:
    get_SourceFileName(): PrivateScope, Public, HideBySig, SpecialName
    set_SourceFileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_ActiveFileName(): PrivateScope, Public, HideBySig, SpecialName
    get_ItemName(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemName(String): PrivateScope, Public, HideBySig, SpecialName
    get_UnderlayItem(): PrivateScope, Public, HideBySig, SpecialName
    SetUnderlayItem(String, String, UnderlayItem): PrivateScope, Public, HideBySig
    get_Loaded(): PrivateScope, Public, HideBySig, SpecialName
    Load(String): PrivateScope, Public, HideBySig
    Unload(): PrivateScope, Public, HideBySig
    GetDictionaryKey(Type): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.UnderlayItem: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Properties:
    Boolean UsingPartialContent 'get ' : 
    System.Drawing.Bitmap Thumbnail 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.UnitsValue Units 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Extents2d Extents 'get ' : 
    System.String Name 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Extents(): PrivateScope, Public, HideBySig, SpecialName
    get_Units(): PrivateScope, Public, HideBySig, SpecialName
    get_Thumbnail(): PrivateScope, Public, HideBySig, SpecialName
    get_UsingPartialContent(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.DwfDefinition: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.UnderlayDefinition
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean isDWFx 'get ' : 
  Methods:
    get_isDWFx(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.DgnDefinition: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.UnderlayDefinition
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean SetShowRasterRef 'set' : 
    Boolean ShowRasterRef 'get ' : 
    Int32 XrefDepth 'get set' : 
    Boolean UseMasterUnits 'get set' : 
  Methods:
    get_UseMasterUnits(): PrivateScope, Public, HideBySig, SpecialName
    set_UseMasterUnits(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_XrefDepth(): PrivateScope, Public, HideBySig, SpecialName
    set_XrefDepth(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ShowRasterRef(): PrivateScope, Public, HideBySig, SpecialName
    set_SetShowRasterRef(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.PdfDefinition: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.UnderlayDefinition
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.MatchProperties: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Methods:
    CopyProperties(Entity, Entity, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.InterferenceProtocolExtension: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Methods:
    CreateInterferenceObjects(Entity, Entity, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.Helix: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Spline
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double TotalLength 'get ' : 
    Double TurnSlope 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ConstrainType Constrain 'get set' : 
    Boolean Twist 'get set' : 
    Double TurnHeight 'get set' : 
    Double Turns 'get set' : 
    Double TopRadius 'get set' : 
    Double BaseRadius 'get set' : 
    Double Height 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d AxisVector 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d StartPoint 'get set' : 
  Methods:
    CreateHelix(): PrivateScope, Public, HideBySig
    GetAxisPoint(): PrivateScope, Public, HideBySig
    SetAxisPoint(Point3d, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_StartPoint(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_StartPoint(Point3d): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AxisVector(): PrivateScope, Public, HideBySig, SpecialName
    set_AxisVector(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Double): PrivateScope, Public, HideBySig, SpecialName
    get_BaseRadius(): PrivateScope, Public, HideBySig, SpecialName
    set_BaseRadius(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TopRadius(): PrivateScope, Public, HideBySig, SpecialName
    set_TopRadius(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Turns(): PrivateScope, Public, HideBySig, SpecialName
    set_Turns(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TurnHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_TurnHeight(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Twist(): PrivateScope, Public, HideBySig, SpecialName
    set_Twist(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Constrain(): PrivateScope, Public, HideBySig, SpecialName
    set_Constrain(ConstrainType): PrivateScope, Public, HideBySig, SpecialName
    get_TurnSlope(): PrivateScope, Public, HideBySig, SpecialName
    get_TotalLength(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.ConstrainType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.ConstrainType TurnHeight = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ConstrainType Turns = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ConstrainType Height = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.Geometry.Scale2d: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Coordinate [Int32] 'get ' : 
    Double Y   'get ' : 
    Double X   'get ' : 
  Methods:
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    PreMultiplyBy(Scale2d): PrivateScope, Public, HideBySig
    PostMultiplyBy(Scale2d): PrivateScope, Public, HideBySig
    MultiplyBy(Double): PrivateScope, Public, HideBySig
    Inverse(): PrivateScope, Public, HideBySig
    IsProportional(): PrivateScope, Public, HideBySig
    IsProportional(Tolerance): PrivateScope, Public, HideBySig
    GetMatrix(): PrivateScope, Public, HideBySig
    ExtractScale(Matrix2d): PrivateScope, Public, Static, HideBySig
    RemoveScale(Matrix2d): PrivateScope, Public, Static, HideBySig
    get_Coordinate(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    IsEqualTo(Scale2d): PrivateScope, Public, HideBySig
    IsEqualTo(Scale2d, Tolerance): PrivateScope, Public, HideBySig
    op_Inequality(Scale2d, Scale2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Scale2d, Scale2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Double, Scale2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Scale2d, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Scale2d, Scale2d): PrivateScope, Public, Static, HideBySig, SpecialName
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    ToArray(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.Background: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
  Methods:
    GetBackgroundDictionaryId(Database, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.SolidBackground: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Background
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Colors.EntityColor Color 'get set' : 
  Methods:
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    set_Color(EntityColor): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.GradientBackground: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Background
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Rotation 'get set' : 
    Double Height 'get set' : 
    Double Horizon 'get set' : 
    Autodesk.AutoCAD.Colors.EntityColor ColorBottom 'get set' : 
    Autodesk.AutoCAD.Colors.EntityColor ColorMiddle 'get set' : 
    Autodesk.AutoCAD.Colors.EntityColor ColorTop 'get set' : 
  Methods:
    get_ColorTop(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorTop(EntityColor): PrivateScope, Public, HideBySig, SpecialName
    get_ColorMiddle(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorMiddle(EntityColor): PrivateScope, Public, HideBySig, SpecialName
    get_ColorBottom(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorBottom(EntityColor): PrivateScope, Public, HideBySig, SpecialName
    get_Horizon(): PrivateScope, Public, HideBySig, SpecialName
    set_Horizon(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Rotation(): PrivateScope, Public, HideBySig, SpecialName
    set_Rotation(Double): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.ImageBackground: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Background
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Scale2d Scale 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector2d Offset 'get set' : 
    Boolean UseTiling 'get set' : 
    Boolean MaintainAspectRatio 'get set' : 
    Boolean FitToScreen 'get set' : 
    System.String ImageFileName 'get set' : 
  Methods:
    get_ImageFileName(): PrivateScope, Public, HideBySig, SpecialName
    set_ImageFileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_FitToScreen(): PrivateScope, Public, HideBySig, SpecialName
    set_FitToScreen(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_MaintainAspectRatio(): PrivateScope, Public, HideBySig, SpecialName
    set_MaintainAspectRatio(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_UseTiling(): PrivateScope, Public, HideBySig, SpecialName
    set_UseTiling(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Vector2d): PrivateScope, Public, HideBySig, SpecialName
    get_Scale(): PrivateScope, Public, HideBySig, SpecialName
    set_Scale(Scale2d): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.GroundPlaneBackground: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Background
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Colors.EntityColor ColorGroundPlaneFar 'get set' : 
    Autodesk.AutoCAD.Colors.EntityColor ColorGroundPlaneNear 'get set' : 
    Autodesk.AutoCAD.Colors.EntityColor ColorUndergroundAzimuth 'get set' : 
    Autodesk.AutoCAD.Colors.EntityColor ColorUndergroundHorizon 'get set' : 
    Autodesk.AutoCAD.Colors.EntityColor ColorSkyHorizon 'get set' : 
    Autodesk.AutoCAD.Colors.EntityColor ColorSkyZenith 'get set' : 
  Methods:
    get_ColorSkyZenith(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ColorSkyZenith(EntityColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ColorSkyHorizon(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ColorSkyHorizon(EntityColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ColorUndergroundHorizon(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ColorUndergroundHorizon(EntityColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ColorUndergroundAzimuth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ColorUndergroundAzimuth(EntityColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ColorGroundPlaneNear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ColorGroundPlaneNear(EntityColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ColorGroundPlaneFar(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ColorGroundPlaneFar(EntityColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.SkyBackground: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Background
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId SunId 'get set' : 
  Methods:
    get_SunId(): PrivateScope, Public, HideBySig, SpecialName
    set_SunId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    GetDrawableType(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.GraphicsInterface.VisualStyle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
    Void .ctor(Autodesk.AutoCAD.GraphicsInterface.VisualStyleType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType Type 'get set' : 
  Methods:
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(VisualStyleType): PrivateScope, Public, HideBySig, SpecialName
    SetTrait(VisualStyleProperty, VisualStyleOperation): PrivateScope, Public, HideBySig
    SetTrait(VisualStyleProperty, Color, VisualStyleOperation): PrivateScope, Public, HideBySig
    SetTrait(VisualStyleProperty, Double, Double, Double, VisualStyleOperation): PrivateScope, Public, HideBySig
    SetTrait(VisualStyleProperty, Double, VisualStyleOperation): PrivateScope, Public, HideBySig
    SetTrait(VisualStyleProperty, Boolean(HasFieldMarshal), VisualStyleOperation): PrivateScope, Public, HideBySig
    SetTrait(VisualStyleProperty, Int32, VisualStyleOperation): PrivateScope, Public, HideBySig
    SetTrait(VisualStyleProperty, Object, VisualStyleOperation): PrivateScope, Public, HideBySig
    GetTrait(VisualStyleProperty): PrivateScope, Public, HideBySig
    SetTraitFlag(VisualStyleProperty, UInt32 IsLong, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetTraitFlag(VisualStyleProperty, UInt32 IsLong): PrivateScope, Public, HideBySig
    Operation(VisualStyleProperty): PrivateScope, Public, HideBySig
    GetPropertyType(VisualStyleProperty): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.GraphicsInterface.VisualStyleType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType Flat = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType FlatWithEdges = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType Gouraud = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType GouraudWithEdges = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType Wireframe2D = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType Wireframe3D = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType Hidden = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType Basic = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType Realistic = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType Conceptual = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType Custom = 10 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType Dim = 11 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType Brighten = 12 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType Thicken = 13 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType LinePattern = 14 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType FacePattern = 15 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType ColorChange = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType FaceOnly = 17 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType EdgeOnly = 18 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType DisplayOnly = 19 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType JitterOff = 20 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType OverhangOff = 21 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType EdgeColorOff = 22 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType ShadesOfGray = 23 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType Sketchy = 24 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType XRay = 25 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType ShadedWithEdges = 26 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType Shaded = 27 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType EmptyStyle = 31 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty InvalidProperty = -1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty FaceLightingModel = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty FaceLightingQuality = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty FaceColorMode = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty FaceModifier = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty FaceOpacity = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty FaceSpecular = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty FaceMonoColor = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty EdgeModel = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty EdgeStyle = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty EdgeIntersectionColor = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty EdgeObscuredColor = 10 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty EdgeObscuredLinePattern = 11 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty EdgeIntersectionLinePattern = 12 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty EdgeCreaseAngle = 13 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty EdgeModifier = 14 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty EdgeColor = 15 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty EdgeOpacity = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty EdgeWidth = 17 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty EdgeOverhang = 18 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty EdgeJitterAmount = 19 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty EdgeSilhouetteColor = 20 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty EdgeSilhouetteWidth = 21 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty EdgeHaloGap = 22 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty EdgeIsolines = 23 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty EdgeHidePrecision = 24 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty DisplayStyle = 25 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty DisplayBrightness = 26 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty DisplayShadowType = 27 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty UseDrawOrder = 28 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty ViewportTransparency = 29 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty LightingEnabled = 30 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty PosterizeEffect = 31 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty MonoEffect = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty BlurEffect = 33 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty PencilEffect = 34 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty BloomEffect = 35 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty PastelEffect = 36 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty BlurAmount = 37 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty PencilAngle = 38 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty PencilScale = 39 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty PencilPattern = 40 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty PencilColor = 41 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty BloomThreshold = 42 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty BloomRadius = 43 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty TintColor = 44 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty FaceAdjustment = 45 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty PostContrast = 46 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty PostBrightness = 47 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty PostPower = 48 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty TintEffect = 49 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty BloomIntensity = 50 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty Color = 51 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty Transparency = 52 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty EdgeWiggleAmount = 53 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty EdgeTexturePath = 54 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty DepthOfField = 55 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty FocusDistance = 56 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty FocusWidth = 57 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleProperty PropertyCount = 58 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation InvalidOperation = -1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation Inherit = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation Set = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation Disable = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleOperation Enable = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.VariantType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.VariantType Undefined = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VariantType Boolean = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VariantType Int = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VariantType Double = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VariantType Color = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VariantType String = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VariantType Table = 6 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.DBVisualStyle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean InternalUseOnly 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.VisualStyleType Type 'get set' : 
    System.String Description 'get set' : 
    System.String Name 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    set_Description(String): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(VisualStyleType): PrivateScope, Public, HideBySig, SpecialName
    get_InternalUseOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_InternalUseOnly(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CopyTo(VisualStyle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    CopyFrom(VisualStyle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetTrait(VisualStyleProperty, Color, VisualStyleOperation): PrivateScope, Public, HideBySig
    SetTrait(VisualStyleProperty, Double, Double, Double, VisualStyleOperation): PrivateScope, Public, HideBySig
    SetTrait(VisualStyleProperty, Double, VisualStyleOperation): PrivateScope, Public, HideBySig
    SetTrait(VisualStyleProperty, Boolean(HasFieldMarshal), VisualStyleOperation): PrivateScope, Public, HideBySig
    SetTrait(VisualStyleProperty, Int32, VisualStyleOperation): PrivateScope, Public, HideBySig
    SetTrait(VisualStyleProperty, Object, VisualStyleOperation): PrivateScope, Public, HideBySig
    GetTrait(VisualStyleProperty): PrivateScope, Public, HideBySig
    SetTraitFlag(VisualStyleProperty, UInt32 IsLong, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetTraitFlag(VisualStyleProperty, UInt32 IsLong): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.Light: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean HasTarget 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d WebRotation 'get set' : 
    System.String WebFile 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.ColorRGB LampColorRGB 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LampColorPreset LampColorPreset 'get set' : 
    Double LampColorTemp 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LampColorType LampColorType 'get set' : 
    Double IlluminanceDistance 'get set' : 
    Double PhysicalIntensity 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.PhysicalIntensityMethod PhysicalIntensityMethod 'get set' : 
    Byte Softness 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.ShadowType ShadowType 'get set' : 
    Int32 MapSize 'get set' : 
    Boolean UseLimits 'get set' : 
    Double EndLimitOffset 'get set' : 
    Double StartLimitOffset 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.AttenuationType AttenuationType 'get set' : 
    System.String Name 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d Direction 'get set' : 
    Double FalloffAngle 'get ' : 
    Double HotspotAngle 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d TargetLocation 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Position 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.LightAttenuation Attenuation 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.ShadowParameters Shadow 'get set' : 
    Double Intensity 'get set' : 
    Autodesk.AutoCAD.Colors.Color LightColor 'get set' : 
    Boolean IsPlottable 'get set' : 
    Boolean IsOn 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.DrawableType LightType 'get set' : 
  Methods:
    get_LightType(): PrivateScope, Public, HideBySig, SpecialName
    set_LightType(DrawableType): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsOn(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsOn(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsPlottable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsPlottable(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_LightColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_LightColor(Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Intensity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Intensity(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Shadow(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Shadow(ShadowParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Attenuation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Attenuation(LightAttenuation): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Position(Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TargetLocation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TargetLocation(Point3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    SetHotspotAndFalloff(Double, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_HotspotAngle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FalloffAngle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Direction(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Direction(Vector3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AttenuationType(): PrivateScope, Public, HideBySig, SpecialName
    set_AttenuationType(AttenuationType): PrivateScope, Public, HideBySig, SpecialName
    get_StartLimitOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_StartLimitOffset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_EndLimitOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_EndLimitOffset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_UseLimits(): PrivateScope, Public, HideBySig, SpecialName
    set_UseLimits(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_MapSize(): PrivateScope, Public, HideBySig, SpecialName
    set_MapSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ShadowType(): PrivateScope, Public, HideBySig, SpecialName
    set_ShadowType(ShadowType): PrivateScope, Public, HideBySig, SpecialName
    get_Softness(): PrivateScope, Public, HideBySig, SpecialName
    set_Softness(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_PhysicalIntensityMethod(): PrivateScope, Public, HideBySig, SpecialName
    set_PhysicalIntensityMethod(PhysicalIntensityMethod): PrivateScope, Public, HideBySig, SpecialName
    get_PhysicalIntensity(): PrivateScope, Public, HideBySig, SpecialName
    set_PhysicalIntensity(Double): PrivateScope, Public, HideBySig, SpecialName
    get_IlluminanceDistance(): PrivateScope, Public, HideBySig, SpecialName
    set_IlluminanceDistance(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LampColorType(): PrivateScope, Public, HideBySig, SpecialName
    set_LampColorType(LampColorType): PrivateScope, Public, HideBySig, SpecialName
    get_LampColorTemp(): PrivateScope, Public, HideBySig, SpecialName
    set_LampColorTemp(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LampColorPreset(): PrivateScope, Public, HideBySig, SpecialName
    set_LampColorPreset(LampColorPreset): PrivateScope, Public, HideBySig, SpecialName
    get_LampColorRGB(): PrivateScope, Public, HideBySig, SpecialName
    set_LampColorRGB(ColorRGB): PrivateScope, Public, HideBySig, SpecialName
    get_WebFile(): PrivateScope, Public, HideBySig, SpecialName
    set_WebFile(String): PrivateScope, Public, HideBySig, SpecialName
    get_WebRotation(): PrivateScope, Public, HideBySig, SpecialName
    set_WebRotation(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_HasTarget(): PrivateScope, Public, HideBySig, SpecialName
    set_HasTarget(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    ResultingColor(): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.PhysicalIntensityMethod: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.PhysicalIntensityMethod PeakIntensity = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PhysicalIntensityMethod Flux = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PhysicalIntensityMethod Illuminance = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.LampColorType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.LampColorType Kelvin = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LampColorType Preset = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.LampColorPreset: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.LampColorPreset D65White = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LampColorPreset Fluorescent = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LampColorPreset CoolWhite = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LampColorPreset WhiteFluorescent = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LampColorPreset DaylightFluorescent = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LampColorPreset Incandescent = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LampColorPreset Xenon = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LampColorPreset Halogen = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LampColorPreset Quartz = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LampColorPreset MetalHalide = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LampColorPreset Mercury = 10 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LampColorPreset PhosphorMercury = 11 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LampColorPreset HighPressureSodium = 12 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LampColorPreset LowPressureSodium = 13 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LampColorPreset Custom = 14 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.Sun: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Vector3d SunDirection 'get set' : 
    Double Altitude 'get set' : 
    Double Azimuth 'get set' : 
    Boolean IsDaylightSavingsOn 'get set' : 
    System.DateTime DateTime 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.SkyParameters SkyParameters 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.ShadowParameters ShadowParameters 'get set' : 
    Autodesk.AutoCAD.Colors.Color SunColor 'get set' : 
    Double Intensity 'get set' : 
    Boolean IsOn 'get set' : 
  Methods:
    get_IsOn(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsOn(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Intensity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Intensity(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SunColor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SunColor(Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ShadowParameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ShadowParameters(ShadowParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SkyParameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SkyParameters(SkyParameters): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DateTime(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DateTime(DateTime): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsDaylightSavingsOn(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_IsDaylightSavingsOn(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Azimuth(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Azimuth(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Altitude(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Altitude(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SunDirection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SunDirection(Vector3d): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.RenderSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsPredefined 'get set' : 
    System.String PreviewImageFileName 'get set' : 
    Boolean ShadowsEnabled 'get set' : 
    Boolean BackFacesEnabled 'get set' : 
    Boolean TextureSampling 'get set' : 
    Boolean MaterialsEnabled 'get set' : 
    Boolean DiagnosticBackgroundEnabled 'get set' : 
    Int32 DisplayIndex 'get set' : 
    System.String Description 'get set' : 
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    set_Description(String): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_DisplayIndex(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DiagnosticBackgroundEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_DiagnosticBackgroundEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_MaterialsEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_MaterialsEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_TextureSampling(): PrivateScope, Public, HideBySig, SpecialName
    set_TextureSampling(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_BackFacesEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_BackFacesEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ShadowsEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_ShadowsEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_PreviewImageFileName(): PrivateScope, Public, HideBySig, SpecialName
    set_PreviewImageFileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsPredefined(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPredefined(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.RenderEnvironment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String EnvironmentImageFileName 'get set' : 
    Boolean EnvironmentImageEnabled 'get set' : 
    DoubleRangeParameter Distances 'get set' : 
    DoubleRangeParameter FogDensity 'get set' : 
    Autodesk.AutoCAD.Colors.EntityColor FogColor 'get set' : 
    Boolean FogBackgroundEnabled 'get set' : 
    Boolean FogEnabled 'get set' : 
  Methods:
    set_FogEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_FogEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_FogBackgroundEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_FogBackgroundEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_FogColor(EntityColor): PrivateScope, Public, HideBySig, SpecialName
    get_FogColor(): PrivateScope, Public, HideBySig, SpecialName
    set_FogDensity(DoubleRangeParameter): PrivateScope, Public, HideBySig, SpecialName
    get_FogDensity(): PrivateScope, Public, HideBySig, SpecialName
    set_Distances(DoubleRangeParameter): PrivateScope, Public, HideBySig, SpecialName
    get_Distances(): PrivateScope, Public, HideBySig, SpecialName
    set_EnvironmentImageEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_EnvironmentImageEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_EnvironmentImageFileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_EnvironmentImageFileName(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.RenderEnvironment+DoubleRangeParameter: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Far 'get ' : 
    Double Near 'get ' : 
  Methods:
    get_Near(): PrivateScope, Public, HideBySig, SpecialName
    get_Far(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.IBLBackground: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Background
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId SecondaryBackground 'get set' : 
    Boolean DisplayImage 'get set' : 
    Double Rotation 'get set' : 
    System.String IBLImageName 'get set' : 
    Boolean Enable 'get set' : 
  Methods:
    set_Enable(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Enable(): PrivateScope, Public, HideBySig, SpecialName
    set_IBLImageName(String): PrivateScope, Public, HideBySig, SpecialName
    get_IBLImageName(): PrivateScope, Public, HideBySig, SpecialName
    set_Rotation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Rotation(): PrivateScope, Public, HideBySig, SpecialName
    set_DisplayImage(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayImage(): PrivateScope, Public, HideBySig, SpecialName
    set_SecondaryBackground(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_SecondaryBackground(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.RapidRTRenderSettings: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.RenderSettings
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single FilterHeight 'get set' : 
    Single FilterWidth 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.RapidRTFilterType FilterType 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.RapidRTLightingMode LightingModel 'get set' : 
    Int32 RenderTime 'get set' : 
    Int32 RenderLevel 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.RapidRTRenderTarget RenderTarget 'get set' : 
  Methods:
    get_RenderTarget(): PrivateScope, Public, HideBySig, SpecialName
    set_RenderTarget(RapidRTRenderTarget): PrivateScope, Public, HideBySig, SpecialName
    get_RenderLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_RenderLevel(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_RenderTime(): PrivateScope, Public, HideBySig, SpecialName
    set_RenderTime(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_LightingModel(): PrivateScope, Public, HideBySig, SpecialName
    set_LightingModel(RapidRTLightingMode): PrivateScope, Public, HideBySig, SpecialName
    get_FilterType(): PrivateScope, Public, HideBySig, SpecialName
    set_FilterType(RapidRTFilterType): PrivateScope, Public, HideBySig, SpecialName
    get_FilterWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_FilterWidth(Single): PrivateScope, Public, HideBySig, SpecialName
    get_FilterHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_FilterHeight(Single): PrivateScope, Public, HideBySig, SpecialName
    CopyFrom(RapidRTRenderSettings): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.RapidRTRenderTarget: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.RapidRTRenderTarget Level = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.RapidRTRenderTarget Time = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.RapidRTRenderTarget Infinite = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.RenderGlobal: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean HighInfoLevel 'get set' : 
    Boolean PredefinedPresetsFirst 'get set' : 
    DimensionsParameter Dimensions 'get set' : 
    System.String SaveFileName 'get set' : 
    Boolean SaveEnabled 'get set' : 
    ProcedureAndDestinationParameter ProcedureAndDestination 'get set' : 
  Methods:
    set_ProcedureAndDestination(ProcedureAndDestinationParameter): PrivateScope, Public, HideBySig, SpecialName
    get_ProcedureAndDestination(): PrivateScope, Public, HideBySig, SpecialName
    set_SaveEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SaveEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_SaveFileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_SaveFileName(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimensions(DimensionsParameter): PrivateScope, Public, HideBySig, SpecialName
    get_Dimensions(): PrivateScope, Public, HideBySig, SpecialName
    set_PredefinedPresetsFirst(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_PredefinedPresetsFirst(): PrivateScope, Public, HideBySig, SpecialName
    set_HighInfoLevel(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HighInfoLevel(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.RenderGlobal+Procedure: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Procedure View = 0 : Public, Static, Literal, HasDefault
    Procedure Crop = 1 : Public, Static, Literal, HasDefault
    Procedure Selected = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.RenderGlobal+Destination: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Destination Window = 0 : Public, Static, Literal, HasDefault
    Destination Viewport = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.RenderGlobal+DimensionsParameter: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Width 'get ' : 
    Int32 Height 'get ' : 
  Methods:
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.RenderGlobal+ProcedureAndDestinationParameter: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Procedure, Destination): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Destination Destination 'get ' : 
    Procedure Procedure 'get ' : 
  Methods:
    get_Procedure(): PrivateScope, Public, HideBySig, SpecialName
    get_Destination(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.FieldCodeWithChildren: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    Autodesk.AutoCAD.DatabaseServices.Field[] Children 'get ' : 
    System.String FieldCode 'get set' : 
  Methods:
    get_FieldCode(): PrivateScope, Public, HideBySig, SpecialName
    set_FieldCode(String): PrivateScope, Public, HideBySig, SpecialName
    get_Children(): PrivateScope, Public, HideBySig, SpecialName
    Add(Int32, Field): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.FieldCodeFlags: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.FieldCodeFlags FieldCode = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldCodeFlags EvaluatedText = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldCodeFlags EvaluatedChildren = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldCodeFlags ObjectReference = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldCodeFlags AddMarkers = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldCodeFlags EscapeBackslash = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldCodeFlags StripOptions = 64 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldCodeFlags PreserveFields = 128 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldCodeFlags TextField = 256 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.FieldState: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.FieldState Initialized = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldState Compiled = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldState Modified = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldState Evaluated = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldState HasCache = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldState HasFormattedString = 32 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.FieldEvaluationOptions: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.FieldEvaluationOptions Disable = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldEvaluationOptions OnOpen = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldEvaluationOptions OnSave = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldEvaluationOptions OnPlot = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldEvaluationOptions OnEtransmit = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldEvaluationOptions OnRegen = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldEvaluationOptions OnDemand = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.FieldEvaluationOptions Automatic = 63 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.FieldFilingOptions: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.FieldFilingOptions SkipFilingResult = 1 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.HyperLink: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 NestedLevel 'get ' : 
    Boolean IsOutermostContainer 'get ' : 
    System.String DisplayString 'get ' : 
    System.String SubLocation 'get set' : 
    System.String Description 'get set' : 
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    set_Description(String): PrivateScope, Public, HideBySig, SpecialName
    get_SubLocation(): PrivateScope, Public, HideBySig, SpecialName
    set_SubLocation(String): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayString(): PrivateScope, Public, HideBySig, SpecialName
    get_IsOutermostContainer(): PrivateScope, Public, HideBySig, SpecialName
    get_NestedLevel(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.LoftedSurface: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Surface
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double EndCrossSectionMagnitude 'get set' : 
    Double EndGuideCurveMagnitude 'get set' : 
    Double StartCrossSectionMagnitude 'get set' : 
    Double StartGuideCurveMagnitude 'get set' : 
    Int32 EndCrossSectionContinuity 'get set' : 
    Int32 EndGuideCurveContinuity 'get set' : 
    Int32 StartCrossSectionContinuity 'get set' : 
    Int32 StartGuideCurveContinuity 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LoftProfile PathProfile 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.LoftProfile[] GuideProfiles 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.LoftProfile[] CrossSectionProfiles 'get ' : 
    Int32 NumberOfGuideCurves 'get ' : 
    Int32 NumberOfCrossSections 'get ' : 
    Boolean Closed 'get set' : 
    LoftSurfaceType SurfaceType 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.LoftOptions LoftOptions 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.Entity PathEntity 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Entity[] GuideCurves 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Entity[] CrossSections 'get ' : 
  Methods:
    CreateLoftedSurface(Entity[], Entity[], Entity, LoftOptions): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetGuideProfile(Int32): PrivateScope, Public, HideBySig
    GetCrossSectionProfile(Int32): PrivateScope, Public, HideBySig
    get_CrossSections(): PrivateScope, Public, HideBySig, SpecialName
    get_GuideCurves(): PrivateScope, Public, HideBySig, SpecialName
    get_PathEntity(): PrivateScope, Public, HideBySig, SpecialName
    get_LoftOptions(): PrivateScope, Public, HideBySig, SpecialName
    set_LoftOptions(LoftOptions): PrivateScope, Public, HideBySig, SpecialName
    get_SurfaceType(): PrivateScope, Public, HideBySig, SpecialName
    get_Closed(): PrivateScope, Public, HideBySig, SpecialName
    set_Closed(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfCrossSections(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfGuideCurves(): PrivateScope, Public, HideBySig, SpecialName
    get_CrossSectionProfiles(): PrivateScope, Public, HideBySig, SpecialName
    get_GuideProfiles(): PrivateScope, Public, HideBySig, SpecialName
    get_PathProfile(): PrivateScope, Public, HideBySig, SpecialName
    get_StartGuideCurveContinuity(): PrivateScope, Public, HideBySig, SpecialName
    set_StartGuideCurveContinuity(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_StartCrossSectionContinuity(): PrivateScope, Public, HideBySig, SpecialName
    set_StartCrossSectionContinuity(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_EndGuideCurveContinuity(): PrivateScope, Public, HideBySig, SpecialName
    set_EndGuideCurveContinuity(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_EndCrossSectionContinuity(): PrivateScope, Public, HideBySig, SpecialName
    set_EndCrossSectionContinuity(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_StartGuideCurveMagnitude(): PrivateScope, Public, HideBySig, SpecialName
    set_StartGuideCurveMagnitude(Double): PrivateScope, Public, HideBySig, SpecialName
    get_StartCrossSectionMagnitude(): PrivateScope, Public, HideBySig, SpecialName
    set_StartCrossSectionMagnitude(Double): PrivateScope, Public, HideBySig, SpecialName
    get_EndGuideCurveMagnitude(): PrivateScope, Public, HideBySig, SpecialName
    set_EndGuideCurveMagnitude(Double): PrivateScope, Public, HideBySig, SpecialName
    get_EndCrossSectionMagnitude(): PrivateScope, Public, HideBySig, SpecialName
    set_EndCrossSectionMagnitude(Double): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.LoftedSurface+LoftSurfaceType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    LoftSurfaceType LoftSurface = 0 : Public, Static, Literal, HasDefault
    LoftSurfaceType BlendSurface = 1 : Public, Static, Literal, HasDefault
    LoftSurfaceType NetworkSurface = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.PlaneSurface: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Surface
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateFromRegion(Region): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.Material: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.FinalGatherMode FinalGather 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.GlobalIlluminationMode GlobalIllumination 'get set' : 
    Boolean Anonymous 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialNormalMapComponent NormalMap 'get set' : 
    Double Luminance 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.LuminanceMode LuminanceMode 'get set' : 
    Boolean TwoSided 'get set' : 
    Double TransmittanceScale 'get set' : 
    Double ReflectanceScale 'get set' : 
    Double IndirectBumpScale 'get set' : 
    Double ColorBleedScale 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.Mode Mode 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.ChannelFlags ChannelFlags 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.IlluminationModel IlluminationModel 'get set' : 
    Double Reflectivity 'get set' : 
    Double SelfIllumination 'get set' : 
    Double Translucence 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialRefractionComponent Refraction 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialMap Bump 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialOpacityComponent Opacity 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialMap Reflection 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialSpecularComponent Specular 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialDiffuseComponent Diffuse 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.MaterialColor Ambient 'get set' : 
    System.String Description 'get set' : 
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Description(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Description(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Ambient(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Ambient(MaterialColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Diffuse(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Diffuse(MaterialDiffuseComponent): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Specular(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Specular(MaterialSpecularComponent): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Reflection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Reflection(MaterialMap): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Opacity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Opacity(MaterialOpacityComponent): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Bump(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Bump(MaterialMap): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Refraction(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Refraction(MaterialRefractionComponent): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Translucence(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Translucence(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SelfIllumination(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_SelfIllumination(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Reflectivity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Reflectivity(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IlluminationModel(): PrivateScope, Public, HideBySig, SpecialName
    set_IlluminationModel(IlluminationModel): PrivateScope, Public, HideBySig, SpecialName
    get_ChannelFlags(): PrivateScope, Public, HideBySig, SpecialName
    set_ChannelFlags(ChannelFlags): PrivateScope, Public, HideBySig, SpecialName
    get_Mode(): PrivateScope, Public, HideBySig, SpecialName
    set_Mode(Mode): PrivateScope, Public, HideBySig, SpecialName
    get_ColorBleedScale(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorBleedScale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_IndirectBumpScale(): PrivateScope, Public, HideBySig, SpecialName
    set_IndirectBumpScale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ReflectanceScale(): PrivateScope, Public, HideBySig, SpecialName
    set_ReflectanceScale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TransmittanceScale(): PrivateScope, Public, HideBySig, SpecialName
    set_TransmittanceScale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TwoSided(): PrivateScope, Public, HideBySig, SpecialName
    set_TwoSided(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_LuminanceMode(): PrivateScope, Public, HideBySig, SpecialName
    set_LuminanceMode(LuminanceMode): PrivateScope, Public, HideBySig, SpecialName
    get_Luminance(): PrivateScope, Public, HideBySig, SpecialName
    set_Luminance(Double): PrivateScope, Public, HideBySig, SpecialName
    get_NormalMap(): PrivateScope, Public, HideBySig, SpecialName
    set_NormalMap(MaterialNormalMapComponent): PrivateScope, Public, HideBySig, SpecialName
    get_Anonymous(): PrivateScope, Public, HideBySig, SpecialName
    set_Anonymous(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_GlobalIllumination(): PrivateScope, Public, HideBySig, SpecialName
    set_GlobalIllumination(GlobalIlluminationMode): PrivateScope, Public, HideBySig, SpecialName
    get_FinalGather(): PrivateScope, Public, HideBySig, SpecialName
    set_FinalGather(FinalGatherMode): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.TableContent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.FormattedTableData
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId TableStyleId 'get set' : 
  Methods:
    get_TableStyleId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_TableStyleId(ObjectId): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetCellStyle(Int32, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetCellStyle(Int32, Int32, String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetRowHeight(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetRowHeight(Int32, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetColumnWidth(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetColumnWidth(Int32, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.TableTemplate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.TableContent
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.Table, Autodesk.AutoCAD.DatabaseServices.TableCopyOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Capture(Table, TableCopyOptions): PrivateScope, Public, HideBySig
    CreateTable(TableCopyOptions): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.ObjectContextCollectionEnumerator: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectContext Current 'get ' : 
  Methods:
    IEnumerator.get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
    MoveNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.ObjectContextCollection: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Interfaces:
    System.Collections.IEnumerable
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectContext CurrentContext 'get set' : 
    System.String Name 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CurrentContext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_CurrentContext(ObjectContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetContext(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasContext(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddContext(ObjectContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveContext(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IEnumerable.GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.Wipeout: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.RasterImage
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean HasFrame 'get ' : 
  Methods:
    SetFrom(Point2dCollection, Vector3d): PrivateScope, Public, HideBySig
    get_HasFrame(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.MLeaderStyle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.MLeaderStyle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ExtendLeaderToText 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.TextAttachmentDirection TextAttachmentDirection 'get set' : 
    System.String Name 'get set' : 
    Double BreakSize 'get set' : 
    Double Scale 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.BlockConnectionType BlockConnectionType 'get set' : 
    Boolean EnableBlockRotation 'get set' : 
    Double BlockRotation 'get set' : 
    Boolean EnableBlockScale 'get set' : 
    Autodesk.AutoCAD.Geometry.Scale3d BlockScale 'get set' : 
    Autodesk.AutoCAD.Colors.Color BlockColor 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId BlockId 'get set' : 
    Boolean EnableFrameText 'get set' : 
    Double TextHeight 'get set' : 
    Autodesk.AutoCAD.Colors.Color TextColor 'get set' : 
    Boolean TextAlignAlwaysLeft 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.TextAlignmentType TextAlignmentType 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.TextAngleType TextAngleType 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.TextAttachmentType TextAttachmentType 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId TextStyleId 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.MText DefaultMText 'get set' : 
    Double ArrowSize 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ArrowSymbolId 'get set' : 
    Double DoglegLength 'get set' : 
    Boolean EnableDogleg 'get set' : 
    Double LandingGap 'get set' : 
    Boolean EnableLanding 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LineWeight LeaderLineWeight 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId LeaderLineTypeId 'get set' : 
    Autodesk.AutoCAD.Colors.Color LeaderLineColor 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LeaderType LeaderLineType 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.AngleConstraint SecondSegmentAngleConstraint 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.AngleConstraint FirstSegmentAngleConstraint 'get set' : 
    Int32 MaxLeaderSegmentsPoints 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.DrawLeaderOrderType DrawLeaderOrderType 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.DrawMLeaderOrderType DrawMLeaderOrderType 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ContentType ContentType 'get set' : 
  Methods:
    get_ContentType(): PrivateScope, Public, HideBySig, SpecialName
    set_ContentType(ContentType): PrivateScope, Public, HideBySig, SpecialName
    get_DrawMLeaderOrderType(): PrivateScope, Public, HideBySig, SpecialName
    set_DrawMLeaderOrderType(DrawMLeaderOrderType): PrivateScope, Public, HideBySig, SpecialName
    get_DrawLeaderOrderType(): PrivateScope, Public, HideBySig, SpecialName
    set_DrawLeaderOrderType(DrawLeaderOrderType): PrivateScope, Public, HideBySig, SpecialName
    get_MaxLeaderSegmentsPoints(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxLeaderSegmentsPoints(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_FirstSegmentAngleConstraint(): PrivateScope, Public, HideBySig, SpecialName
    set_FirstSegmentAngleConstraint(AngleConstraint): PrivateScope, Public, HideBySig, SpecialName
    get_SecondSegmentAngleConstraint(): PrivateScope, Public, HideBySig, SpecialName
    set_SecondSegmentAngleConstraint(AngleConstraint): PrivateScope, Public, HideBySig, SpecialName
    get_LeaderLineType(): PrivateScope, Public, HideBySig, SpecialName
    set_LeaderLineType(LeaderType): PrivateScope, Public, HideBySig, SpecialName
    get_LeaderLineColor(): PrivateScope, Public, HideBySig, SpecialName
    set_LeaderLineColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_LeaderLineTypeId(): PrivateScope, Public, HideBySig, SpecialName
    set_LeaderLineTypeId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_LeaderLineWeight(): PrivateScope, Public, HideBySig, SpecialName
    set_LeaderLineWeight(LineWeight): PrivateScope, Public, HideBySig, SpecialName
    get_EnableLanding(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableLanding(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_LandingGap(): PrivateScope, Public, HideBySig, SpecialName
    set_LandingGap(Double): PrivateScope, Public, HideBySig, SpecialName
    get_EnableDogleg(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableDogleg(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_DoglegLength(): PrivateScope, Public, HideBySig, SpecialName
    set_DoglegLength(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ArrowSymbolId(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrowSymbolId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_ArrowSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrowSize(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultMText(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultMText(MText): PrivateScope, Public, HideBySig, SpecialName
    get_TextStyleId(): PrivateScope, Public, HideBySig, SpecialName
    set_TextStyleId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_TextAttachmentType(): PrivateScope, Public, HideBySig, SpecialName
    set_TextAttachmentType(TextAttachmentType): PrivateScope, Public, HideBySig, SpecialName
    SetTextAttachmentType(TextAttachmentType, LeaderDirectionType): PrivateScope, Public, HideBySig
    GetTextAttachmentType(LeaderDirectionType): PrivateScope, Public, HideBySig
    get_TextAngleType(): PrivateScope, Public, HideBySig, SpecialName
    set_TextAngleType(TextAngleType): PrivateScope, Public, HideBySig, SpecialName
    get_TextAlignmentType(): PrivateScope, Public, HideBySig, SpecialName
    set_TextAlignmentType(TextAlignmentType): PrivateScope, Public, HideBySig, SpecialName
    get_TextAlignAlwaysLeft(): PrivateScope, Public, HideBySig, SpecialName
    set_TextAlignAlwaysLeft(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_TextColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TextColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_TextHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_TextHeight(Double): PrivateScope, Public, HideBySig, SpecialName
    get_EnableFrameText(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableFrameText(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_BlockId(): PrivateScope, Public, HideBySig, SpecialName
    set_BlockId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_BlockColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BlockColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BlockScale(): PrivateScope, Public, HideBySig, SpecialName
    set_BlockScale(Scale3d): PrivateScope, Public, HideBySig, SpecialName
    get_EnableBlockScale(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableBlockScale(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_BlockRotation(): PrivateScope, Public, HideBySig, SpecialName
    set_BlockRotation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_EnableBlockRotation(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableBlockRotation(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_BlockConnectionType(): PrivateScope, Public, HideBySig, SpecialName
    set_BlockConnectionType(BlockConnectionType): PrivateScope, Public, HideBySig, SpecialName
    get_Scale(): PrivateScope, Public, HideBySig, SpecialName
    set_Scale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_BreakSize(): PrivateScope, Public, HideBySig, SpecialName
    set_BreakSize(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    OverwritePropChanged(): PrivateScope, Public, HideBySig
    PostMLeaderStyleToDb(Database, String): PrivateScope, Public, HideBySig
    get_TextAttachmentDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_TextAttachmentDirection(TextAttachmentDirection): PrivateScope, Public, HideBySig, SpecialName
    get_ExtendLeaderToText(): PrivateScope, Public, HideBySig, SpecialName
    set_ExtendLeaderToText(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.ContentType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.ContentType NoneContent = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ContentType BlockContent = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ContentType MTextContent = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ContentType ToleranceContent = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.DrawMLeaderOrderType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.DrawMLeaderOrderType DrawContentFirst = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DrawMLeaderOrderType DrawLeaderFirst = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.DrawLeaderOrderType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.DrawLeaderOrderType DrawLeaderHeadFirst = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DrawLeaderOrderType DrawLeaderTailFirst = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.AngleConstraint: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.AngleConstraint DegreesAny = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AngleConstraint Degrees015 = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AngleConstraint Degrees030 = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AngleConstraint Degrees045 = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AngleConstraint Degrees060 = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AngleConstraint Degrees090 = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AngleConstraint DegreesHorz = 12 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.LeaderType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.LeaderType InVisibleLeader = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LeaderType StraightLeader = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LeaderType SplineLeader = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.TextAttachmentType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.TextAttachmentType AttachmentTopOfTop = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TextAttachmentType AttachmentMiddleOfTop = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TextAttachmentType AttachmentMiddle = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TextAttachmentType AttachmentMiddleOfBottom = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TextAttachmentType AttachmentBottomOfBottom = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TextAttachmentType AttachmentBottomLine = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TextAttachmentType AttachmentBottomOfTopLine = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TextAttachmentType AttachmentBottomOfTop = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TextAttachmentType AttachmentAllLine = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TextAttachmentType AttachmentCenter = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TextAttachmentType AttachmentLinedCenter = 10 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.LeaderDirectionType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.LeaderDirectionType UnknownLeader = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LeaderDirectionType LeftLeader = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LeaderDirectionType RightLeader = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LeaderDirectionType TopLeader = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LeaderDirectionType BottomLeader = 4 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.TextAngleType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.TextAngleType InsertAngle = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TextAngleType HorizontalAngle = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TextAngleType AlwaysRightReadingAngle = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.TextAlignmentType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.TextAlignmentType LeftAlignment = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TextAlignmentType CenterAlignment = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TextAlignmentType RightAlignment = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.BlockConnectionType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.BlockConnectionType ConnectExtents = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.BlockConnectionType ConnectBase = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.TextAttachmentDirection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.TextAttachmentDirection AttachmentHorizontal = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TextAttachmentDirection AttachmentVertical = 1 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.MLeader: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ExtendLeaderToText 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.TextAttachmentDirection TextAttachmentDirection 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.MText MText 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d ToleranceLocation 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d TextLocation 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d BlockPosition 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId MLeaderStyle 'get set' : 
    Boolean EnableAnnotationScale 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.BlockConnectionType BlockConnectionType 'get set' : 
    Double BlockRotation 'get set' : 
    Autodesk.AutoCAD.Geometry.Scale3d BlockScale 'get set' : 
    Autodesk.AutoCAD.Colors.Color BlockColor 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId BlockContentId 'get set' : 
    Boolean EnableFrameText 'get set' : 
    Double TextHeight 'get set' : 
    Autodesk.AutoCAD.Colors.Color TextColor 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.TextAlignmentType TextAlignmentType 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.TextAngleType TextAngleType 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.TextAttachmentType TextAttachmentType 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId TextStyleId 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ContentType ContentType 'get set' : 
    Double ArrowSize 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ArrowSymbolId 'get set' : 
    Double DoglegLength 'get set' : 
    Boolean EnableDogleg 'get set' : 
    Boolean EnableLanding 'get set' : 
    Double LandingGap 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LineWeight LeaderLineWeight 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId LeaderLineTypeId 'get set' : 
    Autodesk.AutoCAD.Colors.Color LeaderLineColor 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LeaderType LeaderLineType 'get set' : 
    Int32 LeaderLineCount 'get ' : 
    Int32 LeaderCount 'get ' : 
    Double Scale 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get ' : 
  Methods:
    get_BlockColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BlockColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BlockScale(): PrivateScope, Public, HideBySig, SpecialName
    set_BlockScale(Scale3d): PrivateScope, Public, HideBySig, SpecialName
    get_BlockRotation(): PrivateScope, Public, HideBySig, SpecialName
    set_BlockRotation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_BlockConnectionType(): PrivateScope, Public, HideBySig, SpecialName
    set_BlockConnectionType(BlockConnectionType): PrivateScope, Public, HideBySig, SpecialName
    get_EnableAnnotationScale(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableAnnotationScale(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_MLeaderStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_MLeaderStyle(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    getOverridedMLeaderStyle(MLeaderStyle): PrivateScope, Public, HideBySig
    SetContextDataManager(IntPtr): PrivateScope, Public, HideBySig
    getContextDataManager(): PrivateScope, Public, HideBySig
    get_BlockPosition(): PrivateScope, Public, HideBySig, SpecialName
    set_BlockPosition(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_TextLocation(): PrivateScope, Public, HideBySig, SpecialName
    set_TextLocation(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_ToleranceLocation(): PrivateScope, Public, HideBySig, SpecialName
    set_ToleranceLocation(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_MText(): PrivateScope, Public, HideBySig, SpecialName
    set_MText(MText): PrivateScope, Public, HideBySig, SpecialName
    HasContent(): PrivateScope, Public, HideBySig
    recomputeBreakPoints(): PrivateScope, Public, HideBySig
    PostMLeaderToDb(Database): PrivateScope, Public, HideBySig
    ConnectionPoint(Vector3d, TextAttachmentDirection): PrivateScope, Public, HideBySig
    ConnectionPoint(Vector3d): PrivateScope, Public, HideBySig
    GetBlockAttribute(ObjectId): PrivateScope, Public, HideBySig
    SetBlockAttribute(ObjectId, AttributeReference): PrivateScope, Public, HideBySig
    GetLeaderIndexes(): PrivateScope, Public, HideBySig
    get_TextAttachmentDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_TextAttachmentDirection(TextAttachmentDirection): PrivateScope, Public, HideBySig, SpecialName
    get_ExtendLeaderToText(): PrivateScope, Public, HideBySig, SpecialName
    set_ExtendLeaderToText(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    GetPlane(): PrivateScope, Public, Virtual, HideBySig
    SetPlane(Plane): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Normal(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Scale(): PrivateScope, Public, HideBySig, SpecialName
    set_Scale(Double): PrivateScope, Public, HideBySig, SpecialName
    MoveMLeader(Vector3d, MoveType): PrivateScope, Public, HideBySig
    GetContentGeomExtents(): PrivateScope, Public, HideBySig
    get_LeaderCount(): PrivateScope, Public, HideBySig, SpecialName
    AddLeader(): PrivateScope, Public, HideBySig
    RemoveLeader(Int32): PrivateScope, Public, HideBySig
    get_LeaderLineCount(): PrivateScope, Public, HideBySig, SpecialName
    AddLeaderLine(Point3d): PrivateScope, Public, HideBySig
    AddLeaderLine(Int32): PrivateScope, Public, HideBySig
    RemoveLeaderLine(Int32): PrivateScope, Public, HideBySig
    AddFirstVertex(Int32, Point3d): PrivateScope, Public, HideBySig
    RemoveFirstVertex(Int32): PrivateScope, Public, HideBySig
    GetFirstVertex(Int32): PrivateScope, Public, HideBySig
    SetFirstVertex(Int32, Point3d): PrivateScope, Public, HideBySig
    AddLastVertex(Int32, Point3d): PrivateScope, Public, HideBySig
    RemoveLastVertex(Int32): PrivateScope, Public, HideBySig
    GetLastVertex(Int32): PrivateScope, Public, HideBySig
    SetLastVertex(Int32, Point3d): PrivateScope, Public, HideBySig
    VerticesCount(Int32): PrivateScope, Public, HideBySig
    SetVertex(Int32, Int32, Point3d): PrivateScope, Public, HideBySig
    GetVertex(Int32, Int32): PrivateScope, Public, HideBySig
    GetLeaderIndex(Int32): PrivateScope, Public, HideBySig
    GetLeaderLineIndexes(Int32): PrivateScope, Public, HideBySig
    SetDogleg(Int32, Vector3d): PrivateScope, Public, HideBySig
    GetDogleg(Int32): PrivateScope, Public, HideBySig
    get_LeaderLineType(): PrivateScope, Public, HideBySig, SpecialName
    set_LeaderLineType(LeaderType): PrivateScope, Public, HideBySig, SpecialName
    SetLeaderLineType(Int32, LeaderType): PrivateScope, Public, HideBySig
    GetLeaderLineType(Int32): PrivateScope, Public, HideBySig
    get_LeaderLineColor(): PrivateScope, Public, HideBySig, SpecialName
    set_LeaderLineColor(Color): PrivateScope, Public, HideBySig, SpecialName
    SetLeaderLineColor(Int32, Color): PrivateScope, Public, HideBySig
    GetLeaderLineColor(Int32): PrivateScope, Public, HideBySig
    get_LeaderLineTypeId(): PrivateScope, Public, HideBySig, SpecialName
    set_LeaderLineTypeId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    SetLeaderLineTypeId(Int32, ObjectId): PrivateScope, Public, HideBySig
    GetLeaderLineTypeId(Int32): PrivateScope, Public, HideBySig
    get_LeaderLineWeight(): PrivateScope, Public, HideBySig, SpecialName
    set_LeaderLineWeight(LineWeight): PrivateScope, Public, HideBySig, SpecialName
    SetLeaderLineWeight(Int32, LineWeight): PrivateScope, Public, HideBySig
    GetLeaderLineWeight(Int32): PrivateScope, Public, HideBySig
    get_LandingGap(): PrivateScope, Public, HideBySig, SpecialName
    set_LandingGap(Double): PrivateScope, Public, HideBySig, SpecialName
    get_EnableLanding(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableLanding(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_EnableDogleg(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableDogleg(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_DoglegLength(): PrivateScope, Public, HideBySig, SpecialName
    set_DoglegLength(Double): PrivateScope, Public, HideBySig, SpecialName
    SetDoglegLength(Int32, Double): PrivateScope, Public, HideBySig
    GetDoglegLength(Int32): PrivateScope, Public, HideBySig
    get_ArrowSymbolId(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrowSymbolId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    SetArrowSymbolId(Int32, ObjectId): PrivateScope, Public, HideBySig
    GetArrowSymbolId(Int32): PrivateScope, Public, HideBySig
    get_ArrowSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrowSize(Double): PrivateScope, Public, HideBySig, SpecialName
    SetArrowSize(Int32, Double): PrivateScope, Public, HideBySig
    GetArrowSize(Int32): PrivateScope, Public, HideBySig
    get_ContentType(): PrivateScope, Public, HideBySig, SpecialName
    set_ContentType(ContentType): PrivateScope, Public, HideBySig, SpecialName
    get_TextStyleId(): PrivateScope, Public, HideBySig, SpecialName
    set_TextStyleId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_TextAttachmentType(): PrivateScope, Public, HideBySig, SpecialName
    set_TextAttachmentType(TextAttachmentType): PrivateScope, Public, HideBySig, SpecialName
    SetTextAttachmentType(TextAttachmentType, LeaderDirectionType): PrivateScope, Public, HideBySig
    GetTextAttachmentType(LeaderDirectionType): PrivateScope, Public, HideBySig
    get_TextAngleType(): PrivateScope, Public, HideBySig, SpecialName
    set_TextAngleType(TextAngleType): PrivateScope, Public, HideBySig, SpecialName
    get_TextAlignmentType(): PrivateScope, Public, HideBySig, SpecialName
    set_TextAlignmentType(TextAlignmentType): PrivateScope, Public, HideBySig, SpecialName
    get_TextColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TextColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_TextHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_TextHeight(Double): PrivateScope, Public, HideBySig, SpecialName
    get_EnableFrameText(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableFrameText(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_BlockContentId(): PrivateScope, Public, HideBySig, SpecialName
    set_BlockContentId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.MoveType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.MoveType MoveAllPoints = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MoveType MoveAllExceptArrowHeaderPoints = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MoveType MoveContentAndDoglegPoints = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.Geometry.GeoDataLonLatAltInfo: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Altitude 'get set' : 
    Double Latitude 'get set' : 
    Double Longitude 'get set' : 
  Methods:
    get_Longitude(): PrivateScope, Public, HideBySig, SpecialName
    set_Longitude(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Latitude(): PrivateScope, Public, HideBySig, SpecialName
    set_Latitude(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Altitude(): PrivateScope, Public, HideBySig, SpecialName
    set_Altitude(Double): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.MeshPointMap: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2d, Autodesk.AutoCAD.Geometry.Point2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point2d DestPoint 'get set' : 
    Autodesk.AutoCAD.Geometry.Point2d SourcePoint 'get set' : 
  Methods:
    get_SourcePoint(): PrivateScope, Public, HideBySig, SpecialName
    set_SourcePoint(Point2d): PrivateScope, Public, HideBySig, SpecialName
    get_DestPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_DestPoint(Point2d): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.MeshPointMaps: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2dCollection, Autodesk.AutoCAD.Geometry.Point2dCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point2dCollection DestPonints 'get set' : 
    Autodesk.AutoCAD.Geometry.Point2dCollection SourcePonints 'get set' : 
  Methods:
    get_SourcePonints(): PrivateScope, Public, HideBySig, SpecialName
    set_SourcePonints(Point2dCollection): PrivateScope, Public, HideBySig, SpecialName
    get_DestPonints(): PrivateScope, Public, HideBySig, SpecialName
    set_DestPonints(Point2dCollection): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.GeoLocationData: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double CoordinateProjectionRadius 'get set' : 
    Double SeaLevelElevation 'get set' : 
    Boolean DoSeaLevelCorrection 'get set' : 
    Double ScaleFactor 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ScaleEstimationMethod ScaleEstimationMethod 'get set' : 
    System.String GeoRSSTag 'get set' : 
    System.String CoordinateSystem 'get set' : 
    Int32 NumMeshPoints 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector2d NorthDirectionVector 'get set' : 
    Double NorthDirection 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d UpDirection 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d DesignPoint 'get set' : 
    Double VerticalUnitsScale 'get set' : 
    Double HorizontalUnitsScale 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.UnitsValue VerticalUnits 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.UnitsValue HorizontalUnits 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d ReferencePoint 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.TypeOfCoordinates TypeOfCoordinates 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId BlockTableRecordId 'get set' : 
  Methods:
    get_BlockTableRecordId(): PrivateScope, Public, HideBySig, SpecialName
    set_BlockTableRecordId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_TypeOfCoordinates(): PrivateScope, Public, HideBySig, SpecialName
    set_TypeOfCoordinates(TypeOfCoordinates): PrivateScope, Public, HideBySig, SpecialName
    get_ReferencePoint(): PrivateScope, Public, HideBySig, SpecialName
    set_ReferencePoint(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_HorizontalUnits(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalUnits(UnitsValue): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalUnits(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalUnits(UnitsValue): PrivateScope, Public, HideBySig, SpecialName
    get_HorizontalUnitsScale(): PrivateScope, Public, HideBySig, SpecialName
    set_HorizontalUnitsScale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalUnitsScale(): PrivateScope, Public, HideBySig, SpecialName
    set_VerticalUnitsScale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DesignPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_DesignPoint(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_UpDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_UpDirection(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_NorthDirection(): PrivateScope, Public, HideBySig, SpecialName
    get_NorthDirectionVector(): PrivateScope, Public, HideBySig, SpecialName
    set_NorthDirectionVector(Vector2d): PrivateScope, Public, HideBySig, SpecialName
    get_NumMeshPoints(): PrivateScope, Public, HideBySig, SpecialName
    get_CoordinateSystem(): PrivateScope, Public, HideBySig, SpecialName
    set_CoordinateSystem(String): PrivateScope, Public, HideBySig, SpecialName
    get_GeoRSSTag(): PrivateScope, Public, HideBySig, SpecialName
    set_GeoRSSTag(String): PrivateScope, Public, HideBySig, SpecialName
    get_ScaleEstimationMethod(): PrivateScope, Public, HideBySig, SpecialName
    set_ScaleEstimationMethod(ScaleEstimationMethod): PrivateScope, Public, HideBySig, SpecialName
    get_ScaleFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_ScaleFactor(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DoSeaLevelCorrection(): PrivateScope, Public, HideBySig, SpecialName
    set_DoSeaLevelCorrection(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SeaLevelElevation(): PrivateScope, Public, HideBySig, SpecialName
    set_SeaLevelElevation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_CoordinateProjectionRadius(): PrivateScope, Public, HideBySig, SpecialName
    set_CoordinateProjectionRadius(Double): PrivateScope, Public, HideBySig, SpecialName
    GetMeshPointMap(Int32): PrivateScope, Public, HideBySig
    GetMeshPointMaps(): PrivateScope, Public, HideBySig
    AddMeshPointMap(Int32, Point2d, Point2d): PrivateScope, Public, HideBySig
    SetMeshPointMaps(Point2dCollection, Point2dCollection): PrivateScope, Public, HideBySig
    ResetMeshPointMaps(): PrivateScope, Public, HideBySig
    PostToDb(): PrivateScope, Public, HideBySig
    EraseFromDb(): PrivateScope, Public, HideBySig
    UpdateTransformationMatrix(): PrivateScope, Public, HideBySig
    TransformToLonLatAlt(Double, Double, Double): PrivateScope, Public, HideBySig
    TransformToLonLatAlt(Point3d): PrivateScope, Public, HideBySig
    TransformFromLonLatAlt(Point3d): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.TypeOfCoordinates: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.TypeOfCoordinates CoordinateTypeUnknown = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TypeOfCoordinates CoordinateTypeLocal = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TypeOfCoordinates CoordinateTypeGrid = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TypeOfCoordinates CoordinateTypeGeographic = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.ScaleEstimationMethod: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.ScaleEstimationMethod ScaleEstMethodUnity = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ScaleEstimationMethod ScaleEstMethodUserDefined = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ScaleEstimationMethod ScaleEstMethodReferencePoint = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ScaleEstimationMethod ScaleEstMethodPrismoidal = 4 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.Runtime.Overrule: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Properties:
    Boolean Overruling 'get set' : 
  Methods:
    AddOverrule(RXClass, Overrule, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    RemoveOverrule(RXClass, Overrule): PrivateScope, Public, Static, HideBySig
    get_Overruling(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_Overruling(Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, SpecialName
    HasOverrule(RXObject, RXClass): PrivateScope, Public, Static, HideBySig
    SetXDataFilter(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetExtensionDictionaryEntryFilter(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetCustomFilter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetIdFilter(ObjectId[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    SetNoFilter(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    IsApplicable(RXObject): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.BlockPropertiesTableColumn: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    Autodesk.AutoCAD.DatabaseServices.BlockPropertiesTable Table 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.IParameter Parameter 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId CustomProperties 'get set' : 
    System.String Format 'get set' : 
    Boolean Removable 'get set' : 
    Boolean Editable 'get set' : 
    Boolean Constant 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ResultBuffer UnmatchedValue 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ResultBuffer DefaultValue 'get set' : 
  Methods:
    get_DefaultValue(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultValue(ResultBuffer): PrivateScope, Public, HideBySig, SpecialName
    get_UnmatchedValue(): PrivateScope, Public, HideBySig, SpecialName
    set_UnmatchedValue(ResultBuffer): PrivateScope, Public, HideBySig, SpecialName
    get_Constant(): PrivateScope, Public, HideBySig, SpecialName
    set_Constant(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Editable(): PrivateScope, Public, HideBySig, SpecialName
    set_Editable(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Removable(): PrivateScope, Public, HideBySig, SpecialName
    set_Removable(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    set_Format(String): PrivateScope, Public, HideBySig, SpecialName
    get_CustomProperties(): PrivateScope, Public, HideBySig, SpecialName
    set_CustomProperties(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_Parameter(): PrivateScope, Public, HideBySig, SpecialName
    get_Table(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.BlockPropertiesTable: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(IntPtr, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsDisabledInDrawingEditor 'get ' : 
    Boolean ContainsRuntimeParametersOnly 'get set' : 
    Boolean MustMatch 'get set' : 
    Int32 DefaultActiveRowIndex 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.BlockPropertiesTableColumnCollection Columns 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.BlockPropertiesTableRowCollection Rows 'get ' : 
  Methods:
    get_Rows(): PrivateScope, Public, HideBySig, SpecialName
    get_Columns(): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultActiveRowIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultActiveRowIndex(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MustMatch(): PrivateScope, Public, HideBySig, SpecialName
    set_MustMatch(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ContainsRuntimeParametersOnly(): PrivateScope, Public, HideBySig, SpecialName
    set_ContainsRuntimeParametersOnly(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsDisabledInDrawingEditor(): PrivateScope, Public, HideBySig, SpecialName
    Audit(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.BlockPropertiesTableRow: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Interfaces:
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Autodesk.AutoCAD.DatabaseServices.BlockPropertiesTable Table 'get set' : 
    System.Object SyncRoot 'get ' : 
    Boolean IsSynchronized 'get ' : 
    Int32 Count 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ResultBuffer Item [Int32] 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ResultBuffer Item [Autodesk.AutoCAD.DatabaseServices.BlockPropertiesTableColumn] 'get set' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Item(BlockPropertiesTableColumn): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, ResultBuffer): PrivateScope, Public, HideBySig, SpecialName
    set_Item(BlockPropertiesTableColumn, ResultBuffer): PrivateScope, Public, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CopyTo(Array, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Table(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.BlockPropertiesTableRowCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Interfaces:
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    System.Object SyncRoot 'get ' : 
    Boolean IsSynchronized 'get ' : 
    Int32 Count 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.BlockPropertiesTableRow Item [Int32] 'get ' : 
  Methods:
    AddItem(): PrivateScope, Public, HideBySig
    AddAt(Int32): PrivateScope, Public, HideBySig
    GetIndex(BlockPropertiesTableRow): PrivateScope, Public, HideBySig
    Move(Int32, Int32): PrivateScope, Public, HideBySig
    Move(BlockPropertiesTableRow, Int32): PrivateScope, Public, HideBySig
    Sort(BlockPropertiesTableColumn, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Remove(BlockPropertiesTableRow): PrivateScope, Public, HideBySig
    Remove(Int32): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CopyTo(Array, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.BlockPropertiesTableColumnCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Interfaces:
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    System.Object SyncRoot 'get ' : 
    Boolean IsSynchronized 'get ' : 
    Int32 Count 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.BlockPropertiesTableColumn Item [Int32] 'get ' : 
  Methods:
    AddItem(ObjectId, String): PrivateScope, Public, HideBySig
    AddAt(ObjectId, String, Int32): PrivateScope, Public, HideBySig
    GetIndex(BlockPropertiesTableColumn): PrivateScope, Public, HideBySig
    Move(Int32, Int32): PrivateScope, Public, HideBySig
    Move(BlockPropertiesTableColumn, Int32): PrivateScope, Public, HideBySig
    Remove(BlockPropertiesTableColumn): PrivateScope, Public, HideBySig
    Remove(Int32): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    ContainsColumn(ObjectId, String): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsSynchronized(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_SyncRoot(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CopyTo(Array, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Autodesk.AutoCAD.DatabaseServices.BlockPropertiesTable+AuditErrorType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AuditErrorType Empty = 0 : Public, Static, Literal, HasDefault
    AuditErrorType NoMatchingRow = 1 : Public, Static, Literal, HasDefault
    AuditErrorType InvalidCell = 2 : Public, Static, Literal, HasDefault
    AuditErrorType NotInValueSet = 3 : Public, Static, Literal, HasDefault
    AuditErrorType NonConstAttDef = 4 : Public, Static, Literal, HasDefault
    AuditErrorType InvalidUnmatchedValue = 5 : Public, Static, Literal, HasDefault
    AuditErrorType DuplicateRows = 6 : Public, Static, Literal, HasDefault
    AuditErrorType ExprExternRef = 7 : Public, Static, Literal, HasDefault
    AuditErrorType CellEvalError = 8 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.BlockPropertiesTable+AuditError: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Properties:
    Int32[] RowIndices 'get ' : 
    Int32 ColumnIndex 'get ' : 
    Int32 RowIndex 'get ' : 
    AuditErrorType Type 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    get_RowIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_ColumnIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_RowIndices(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.MeshFaceterData: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double, Double, UInt16, UInt16, UInt16, Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int16 FaceterMeshType 'get set' : 
    UInt16 FaceterMinVGrid 'get set' : 
    UInt16 FaceterMinUGrid 'get set' : 
    UInt16 FaceterMaxGrid 'get set' : 
    Double FaceterMaxEdgeLength 'get set' : 
    Double FaceterGridRatio 'get set' : 
    Double FaceterDevNormal 'get set' : 
    Double FaceterDevSurface 'get set' : 
  Methods:
    get_FaceterDevSurface(): PrivateScope, Public, HideBySig, SpecialName
    set_FaceterDevSurface(Double): PrivateScope, Public, HideBySig, SpecialName
    get_FaceterDevNormal(): PrivateScope, Public, HideBySig, SpecialName
    set_FaceterDevNormal(Double): PrivateScope, Public, HideBySig, SpecialName
    get_FaceterGridRatio(): PrivateScope, Public, HideBySig, SpecialName
    set_FaceterGridRatio(Double): PrivateScope, Public, HideBySig, SpecialName
    get_FaceterMaxEdgeLength(): PrivateScope, Public, HideBySig, SpecialName
    set_FaceterMaxEdgeLength(Double): PrivateScope, Public, HideBySig, SpecialName
    get_FaceterMaxGrid(): PrivateScope, Public, HideBySig, SpecialName
    set_FaceterMaxGrid(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_FaceterMinUGrid(): PrivateScope, Public, HideBySig, SpecialName
    set_FaceterMinUGrid(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_FaceterMinVGrid(): PrivateScope, Public, HideBySig, SpecialName
    set_FaceterMinVGrid(UInt16): PrivateScope, Public, HideBySig, SpecialName
    get_FaceterMeshType(): PrivateScope, Public, HideBySig, SpecialName
    set_FaceterMeshType(Int16): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.MeshDataCollection: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3dCollection, Autodesk.AutoCAD.Geometry.Int32Collection, Autodesk.AutoCAD.Colors.EntityColorCollection, Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection MaterialIdArray 'get set' : 
    Autodesk.AutoCAD.Colors.EntityColorCollection ColorArray 'get set' : 
    Autodesk.AutoCAD.Geometry.Int32Collection FaceArray 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3dCollection VertexArray 'get set' : 
  Methods:
    get_VertexArray(): PrivateScope, Public, HideBySig, SpecialName
    set_VertexArray(Point3dCollection): PrivateScope, Public, HideBySig, SpecialName
    get_FaceArray(): PrivateScope, Public, HideBySig, SpecialName
    set_FaceArray(Int32Collection): PrivateScope, Public, HideBySig, SpecialName
    get_ColorArray(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorArray(EntityColorCollection): PrivateScope, Public, HideBySig, SpecialName
    get_MaterialIdArray(): PrivateScope, Public, HideBySig, SpecialName
    set_MaterialIdArray(ObjectIdCollection): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.SubDMesh: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Colors.EntityColor[] VertexColorArray 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3dCollection VertexTextureArray 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3dCollection VertexNormalArray 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3dCollection SubDividedNormalArray 'get ' : 
    Autodesk.AutoCAD.Geometry.Int32Collection SubDividedFaceArray 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3dCollection SubDividedVertices 'get ' : 
    Autodesk.AutoCAD.Geometry.Int32Collection EdgeArray 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3dCollection NormalArray 'get ' : 
    Autodesk.AutoCAD.Geometry.Int32Collection FaceArray 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3dCollection Vertices 'get ' : 
    Int32 NumberOfEdges 'get ' : 
    Int32 NumberOfSubDividedVertices 'get ' : 
    Int32 NumberOfVertices 'get ' : 
    Int32 NumberOfSubDividedFaces 'get ' : 
    Int32 NumberOfFaces 'get ' : 
    Boolean Watertight 'get ' : 
    Int32 SmoothLevel 'get ' : 
  Methods:
    SetDragStatus(DragStatus): PrivateScope, Public, Virtual, HideBySig
    SetSubDMesh(Point3dCollection, Int32Collection, Int32): PrivateScope, Public, HideBySig
    SetSphere(Double, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    SetCylinder(Double, Double, Double, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    SetCone(Double, Double, Double, Int32, Int32, Int32, Double, Int32): PrivateScope, Public, HideBySig
    SetTorus(Double, Int32, Int32, Double, Double, Int32): PrivateScope, Public, HideBySig
    Setbox(Double, Double, Double, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    SetWedge(Double, Double, Double, Int32, Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    SetPyramid(Double, Double, Int32, Int32, Int32, Int32, Double, Int32): PrivateScope, Public, HideBySig
    SubdDivideUp(): PrivateScope, Public, HideBySig
    SubdDivideDown(): PrivateScope, Public, HideBySig
    SubdRefine(FullSubentityPath[]): PrivateScope, Public, HideBySig
    SubdRefine(): PrivateScope, Public, HideBySig
    get_SmoothLevel(): PrivateScope, Public, HideBySig, SpecialName
    get_Watertight(): PrivateScope, Public, HideBySig, SpecialName
    SplitFace(SubentityId, SubentityId, Point3d, SubentityId, Point3d): PrivateScope, Public, HideBySig
    ExtrudeFaces(FullSubentityPath[], Point3dCollection, Double): PrivateScope, Public, HideBySig
    ExtrudeFaces(FullSubentityPath[], Double, Vector3d, Double): PrivateScope, Public, HideBySig
    ExtrudeConnectedFaces(FullSubentityPath[], Point3dCollection, Double): PrivateScope, Public, HideBySig
    ExtrudeConnectedFaces(FullSubentityPath[], Double, Vector3d, Double): PrivateScope, Public, HideBySig
    get_NumberOfFaces(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfSubDividedFaces(): PrivateScope, Public, HideBySig, SpecialName
    GetNumberOfSubDividedFacesAt(FullSubentityPath[]): PrivateScope, Public, HideBySig
    get_NumberOfVertices(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfSubDividedVertices(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfEdges(): PrivateScope, Public, HideBySig, SpecialName
    get_Vertices(): PrivateScope, Public, HideBySig, SpecialName
    get_FaceArray(): PrivateScope, Public, HideBySig, SpecialName
    get_NormalArray(): PrivateScope, Public, HideBySig, SpecialName
    get_EdgeArray(): PrivateScope, Public, HideBySig, SpecialName
    get_SubDividedVertices(): PrivateScope, Public, HideBySig, SpecialName
    get_SubDividedFaceArray(): PrivateScope, Public, HideBySig, SpecialName
    get_SubDividedNormalArray(): PrivateScope, Public, HideBySig, SpecialName
    GetVertexAt(SubentityId): PrivateScope, Public, HideBySig
    GetVertexAt(Int32): PrivateScope, Public, HideBySig
    SetVertexAt(SubentityId, Point3d): PrivateScope, Public, HideBySig
    SetVertexAt(Int32, Point3d): PrivateScope, Public, HideBySig
    GetSubDividedVertexAt(SubentityId): PrivateScope, Public, HideBySig
    GetSubDividedVertexAt(Int32): PrivateScope, Public, HideBySig
    SetCrease(FullSubentityPath[], Double): PrivateScope, Public, HideBySig
    SetCrease(Double): PrivateScope, Public, HideBySig
    GetCrease(FullSubentityPath[]): PrivateScope, Public, HideBySig
    GetCrease(SubentityId): PrivateScope, Public, HideBySig
    GetAdjacentSubentPath(FullSubentityPath, SubentityType): PrivateScope, Public, HideBySig
    GetSubentPath(Int32, SubentityType): PrivateScope, Public, HideBySig
    ConvertToSurface(Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ConvertToSurface(Boolean(HasFieldMarshal), SubentityId): PrivateScope, Public, HideBySig
    ConvertToSolid(Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetSubentColor(SubentityId): PrivateScope, Public, HideBySig
    SetSubentColor(SubentityId, Color): PrivateScope, Public, HideBySig
    GetSubentMaterial(SubentityId): PrivateScope, Public, HideBySig
    SetSubentMaterial(SubentityId, ObjectId): PrivateScope, Public, HideBySig
    GetSubentMaterialMapper(SubentityId): PrivateScope, Public, HideBySig
    SetSubentMaterialMapper(SubentityId, Mapper): PrivateScope, Public, HideBySig
    GetFacePlane(SubentityId): PrivateScope, Public, HideBySig
    ComputeVolume(): PrivateScope, Public, HideBySig
    ComputeSurfaceArea(): PrivateScope, Public, HideBySig
    MergeFaces(FullSubentityPath[]): PrivateScope, Public, HideBySig
    Collapse(SubentityId): PrivateScope, Public, HideBySig
    Cap(FullSubentityPath[]): PrivateScope, Public, HideBySig
    Spin(SubentityId): PrivateScope, Public, HideBySig
    GetObjectMesh(DBObject, MeshFaceterData): PrivateScope, Public, Static, HideBySig
    get_VertexNormalArray(): PrivateScope, Public, HideBySig, SpecialName
    set_VertexNormalArray(Vector3dCollection): PrivateScope, Public, HideBySig, SpecialName
    get_VertexTextureArray(): PrivateScope, Public, HideBySig, SpecialName
    set_VertexTextureArray(Point3dCollection): PrivateScope, Public, HideBySig, SpecialName
    get_VertexColorArray(): PrivateScope, Public, HideBySig, SpecialName
    set_VertexColorArray(EntityColor[]): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.Geometry.Entity3d: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Interfaces:
    System.ICloneable
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsEqualTo(Entity3d): PrivateScope, Public, HideBySig
    IsEqualTo(Entity3d, Tolerance): PrivateScope, Public, HideBySig
    TransformBy(Matrix3d): PrivateScope, Public, HideBySig
    TranslateBy(Vector3d): PrivateScope, Public, HideBySig
    RotateBy(Double, Vector3d, Point3d): PrivateScope, Public, HideBySig
    Mirror(Plane): PrivateScope, Public, HideBySig
    ScaleBy(Double, Point3d): PrivateScope, Public, HideBySig
    IsOn(Point3d): PrivateScope, Public, HideBySig
    IsOn(Point3d, Tolerance): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.PointOnCurve3d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.PointEntity3d
    Void .ctor(Autodesk.AutoCAD.Geometry.Curve3d, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d Point 'get ' : 
    Double Parameter 'get set' : 
    Autodesk.AutoCAD.Geometry.Curve3d Curve 'get set' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_Curve(): PrivateScope, Public, HideBySig, SpecialName
    set_Curve(Curve3d): PrivateScope, Public, HideBySig, SpecialName
    get_Parameter(): PrivateScope, Public, HideBySig, SpecialName
    set_Parameter(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Point(): PrivateScope, Public, HideBySig, SpecialName
    GetPointAtParameter(Double): PrivateScope, Public, HideBySig
    GetPointOnCurve(Curve3d, Double): PrivateScope, Public, Static, HideBySig
    GetDerivative(Int32, Curve3d, Double): PrivateScope, Public, Static, HideBySig
    GetDerivative(Int32, Double): PrivateScope, Public, HideBySig
    GetDerivative(Int32): PrivateScope, Public, HideBySig
    IsSingular(): PrivateScope, Public, HideBySig
    IsSingular(Tolerance): PrivateScope, Public, HideBySig
    GetCurvature(Double): PrivateScope, Public, HideBySig
    GetCurvature(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.BoundBlock3d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Entity3d
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Vector3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsBox 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d Direction3 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Direction2 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Direction1 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d BasePoint 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_BasePoint(): PrivateScope, Public, HideBySig, SpecialName
    get_Direction1(): PrivateScope, Public, HideBySig, SpecialName
    get_Direction2(): PrivateScope, Public, HideBySig, SpecialName
    get_Direction3(): PrivateScope, Public, HideBySig, SpecialName
    GetMaximumPoint(): PrivateScope, Public, HideBySig
    GetMinimumPoint(): PrivateScope, Public, HideBySig
    Set(Point3d, Vector3d, Vector3d, Vector3d): PrivateScope, Public, HideBySig
    Set(Point3d, Point3d): PrivateScope, Public, HideBySig
    Extend(Point3d): PrivateScope, Public, HideBySig
    Swell(Double): PrivateScope, Public, HideBySig
    Contains(Point3d): PrivateScope, Public, HideBySig
    IsDisjoint(BoundBlock3d): PrivateScope, Public, HideBySig
    get_IsBox(): PrivateScope, Public, HideBySig, SpecialName
    set_IsBox(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.Geometry.SplineEntity3d: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Curve3d
  Properties:
    Boolean HasFitData 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d EndPoint 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d StartPoint 'get ' : 
    Double EndParameter 'get ' : 
    Double StartParameter 'get ' : 
    Int32 NumberOfControlPoints 'get ' : 
    Autodesk.AutoCAD.Geometry.KnotCollection Knots 'get ' : 
    Int32 NumberOfKnots 'get ' : 
    Int32 Order 'get ' : 
    Int32 Degree 'get ' : 
    Boolean IsRational 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_IsRational(): PrivateScope, Public, HideBySig, SpecialName
    get_Degree(): PrivateScope, Public, HideBySig, SpecialName
    get_Order(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfKnots(): PrivateScope, Public, HideBySig, SpecialName
    get_Knots(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfControlPoints(): PrivateScope, Public, HideBySig, SpecialName
    GetContinuityAtKnot(Int32): PrivateScope, Public, HideBySig
    GetContinuityAtKnot(Int32, Tolerance): PrivateScope, Public, HideBySig
    get_StartParameter(): PrivateScope, Public, HideBySig, SpecialName
    get_EndParameter(): PrivateScope, Public, HideBySig, SpecialName
    get_StartPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_EndPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_HasFitData(): PrivateScope, Public, HideBySig, SpecialName
    KnotAt(Int32): PrivateScope, Public, HideBySig
    SetKnotAt(Int32, Double): PrivateScope, Public, HideBySig
    ControlPointAt(Int32): PrivateScope, Public, HideBySig
    SetControlPointAt(Int32, Point3d): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.EllipticalArc3d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Curve3d
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Vector3d, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Vector3d, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d EndPoint 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d StartPoint 'get ' : 
    Double EndAngle 'get ' : 
    Double StartAngle 'get ' : 
    Double MajorRadius 'get set' : 
    Double MinorRadius 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d MajorAxis 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d MinorAxis 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d Center 'get set' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    ClosestPointToPlane(PlanarEntity): PrivateScope, Public, HideBySig
    ClosestPointToPlane(PlanarEntity, Tolerance): PrivateScope, Public, HideBySig
    IntersectWith(PlanarEntity): PrivateScope, Public, HideBySig
    IntersectWith(PlanarEntity, Tolerance): PrivateScope, Public, HideBySig
    IntersectWith(LinearEntity3d): PrivateScope, Public, HideBySig
    IntersectWith(LinearEntity3d, Tolerance): PrivateScope, Public, HideBySig
    ProjectedIntersectWith(LinearEntity3d, Vector3d): PrivateScope, Public, HideBySig
    ProjectedIntersectWith(LinearEntity3d, Vector3d, Tolerance): PrivateScope, Public, HideBySig
    GetPlane(): PrivateScope, Public, HideBySig
    IsCircular(): PrivateScope, Public, HideBySig
    IsCircular(Tolerance): PrivateScope, Public, HideBySig
    IsInside(Point3d): PrivateScope, Public, HideBySig
    IsInside(Point3d, Tolerance): PrivateScope, Public, HideBySig
    get_Center(): PrivateScope, Public, HideBySig, SpecialName
    set_Center(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    get_MinorAxis(): PrivateScope, Public, HideBySig, SpecialName
    get_MajorAxis(): PrivateScope, Public, HideBySig, SpecialName
    SetAxes(Vector3d, Vector3d): PrivateScope, Public, HideBySig
    get_MinorRadius(): PrivateScope, Public, HideBySig, SpecialName
    set_MinorRadius(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MajorRadius(): PrivateScope, Public, HideBySig, SpecialName
    set_MajorRadius(Double): PrivateScope, Public, HideBySig, SpecialName
    get_StartAngle(): PrivateScope, Public, HideBySig, SpecialName
    get_EndAngle(): PrivateScope, Public, HideBySig, SpecialName
    SetAngles(Double, Double): PrivateScope, Public, HideBySig
    get_StartPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_EndPoint(): PrivateScope, Public, HideBySig, SpecialName
    Set(Point3d, Vector3d, Vector3d, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    Set(Point3d, Vector3d, Vector3d, Double, Double): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.LinearEntity3d: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Curve3d
  Properties:
    Autodesk.AutoCAD.Geometry.Vector3d Direction 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d PointOnLine 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    IntersectWith(PlanarEntity): PrivateScope, Public, HideBySig
    IntersectWith(PlanarEntity, Tolerance): PrivateScope, Public, HideBySig
    IntersectWith(LinearEntity3d): PrivateScope, Public, HideBySig
    IntersectWith(LinearEntity3d, Tolerance): PrivateScope, Public, HideBySig
    ProjectedIntersectWith(LinearEntity3d, Vector3d): PrivateScope, Public, HideBySig
    ProjectedIntersectWith(LinearEntity3d, Vector3d, Tolerance): PrivateScope, Public, HideBySig
    Overlap(LinearEntity3d): PrivateScope, Public, HideBySig
    Overlap(LinearEntity3d, Tolerance): PrivateScope, Public, HideBySig
    IsOn(Plane): PrivateScope, Public, HideBySig
    IsOn(Plane, Tolerance): PrivateScope, Public, HideBySig
    IsParallelTo(PlanarEntity): PrivateScope, Public, HideBySig
    IsParallelTo(PlanarEntity, Tolerance): PrivateScope, Public, HideBySig
    IsParallelTo(LinearEntity3d): PrivateScope, Public, HideBySig
    IsParallelTo(LinearEntity3d, Tolerance): PrivateScope, Public, HideBySig
    IsPerpendicularTo(PlanarEntity): PrivateScope, Public, HideBySig
    IsPerpendicularTo(PlanarEntity, Tolerance): PrivateScope, Public, HideBySig
    IsPerpendicularTo(LinearEntity3d): PrivateScope, Public, HideBySig
    IsPerpendicularTo(LinearEntity3d, Tolerance): PrivateScope, Public, HideBySig
    IsColinearTo(LinearEntity3d): PrivateScope, Public, HideBySig
    IsColinearTo(LinearEntity3d, Tolerance): PrivateScope, Public, HideBySig
    GetPerpendicularPlane(Point3d): PrivateScope, Public, HideBySig
    get_PointOnLine(): PrivateScope, Public, HideBySig, SpecialName
    get_Direction(): PrivateScope, Public, HideBySig, SpecialName
    GetLine(): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.Geometry.NurbCurve3dFitData: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Autodesk.AutoCAD.Geometry.KnotParameterizationEnum KnotParam 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d EndTangent 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d StartTangent 'get ' : 
    Boolean TangentsExist 'get ' : 
    Autodesk.AutoCAD.Geometry.Tolerance FitTolerance 'get ' : 
    Int32 Degree 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3dCollection FitPoints 'get ' : 
  Methods:
    get_FitPoints(): PrivateScope, Public, HideBySig, SpecialName
    get_Degree(): PrivateScope, Public, HideBySig, SpecialName
    get_FitTolerance(): PrivateScope, Public, HideBySig, SpecialName
    get_TangentsExist(): PrivateScope, Public, HideBySig, SpecialName
    get_StartTangent(): PrivateScope, Public, HideBySig, SpecialName
    get_EndTangent(): PrivateScope, Public, HideBySig, SpecialName
    get_KnotParam(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    IsEqualTo(NurbCurve3dFitData): PrivateScope, Public, HideBySig
    op_Inequality(NurbCurve3dFitData, NurbCurve3dFitData): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(NurbCurve3dFitData, NurbCurve3dFitData): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Struct Autodesk.AutoCAD.Geometry.NurbCurve3dData: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Autodesk.AutoCAD.Geometry.DoubleCollection Weights 'get ' : 
    Autodesk.AutoCAD.Geometry.KnotCollection Knots 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3dCollection ControlPoints 'get ' : 
    Boolean Periodic 'get ' : 
    Boolean Rational 'get ' : 
    Int32 Degree 'get ' : 
  Methods:
    get_Degree(): PrivateScope, Public, HideBySig, SpecialName
    get_Rational(): PrivateScope, Public, HideBySig, SpecialName
    get_Periodic(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlPoints(): PrivateScope, Public, HideBySig, SpecialName
    get_Knots(): PrivateScope, Public, HideBySig, SpecialName
    get_Weights(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    IsEqualTo(NurbCurve3dData): PrivateScope, Public, HideBySig
    op_Inequality(NurbCurve3dData, NurbCurve3dData): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(NurbCurve3dData, NurbCurve3dData): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.Geometry.NurbCurve3d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.SplineEntity3d
    Void .ctor(Autodesk.AutoCAD.Geometry.LineSegment3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.EllipticalArc3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3dCollection, Autodesk.AutoCAD.Geometry.Vector3dCollection, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3dCollection, Autodesk.AutoCAD.Geometry.Vector3dCollection, Autodesk.AutoCAD.Geometry.Tolerance, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3dCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3dCollection, Autodesk.AutoCAD.Geometry.Tolerance): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3dCollection, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Vector3d, Boolean, Boolean, Autodesk.AutoCAD.Geometry.KnotParameterizationEnum): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3dCollection, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Vector3d, Boolean, Boolean, Autodesk.AutoCAD.Geometry.KnotParameterizationEnum, Autodesk.AutoCAD.Geometry.Tolerance): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3dCollection, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Vector3d, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3dCollection, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Vector3d, Boolean, Boolean, Autodesk.AutoCAD.Geometry.Tolerance): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Autodesk.AutoCAD.Geometry.PolylineCurve3d, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Autodesk.AutoCAD.Geometry.KnotCollection, Autodesk.AutoCAD.Geometry.Point3dCollection, Autodesk.AutoCAD.Geometry.DoubleCollection, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Autodesk.AutoCAD.Geometry.KnotCollection, Autodesk.AutoCAD.Geometry.Point3dCollection, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.NurbCurve3dData DefinitionData 'get ' : 
    Autodesk.AutoCAD.Geometry.NurbCurve3dFitData FitData 'get ' : 
    Boolean EvalMode 'get ' : 
    Autodesk.AutoCAD.Geometry.KnotParameterizationEnum FitKnotParameterization 'get set' : 
    Int32 NumWeights 'get ' : 
    Autodesk.AutoCAD.Geometry.Tolerance FitTolerance 'get set' : 
    Int32 NumFitPoints 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_NumFitPoints(): PrivateScope, Public, HideBySig, SpecialName
    get_FitTolerance(): PrivateScope, Public, HideBySig, SpecialName
    set_FitTolerance(Tolerance): PrivateScope, Public, HideBySig, SpecialName
    GetFitTangents(): PrivateScope, Public, HideBySig
    get_NumWeights(): PrivateScope, Public, HideBySig, SpecialName
    get_FitKnotParameterization(): PrivateScope, Public, HideBySig, SpecialName
    set_FitKnotParameterization(KnotParameterizationEnum): PrivateScope, Public, HideBySig, SpecialName
    get_EvalMode(): PrivateScope, Public, HideBySig, SpecialName
    GetFitPointAt(Int32): PrivateScope, Public, HideBySig
    GetWeightAt(Int32): PrivateScope, Public, HideBySig
    GetParametersOfC1Discontinuity(): PrivateScope, Public, HideBySig
    GetParametersOfC1Discontinuity(Tolerance): PrivateScope, Public, HideBySig
    GetParametersOfG1Discontinuity(): PrivateScope, Public, HideBySig
    GetParametersOfG1Discontinuity(Tolerance): PrivateScope, Public, HideBySig
    SetFitPointAt(Int32, Point3d): PrivateScope, Public, HideBySig
    AddFitPointAt(Int32, Point3d): PrivateScope, Public, HideBySig
    DeleteFitPointAt(Int32): PrivateScope, Public, HideBySig
    get_FitData(): PrivateScope, Public, HideBySig, SpecialName
    get_DefinitionData(): PrivateScope, Public, HideBySig, SpecialName
    SetFitTangents(Vector3d, Vector3d): PrivateScope, Public, HideBySig
    SetFitData(Int32, Point3dCollection): PrivateScope, Public, HideBySig
    SetFitData(Int32, Point3dCollection, Tolerance): PrivateScope, Public, HideBySig
    SetFitData(KnotCollection, Point3dCollection, Vector3d, Vector3d, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetFitData(KnotCollection, Point3dCollection, Vector3d, Vector3d, Tolerance, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetFitData(Point3dCollection, Vector3d, Vector3d, KnotParameterizationEnum, Tolerance): PrivateScope, Public, HideBySig
    SetFitData(Point3dCollection, Vector3d, Vector3d): PrivateScope, Public, HideBySig
    SetFitData(Point3dCollection, Vector3d, Vector3d, Tolerance): PrivateScope, Public, HideBySig
    PurgeFitData(): PrivateScope, Public, HideBySig
    AddKnot(Double): PrivateScope, Public, HideBySig
    InsertKnot(Double): PrivateScope, Public, HideBySig
    SetWeightAt(Int32, Double): PrivateScope, Public, HideBySig
    SetEvaluateMode(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    JoinWith(NurbCurve3d): PrivateScope, Public, HideBySig
    HardTrimByParams(Double, Double): PrivateScope, Public, HideBySig
    MakeRational(Double): PrivateScope, Public, HideBySig
    MakeClosed(): PrivateScope, Public, HideBySig
    MakePeriodic(): PrivateScope, Public, HideBySig
    MakeNonPeriodic(): PrivateScope, Public, HideBySig
    MakeOpen(): PrivateScope, Public, HideBySig
    ElevateDegree(Int32): PrivateScope, Public, HideBySig
    AddControlPointAt(Double, Point3d, Double): PrivateScope, Public, HideBySig
    DeleteControlPointAt(Int32): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.PolylineCurve3d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.SplineEntity3d
    Void .ctor(Autodesk.AutoCAD.Geometry.Curve3d, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.KnotCollection, Autodesk.AutoCAD.Geometry.Point3dCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3dCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 NumberOfFitPoints 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_NumberOfFitPoints(): PrivateScope, Public, HideBySig, SpecialName
    FitPointAt(Int32): PrivateScope, Public, HideBySig
    SetFitPointAt(Int32, Point3d): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.ConstraintGroupNode: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId OwningConstraintGroupId 'get ' : 
    UInt32 NodeId 'get ' : 
  Methods:
    get_NodeId(): PrivateScope, Public, HideBySig, SpecialName
    get_OwningConstraintGroupId(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.ConstrainedGeometry: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ConstraintGroupNode
  Properties:
    Autodesk.AutoCAD.DatabaseServices.FullSubentityPath[] FullSubentityPaths 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ConstrainedGeometry[] ConnectedGeometries 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint[] ConnectedConstraints 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ConstrainedRigidSet OwningRigidSet 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId GeomDependencyId 'get ' : 
    Boolean IsReadOnly 'get ' : 
  Methods:
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_GeomDependencyId(): PrivateScope, Public, HideBySig, SpecialName
    get_OwningRigidSet(): PrivateScope, Public, HideBySig, SpecialName
    get_ConnectedConstraints(): PrivateScope, Public, HideBySig, SpecialName
    CommonConstraints(ConstrainedGeometry): PrivateScope, Public, HideBySig
    get_ConnectedGeometries(): PrivateScope, Public, HideBySig, SpecialName
    get_FullSubentityPaths(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.ConstrainedRigidSet: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ConstrainedGeometry
    Void .ctor(Boolean, Autodesk.AutoCAD.Geometry.Matrix3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Matrix3d Transform 'get ' : 
    Int32 NumOfConstrainedGeoms 'get ' : 
  Methods:
    get_NumOfConstrainedGeoms(): PrivateScope, Public, HideBySig, SpecialName
    GetConstrainedGeomAt(Int32): PrivateScope, Public, HideBySig
    get_Transform(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ConstraintGroupNode
  Properties:
    Boolean IsEnabled 'get ' : 
    Boolean IsInternal 'get ' : 
    Boolean IsImplied 'get ' : 
    Boolean IsActive 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.CompositeConstraint OwningCompositeConstraint 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.HelpParameter[] ConnectedHelpParameters 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ConstrainedGeometry[] ConnectedGeometries 'get ' : 
  Methods:
    get_ConnectedGeometries(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ConnectedHelpParameters(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetConnectedHelpParameterFor(ConstrainedGeometry): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_OwningCompositeConstraint(): PrivateScope, Public, HideBySig, SpecialName
    Deactivate(): PrivateScope, Public, HideBySig
    Reactivate(): PrivateScope, Public, HideBySig
    get_IsActive(): PrivateScope, Public, HideBySig, SpecialName
    get_IsImplied(): PrivateScope, Public, HideBySig, SpecialName
    get_IsInternal(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEnabled(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.ConstrainedPoint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ConstrainedGeometry
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d Point 'get ' : 
  Methods:
    get_Point(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.ConstrainedImplicitPoint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ConstrainedPoint
    Void .ctor(UInt32, Autodesk.AutoCAD.DatabaseServices.ImplicitPointType, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d Point 'get ' : 
    UInt32 ConstrainedCurveId 'get ' : 
    Int32 PointIndex 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ImplicitPointType PointType 'get ' : 
  Methods:
    get_PointType(): PrivateScope, Public, HideBySig, SpecialName
    get_PointIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_ConstrainedCurveId(): PrivateScope, Public, HideBySig, SpecialName
    get_Point(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.ImplicitPointType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.ImplicitPointType StartImplicit = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ImplicitPointType EndImplicit = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ImplicitPointType MidImplicit = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ImplicitPointType CenterImplicit = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ImplicitPointType DefineImplicit = 4 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.ConstrainedCurve: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ConstrainedGeometry
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ConstrainedImplicitPoint[] ConstrainedImplicitPoints 'get ' : 
    Boolean IsBounded 'get ' : 
  Methods:
    get_IsBounded(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ConstrainedImplicitPoints(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.ConstrainedLine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ConstrainedCurve
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Vector3d Direction 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d PointOnLine 'get ' : 
  Methods:
    get_PointOnLine(): PrivateScope, Public, HideBySig, SpecialName
    get_Direction(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.ConstrainedConstructionLine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ConstrainedLine
Class Autodesk.AutoCAD.DatabaseServices.Constrained2PointsConstructionLine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ConstrainedConstructionLine
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.ConstrainedDatumLine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ConstrainedConstructionLine
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Vector3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.ConstrainedBoundedLine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ConstrainedLine
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d MidPoint 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d EndPoint 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d StartPoint 'get ' : 
    Boolean IsRay 'get ' : 
  Methods:
    get_IsRay(): PrivateScope, Public, HideBySig, SpecialName
    get_StartPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_EndPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_MidPoint(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.ConstrainedCircle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ConstrainedCurve
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d CenterPoint 'get ' : 
    Double Radius 'get ' : 
  Methods:
    get_Radius(): PrivateScope, Public, HideBySig, SpecialName
    get_CenterPoint(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.ConstrainedArc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ConstrainedCircle
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d MidPoint 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d EndPoint 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d StartPoint 'get ' : 
  Methods:
    get_StartPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_EndPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_MidPoint(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.ConstrainedEllipse: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ConstrainedCurve
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d CenterPoint 'get ' : 
    Double MinorRadius 'get ' : 
    Double MajorRadius 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Direction 'get ' : 
  Methods:
    get_Direction(): PrivateScope, Public, HideBySig, SpecialName
    get_MajorRadius(): PrivateScope, Public, HideBySig, SpecialName
    get_MinorRadius(): PrivateScope, Public, HideBySig, SpecialName
    get_CenterPoint(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.ConstrainedBoundedEllipse: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ConstrainedEllipse
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d EndPoint 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d StartPoint 'get ' : 
  Methods:
    get_StartPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_EndPoint(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.ConstrainedSpline: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ConstrainedCurve
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId, Autodesk.AutoCAD.Geometry.NurbCurve3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 NumOfDefinePoints 'get ' : 
    Autodesk.AutoCAD.Geometry.NurbCurve3d NurbSpline 'get ' : 
  Methods:
    get_NurbSpline(): PrivateScope, Public, HideBySig, SpecialName
    get_NumOfDefinePoints(): PrivateScope, Public, HideBySig, SpecialName
    DefinePointAt(Int32): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint+ConstraintType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ConstraintType Horizontal = 0 : Public, Static, Literal, HasDefault
    ConstraintType Vertical = 1 : Public, Static, Literal, HasDefault
    ConstraintType Parallel = 2 : Public, Static, Literal, HasDefault
    ConstraintType Perpendicular = 3 : Public, Static, Literal, HasDefault
    ConstraintType Normal = 4 : Public, Static, Literal, HasDefault
    ConstraintType Collinear = 5 : Public, Static, Literal, HasDefault
    ConstraintType Coincident = 6 : Public, Static, Literal, HasDefault
    ConstraintType Concentric = 7 : Public, Static, Literal, HasDefault
    ConstraintType Tangent = 8 : Public, Static, Literal, HasDefault
    ConstraintType EqualRadius = 9 : Public, Static, Literal, HasDefault
    ConstraintType EqualLength = 10 : Public, Static, Literal, HasDefault
    ConstraintType Symmetric = 11 : Public, Static, Literal, HasDefault
    ConstraintType Smooth = 12 : Public, Static, Literal, HasDefault
    ConstraintType Fix = 13 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.HelpParameter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ConstraintGroupNode
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Value 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.EqualHelpParameterConstraint[] ConnectedEqualparamConstraints 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint ConnectedConstraint 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ConstrainedGeometry ConnectedGeometry 'get ' : 
  Methods:
    get_ConnectedGeometry(): PrivateScope, Public, HideBySig, SpecialName
    get_ConnectedConstraint(): PrivateScope, Public, HideBySig, SpecialName
    get_ConnectedEqualparamConstraints(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.CompositeConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint
  Properties:
    Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint[] OwnedConstraints 'get ' : 
  Methods:
    get_OwnedConstraints(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.EqualHelpParameterConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetEqualHelpParameters(HelpParameter&, HelpParameter&): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.PerpendicularConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.NormalConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.PointCurveConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.ColinearConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.PointCoincidenceConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.ConcentricConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.CenterPointConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ConcentricConstraint
Class Autodesk.AutoCAD.DatabaseServices.TangentConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.EqualRadiusConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.EqualDistanceConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.EqualLengthConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.ParallelConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.HorizontalConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ParallelConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.VerticalConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ParallelConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.EqualCurvatureConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.SymmetricConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.MidPointConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.FixedConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.G2SmoothConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.CompositeConstraint
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct Autodesk.AutoCAD.DatabaseServices.AssocEvaluationMode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.AssocEvaluationMode ModifyObjectsAssocEvaluationMode = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AssocEvaluationMode ModifyActionAssocEvaluationMode = 1 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.AssocAction: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.AssocEvaluationCallback CurrentEvaluationCallback 'get ' : 
    Boolean IsActionEvaluationInProgress 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId OwningNetwork 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.AssocStatus Status 'get set' : 
    Boolean IsActionBodyAProxy 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ActionBody 'get set' : 
  Methods:
    get_ActionBody(): PrivateScope, Public, HideBySig, SpecialName
    set_ActionBody(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    GetActionBody(ObjectId): PrivateScope, Public, Static, HideBySig
    get_IsActionBodyAProxy(): PrivateScope, Public, HideBySig, SpecialName
    get_Status(): PrivateScope, Public, HideBySig, SpecialName
    set_Status(AssocStatus): PrivateScope, Public, HideBySig, SpecialName
    SetStatus(AssocStatus, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_OwningNetwork(): PrivateScope, Public, HideBySig, SpecialName
    SetOwningNetwork(ObjectId, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetDependencies(Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    AddDependency(ObjectId, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    RemoveDependency(ObjectId, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    RemoveAllDependencies(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetDependentObjects(Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    IsOwnedDependency(AssocDependency): PrivateScope, Public, HideBySig
    IsExternalDependency(AssocDependency): PrivateScope, Public, HideBySig
    IsRelevantDependencyChange(AssocDependency): PrivateScope, Public, HideBySig
    HasDependencyCachedValue(AssocDependency): PrivateScope, Public, HideBySig
    AreDependenciesOnTheSameThing(AssocDependency, AssocDependency): PrivateScope, Public, HideBySig
    AreDependenciesEqual(AssocDependency, AssocDependency): PrivateScope, Public, HideBySig
    GetActionsDependentOnObject(DBObject, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), ObjectIdCollection): PrivateScope, Public, Static, HideBySig
    GetActionsDependentOnObject(DBObject, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    DependentObjectCloned(AssocDependency, DBObject, DBObject): PrivateScope, Public, HideBySig
    AddMoreObjectsToDeepClone(IdMapping, ObjectIdCollection): PrivateScope, Public, HideBySig
    PostProcessAfterDeepClone(IdMapping): PrivateScope, Public, HideBySig
    PostProcessAfterDeepCloneCancel(IdMapping): PrivateScope, Public, HideBySig
    get_IsActionEvaluationInProgress(): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentEvaluationCallback(): PrivateScope, Public, HideBySig, SpecialName
    EvaluateDependencies(): PrivateScope, Public, HideBySig
    EvaluateDependency(AssocDependency): PrivateScope, Public, HideBySig
    OwnedDependencyStatusChanged(AssocDependency, AssocStatus): PrivateScope, Public, HideBySig
    TransformActionBy(Matrix3d): PrivateScope, Public, HideBySig
    IsEqualTo(AssocAction): PrivateScope, Public, HideBySig
    EvaluationPriority(): PrivateScope, Public, HideBySig
    GetDependentActionsToEvaluate(ActionsToEvaluateCallback): PrivateScope, Public, HideBySig
    Evaluate(AssocEvaluationCallback): PrivateScope, Public, HideBySig
    ObjectThatOwnsNetworkInstance(): PrivateScope, Public, HideBySig
    DragStatus(DragStatus): PrivateScope, Public, HideBySig
    RemoveActionsControllingObject(ObjectId, Int32, ObjectId): PrivateScope, Public, Static, HideBySig
    RemoveActionsControllingObject(ObjectId, Int32): PrivateScope, Public, Static, HideBySig
    RemoveActionsControllingObject(ObjectId): PrivateScope, Public, Static, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.AssocDraggingState: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.AssocDraggingState NotDraggingAssocDraggingState = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AssocDraggingState FirstSampleAssocDraggingState = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AssocDraggingState IntermediateSampleAssocDraggingState = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AssocDraggingState LastSampleAssocDraggingState = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.AssocTransformationType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.AssocTransformationType NotSpecified = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AssocTransformationType Stretch = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AssocTransformationType Rotate = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AssocTransformationType Move = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.AssocStatus: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.AssocStatus IsUpToDateAssocStatus = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AssocStatus ChangedDirectlyAssocStatus = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AssocStatus ChangedTransitivelyAssocStatus = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AssocStatus ChangedNoDifferenceAssocStatus = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AssocStatus FailedToEvaluateAssocStatus = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AssocStatus ErasedAssocStatus = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AssocStatus SuppressedAssocStatus = 6 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.AssocGlobalUtility: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    EvaluationRequestSeverityLevel(AssocStatus): PrivateScope, Public, Static, HideBySig
    IsEvaluationRequest(AssocStatus): PrivateScope, Public, Static, HideBySig
    IsToBeSkipped(AssocStatus): PrivateScope, Public, Static, HideBySig
    IsDraggingProvidingSubstituteObjects(AssocEvaluationCallback): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AssocDependency: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.AssocEvaluationCallback CurrentEvaluationCallback 'get ' : 
    Boolean IsActionEvaluationInProgress 'get ' : 
    Boolean IsDependentOnObjectReadOnly 'get ' : 
    Boolean IsRelevantChange 'get ' : 
    Boolean HasCachedValue 'get ' : 
    Boolean IsDelegatingToOwningAction 'get set' : 
    Autodesk.AutoCAD.Runtime.ErrorStatus DependentOnObjectStatus 'get ' : 
    Boolean IsAttachedToObject 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId NextDependencyOnObject 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId PrevDependencyOnObject 'get ' : 
    Boolean IsDependentOnCompoundObject 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.CompoundObjectId DependentOnCompoundObject 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId DependentOnObject 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId OwningAction 'get set' : 
    Int32 Order 'get set' : 
    Boolean IsObjectStateDependent 'get set' : 
    Boolean IsWriteDependency 'get set' : 
    Boolean IsReadDependency 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.AssocStatus Status 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId DependencyBody 'get set' : 
  Methods:
    get_DependencyBody(): PrivateScope, Public, HideBySig, SpecialName
    set_DependencyBody(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_Status(): PrivateScope, Public, HideBySig, SpecialName
    set_Status(AssocStatus): PrivateScope, Public, HideBySig, SpecialName
    SetStatus(AssocStatus, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_IsReadDependency(): PrivateScope, Public, HideBySig, SpecialName
    set_IsReadDependency(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsWriteDependency(): PrivateScope, Public, HideBySig, SpecialName
    set_IsWriteDependency(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsObjectStateDependent(): PrivateScope, Public, HideBySig, SpecialName
    set_IsObjectStateDependent(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Order(): PrivateScope, Public, HideBySig, SpecialName
    set_Order(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OwningAction(): PrivateScope, Public, HideBySig, SpecialName
    set_OwningAction(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_DependentOnObject(): PrivateScope, Public, HideBySig, SpecialName
    get_DependentOnCompoundObject(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDependentOnCompoundObject(): PrivateScope, Public, HideBySig, SpecialName
    get_PrevDependencyOnObject(): PrivateScope, Public, HideBySig, SpecialName
    get_NextDependencyOnObject(): PrivateScope, Public, HideBySig, SpecialName
    get_IsAttachedToObject(): PrivateScope, Public, HideBySig, SpecialName
    AttachToObject(CompoundObjectId): PrivateScope, Public, HideBySig
    get_DependentOnObjectStatus(): PrivateScope, Public, HideBySig, SpecialName
    DetachFromObject(): PrivateScope, Public, HideBySig
    UpdateDependentOnObject(): PrivateScope, Public, HideBySig
    SetDependentOnObject(CompoundObjectId): PrivateScope, Public, HideBySig
    GetFirstDependencyOnObject(DBObject): PrivateScope, Public, Static, HideBySig
    GetDependenciesOnObject(DBObject, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    NotifyDependenciesOnObject(DBObject, AssocStatus): PrivateScope, Public, Static, HideBySig
    get_IsDelegatingToOwningAction(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDelegatingToOwningAction(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasCachedValue(): PrivateScope, Public, HideBySig, SpecialName
    get_IsRelevantChange(): PrivateScope, Public, HideBySig, SpecialName
    IsDependentOnTheSameThingAs(AssocDependency): PrivateScope, Public, HideBySig
    get_IsDependentOnObjectReadOnly(): PrivateScope, Public, HideBySig, SpecialName
    IsEqualTo(AssocDependency): PrivateScope, Public, HideBySig
    get_IsActionEvaluationInProgress(): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentEvaluationCallback(): PrivateScope, Public, HideBySig, SpecialName
    Evaluate(): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.AssocEvaluationPriority: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.AssocEvaluationPriority CannotBeEvaluatedAssocEvaluationPriority = -1000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AssocEvaluationPriority CannotDermineAssocEvaluationPriority = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AssocEvaluationPriority CanBeEvaluatedAssocEvaluationPriority = 1000 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.CompoundObjectId: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId, Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection, Autodesk.AutoCAD.DatabaseServices.Database): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.CompoundObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId, Autodesk.AutoCAD.DatabaseServices.Database): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Matrix3d Transform 'get ' : 
    StatusType Status 'get ' : 
    Boolean IsSimpleObjectId 'get ' : 
    Boolean IsExternal 'get ' : 
    Boolean IsEmpty 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection Path 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection FullPath 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId LeafId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId TopId 'get ' : 
  Methods:
    op_Assign(CompoundObjectId): PrivateScope, Public, HideBySig, SpecialName
    op_Assign(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(CompoundObjectId): PrivateScope, Public, HideBySig, SpecialName
    op_Inequality(CompoundObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_TopId(): PrivateScope, Public, HideBySig, SpecialName
    get_LeafId(): PrivateScope, Public, HideBySig, SpecialName
    get_FullPath(): PrivateScope, Public, HideBySig, SpecialName
    get_Path(): PrivateScope, Public, HideBySig, SpecialName
    SetEmpty(): PrivateScope, Public, HideBySig
    Set(ObjectId, ObjectIdCollection, Database): PrivateScope, Public, HideBySig
    Set(CompoundObjectId, Database): PrivateScope, Public, HideBySig
    Set(ObjectId, Database): PrivateScope, Public, HideBySig
    SetFullPath(ObjectIdCollection, Database): PrivateScope, Public, HideBySig
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    IsValid(Int32): PrivateScope, Public, HideBySig
    get_IsExternal(): PrivateScope, Public, HideBySig, SpecialName
    get_IsSimpleObjectId(): PrivateScope, Public, HideBySig, SpecialName
    get_Status(): PrivateScope, Public, HideBySig, SpecialName
    get_Transform(): PrivateScope, Public, HideBySig, SpecialName
    Remap(IdMapping): PrivateScope, Public, HideBySig
    DwgOutFields(DwgFiler, Database): PrivateScope, Public, HideBySig
    DwgInFields(DwgFiler, Int32): PrivateScope, Public, HideBySig
    DxfOutFields(DxfFiler, Database): PrivateScope, Public, HideBySig
    DxfInFields(DxfFiler, Database, Int32): PrivateScope, Public, HideBySig
    NullId(): PrivateScope, Public, Static, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.CompoundObjectId+StatusType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    StatusType Valid = 0 : Public, Static, Literal, HasDefault
    StatusType WasLoadedNowUnloaded = 1 : Public, Static, Literal, HasDefault
    StatusType CouldNotResolveNonTerminal = 2 : Public, Static, Literal, HasDefault
    StatusType CouldNotResolveTerminal = 3 : Public, Static, Literal, HasDefault
    StatusType CouldNotResolveTooEarly = 4 : Public, Static, Literal, HasDefault
    StatusType IncompatibleIdType = 1000 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.AssocNetwork: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocAction
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection GetActions 'get ' : 
  Methods:
    get_GetActions(): PrivateScope, Public, HideBySig, SpecialName
    AddAction(ObjectId, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    RemoveAction(ObjectId, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    AddActions(ObjectIdCollection, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    RemoveAllActions(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    OwnedActionStatusChanged(AssocAction, AssocStatus): PrivateScope, Public, HideBySig
    GetInstanceFromDatabase(Database, Boolean(HasFieldMarshal), String): PrivateScope, Public, Static, HideBySig
    GetInstanceFromObject(ObjectId, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), String): PrivateScope, Public, Static, HideBySig
    RemoveInstanceFromObject(ObjectId, Boolean(HasFieldMarshal), String): PrivateScope, Public, Static, HideBySig
    RemoveInstanceFromDatabase(Database, Boolean(HasFieldMarshal), String): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AssocVariable: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocAction
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String EvaluatorId 'get set' : 
    System.String Description 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ResultBuffer Value 'get set' : 
    System.String Expression 'get ' : 
    System.String Name 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Expression(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(ResultBuffer): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    set_Description(String): PrivateScope, Public, HideBySig, SpecialName
    SetName(String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    FindObjectByName(String, RXClass): PrivateScope, Public, HideBySig
    ValidateNameAndExpression(String, String, String&): PrivateScope, Public, HideBySig
    SetExpression(String, String, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), String&, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_EvaluatorId(): PrivateScope, Public, HideBySig, SpecialName
    set_EvaluatorId(String): PrivateScope, Public, HideBySig, SpecialName
    EvaluateExpression(ObjectIdCollection&, ResultBuffer[]&, ResultBuffer&): PrivateScope, Public, HideBySig
    EvaluateExpression(ResultBuffer&): PrivateScope, Public, HideBySig
    AddGlobalCallback(AssocVariableCallback): PrivateScope, Public, Static, HideBySig
    RemoveGlobalCallback(AssocVariableCallback): PrivateScope, Public, Static, HideBySig
    globalCallback(): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.ExplicitConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint
  Properties:
    Double MeasuredValue 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId DimDependencyId 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ValueDependencyId 'get ' : 
  Methods:
    get_ValueDependencyId(): PrivateScope, Public, HideBySig, SpecialName
    get_DimDependencyId(): PrivateScope, Public, HideBySig, SpecialName
    set_DimDependencyId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_MeasuredValue(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.DistanceConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ExplicitConstraint
    Void .ctor(UInt32, DistanceDirectionType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Vector3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ConstrainedLineId 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Direction 'get ' : 
    DistanceDirectionType DirectionType 'get ' : 
  Methods:
    get_DirectionType(): PrivateScope, Public, HideBySig, SpecialName
    get_Direction(): PrivateScope, Public, HideBySig, SpecialName
    get_ConstrainedLineId(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.DistanceConstraint+DistanceDirectionType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DistanceDirectionType NotDirected = 0 : Public, Static, Literal, HasDefault
    DistanceDirectionType FixedDirection = 1 : Public, Static, Literal, HasDefault
    DistanceDirectionType PerpendicularToLine = 2 : Public, Static, Literal, HasDefault
    DistanceDirectionType ParallelToLine = 3 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.AngularConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ExplicitConstraint
    Void .ctor(AngularSectorType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    AngularSectorType SectorType 'get ' : 
  Methods:
    get_SectorType(): PrivateScope, Public, HideBySig, SpecialName
    SetAngleMultiplier(Double): PrivateScope, Public, Static, HideBySig
    AngleMultiplier(): PrivateScope, Public, Static, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.AngularConstraint+AngularSectorType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AngularSectorType ParallelAntiClockwise = 0 : Public, Static, Literal, HasDefault
    AngularSectorType AntiParallelClockwise = 1 : Public, Static, Literal, HasDefault
    AngularSectorType ParallelClockwise = 2 : Public, Static, Literal, HasDefault
    AngularSectorType AntiParallelAntiClockwise = 3 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.ThreePointAngleConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AngularConstraint
    Void .ctor(AngularSectorType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.RadiusDiameterConstraint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ExplicitConstraint
    Void .ctor(RadDiaConstrType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    RadDiaConstrType ConstrType 'get ' : 
  Methods:
    get_ConstrType(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.RadiusDiameterConstraint+RadDiaConstrType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    RadDiaConstrType CircleRadius = 0 : Public, Static, Literal, HasDefault
    RadDiaConstrType CircleDiameter = 1 : Public, Static, Literal, HasDefault
    RadDiaConstrType MinorRadius = 2 : Public, Static, Literal, HasDefault
    RadDiaConstrType MajorRadius = 3 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.AssocGeomDependency: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocDependency
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Surface[] FaceSubentityGeometry 'get set' : 
    Autodesk.AutoCAD.Geometry.Curve3d[] EdgeSubentityGeometry 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d[] VertexSubentityGeometry 'get set' : 
    Boolean IsCachingSubentityGeometry 'get set' : 
    Int32 TransientSubentCount 'get ' : 
    UInt32 SubentityType 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.SubentityId Subentity 'set' : 
    Autodesk.AutoCAD.DatabaseServices.SubentityId[] TransientSubentIds 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityId PersistentSubentId 'get ' : 
  Methods:
    get_PersistentSubentId(): PrivateScope, Public, HideBySig, SpecialName
    get_TransientSubentIds(): PrivateScope, Public, HideBySig, SpecialName
    set_Subentity(SubentityId): PrivateScope, Public, HideBySig, SpecialName
    get_SubentityType(): PrivateScope, Public, HideBySig, SpecialName
    get_TransientSubentCount(): PrivateScope, Public, HideBySig, SpecialName
    get_IsCachingSubentityGeometry(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCachingSubentityGeometry(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_VertexSubentityGeometry(): PrivateScope, Public, HideBySig, SpecialName
    set_VertexSubentityGeometry(Point3d[]): PrivateScope, Public, HideBySig, SpecialName
    get_EdgeSubentityGeometry(): PrivateScope, Public, HideBySig, SpecialName
    set_EdgeSubentityGeometry(Curve3d[]): PrivateScope, Public, HideBySig, SpecialName
    get_FaceSubentityGeometry(): PrivateScope, Public, HideBySig, SpecialName
    set_FaceSubentityGeometry(Surface[]): PrivateScope, Public, HideBySig, SpecialName
    DependentOnObjectMirrored(): PrivateScope, Public, HideBySig
    RedirectToAnotherSubentity(ObjectId, SubentityId, ObjectId, SubentityId): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocAction
    Void .ctor(Autodesk.AutoCAD.Geometry.Plane): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.GeometricalConstraint[] Constraints 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ConstrainedGeometry[] ConstrainedGeometries 'get ' : 
    Int32 GetDOF 'get ' : 
    Autodesk.AutoCAD.Geometry.Plane WorkPlane 'get set' : 
  Methods:
    get_WorkPlane(): PrivateScope, Public, HideBySig, SpecialName
    set_WorkPlane(Plane): PrivateScope, Public, HideBySig, SpecialName
    TransformActionBy(Matrix3d): PrivateScope, Public, HideBySig
    get_GetDOF(): PrivateScope, Public, HideBySig, SpecialName
    SolutionStatus(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GeometryStatus(ConstrainedGeometry): PrivateScope, Public, HideBySig
    ConstraintStatus(GeometricalConstraint): PrivateScope, Public, HideBySig
    AddConstrainedGeometry(FullSubentityPath): PrivateScope, Public, HideBySig
    DeleteConstrainedGeometry(ObjectId): PrivateScope, Public, HideBySig
    GetConstrainedGeometry(AssocGeomDependency, ImplicitPointType, Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetConstrainedGeometry(AssocGeomDependency): PrivateScope, Public, HideBySig
    GetConstrainedGeometry(FullSubentityPath, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_ConstrainedGeometries(): PrivateScope, Public, HideBySig, SpecialName
    AddGeometricalConstraint(ConstraintType, ConstrainedGeometry[]): PrivateScope, Public, HideBySig
    AddGeometricalConstraint(ConstraintType, FullSubentityPath[]): PrivateScope, Public, HideBySig
    AddDistanceConstraint(ConstrainedGeometry, ConstrainedGeometry, DistanceDirectionType, ObjectId, ObjectId, Vector3d, ConstrainedLine): PrivateScope, Public, HideBySig
    AddAngularConstraint(ConstrainedLine, ConstrainedLine, AngularSectorType, ObjectId, ObjectId): PrivateScope, Public, HideBySig
    Add3PointAngularConstraint(ConstrainedPoint, ConstrainedPoint, ConstrainedPoint, AngularSectorType, ObjectId, ObjectId): PrivateScope, Public, HideBySig
    AddRadiusDiameterConstraint(ConstrainedGeometry, RadDiaConstrType, ObjectId, ObjectId): PrivateScope, Public, HideBySig
    DeleteConstraint(GeometricalConstraint): PrivateScope, Public, HideBySig
    get_Constraints(): PrivateScope, Public, HideBySig, SpecialName
    AutoConstrain(FullSubentityPath[], Tolerance, AutoConstrainEvaluationCallback): PrivateScope, Public, HideBySig
    GetAllConnectedGeomDependencies(ObjectIdCollection): PrivateScope, Public, HideBySig
    GetGroupNode(UInt32): PrivateScope, Public, HideBySig
    RegenDimensionSystem(): PrivateScope, Public, HideBySig
    GeometryMirrored(AssocGeomDependency): PrivateScope, Public, HideBySig
    AddGlobalCallback(Assoc2dConstraintCallback): PrivateScope, Public, Static, HideBySig
    RemoveGlobalCallback(Assoc2dConstraintCallback): PrivateScope, Public, Static, HideBySig
    GlobalCallback(): PrivateScope, Public, Static, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.Assoc2dConstraintGroup+SolutionStatusType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    SolutionStatusType WellDefined = 0 : Public, Static, Literal, HasDefault
    SolutionStatusType UnderConstrained = 1 : Public, Static, Literal, HasDefault
    SolutionStatusType OverConstrained = 2 : Public, Static, Literal, HasDefault
    SolutionStatusType Inconsistent = 3 : Public, Static, Literal, HasDefault
    SolutionStatusType NotEvaluated = 4 : Public, Static, Literal, HasDefault
    SolutionStatusType NotAvailable = 5 : Public, Static, Literal, HasDefault
    SolutionStatusType RejectedByClient = 6 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.AssocValueDependency: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocDependency
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ResultBuffer DependentOnObjectValue 'get set' : 
    System.String ValueName 'get set' : 
  Methods:
    get_ValueName(): PrivateScope, Public, HideBySig, SpecialName
    set_ValueName(String): PrivateScope, Public, HideBySig, SpecialName
    get_DependentOnObjectValue(): PrivateScope, Public, HideBySig, SpecialName
    set_DependentOnObjectValue(ResultBuffer): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.AssocSingleEdgePersSubentId: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityId
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsNull 'get ' : 
  Methods:
    TransientSubentCount(Entity): PrivateScope, Public, Virtual, HideBySig
    SubentType(Entity): PrivateScope, Public, Virtual, HideBySig
    get_IsNull(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    IsEqualTo(Entity, AssocPersSubentityId): PrivateScope, Public, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AssocSimplePersSubentId: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocPersSubentityId
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.SubentityId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsNull 'get ' : 
  Methods:
    TransientSubentCount(Entity): PrivateScope, Public, Virtual, HideBySig
    SubentType(Entity): PrivateScope, Public, Virtual, HideBySig
    SubentId(Entity): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_IsNull(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    IsEqualTo(Entity, AssocPersSubentityId): PrivateScope, Public, Virtual, HideBySig
    DwgOutFields(DwgFiler): PrivateScope, Public, Virtual, HideBySig
    DwgInFields(DwgFiler): PrivateScope, Public, Virtual, HideBySig
    DxfOutFields(DxfFiler): PrivateScope, Public, Virtual, HideBySig
    DxfInFields(DxfFiler): PrivateScope, Public, Virtual, HideBySig
    Audit(AuditInfo): PrivateScope, Public, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.SubentityGeometry: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.Geometry.Curve3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Curve3d Curve 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d Point 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.SubentityType Type 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    get_Point(): PrivateScope, Public, HideBySig, SpecialName
    get_Curve(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase+NotificationIgnorerDotNet: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsIgnoringNotifications(): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBody: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocDimDependencyBodyBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsEntityAttachmentChangedOverride 'get ' : 
    Double EntityMeasurementOverride 'get ' : 
    System.String EntityTextOverride 'get set' : 
  Methods:
    get_EntityTextOverride(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_EntityTextOverride(String): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_EntityMeasurementOverride(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsEntityAttachmentChangedOverride(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    UpdateDependentOnObjectOverride(): PrivateScope, Public, Virtual, HideBySig
    CreateAndPostToDatabase(ObjectId, ObjectId&, ObjectId&): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AssocManager: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    EvaluateTopLevelNetwork(Database, AssocEvaluationCallback, Int32): PrivateScope, Public, Static, HideBySig
    GlobalEvaluationMultiCallback(): PrivateScope, Public, Static, HideBySig
    AddGlobalEvaluationCallback(AssocEvaluationCallback, Int32): PrivateScope, Public, Static, HideBySig
    RemoveGlobalEvaluationCallback(AssocEvaluationCallback): PrivateScope, Public, Static, HideBySig
    GetGlobalEvaluationCallbacks(ArrayList&, ArrayList&): PrivateScope, Public, Static, HideBySig
    HasAssocNetwork(Database): PrivateScope, Public, Static, HideBySig
    AuditAssociativeData(Database, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    Initialize(): PrivateScope, Public, Static, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.AssocActionBody+ValueParam: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String, System.String, Autodesk.AutoCAD.DatabaseServices.ResultBuffer): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ResultBuffer Value 'get set' : 
    System.String EvaluatorId 'get set' : 
    System.String Expression 'get set' : 
  Methods:
    get_Expression(): PrivateScope, Public, HideBySig, SpecialName
    set_Expression(String): PrivateScope, Public, HideBySig, SpecialName
    get_EvaluatorId(): PrivateScope, Public, HideBySig, SpecialName
    set_EvaluatorId(String): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(ResultBuffer): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.GeomRef: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Properties:
    Boolean IsEmpty 'get ' : 
    Boolean IsValid 'get ' : 
  Methods:
    Reset(): PrivateScope, Public, HideBySig
    get_IsValid(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.SubentRef: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.GeomRef
  Properties:
    Autodesk.AutoCAD.DatabaseServices.SubentityId SubentId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.CompoundObjectId Entity 'get ' : 
  Methods:
    CopyFrom(SubentRef): PrivateScope, Public, HideBySig
    get_Entity(): PrivateScope, Public, HideBySig, SpecialName
    get_SubentId(): PrivateScope, Public, HideBySig, SpecialName
    CreateEntity(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.FaceRef: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.SubentRef
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.CompoundObjectId, Autodesk.AutoCAD.DatabaseServices.SubentityId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.CompoundObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.DatabaseServices.AssocActionParam: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ParentAction 'get ' : 
  Methods:
    MakeParamEmpty(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    MakeParamConstant(): PrivateScope, Public, HideBySig
    DetachDependencies(): PrivateScope, Public, HideBySig
    TransformConstantGeometry(Matrix3d): PrivateScope, Public, HideBySig
    get_ParentAction(): PrivateScope, Public, HideBySig, SpecialName
    GetDependencies(Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.AssocFaceActionParam: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocActionParam
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.CompoundObjectId DependentOnCompoundObject 'get ' : 
  Methods:
    GetFaceRef(): PrivateScope, Public, HideBySig
    SetFaceRef(FaceRef, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetFaceRef(FaceRef): PrivateScope, Public, HideBySig
    get_DependentOnCompoundObject(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.AssocEdgeActionParam: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocActionParam
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.CompoundObjectId DependentOnCompoundObject 'get ' : 
  Methods:
    GetEdgeRef(): PrivateScope, Public, HideBySig
    SetEdgeRef(EdgeRef, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetEdgeRef(EdgeRef): PrivateScope, Public, HideBySig
    get_DependentOnCompoundObject(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.AssocAsmBodyActionParam: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocActionParam
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.CompoundObjectId DependentOnCompoundObject 'get ' : 
  Methods:
    SetBody(ObjectId, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetBody(Entity, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_DependentOnCompoundObject(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.AssocVertexActionParam: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocActionParam
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.CompoundObjectId DependentOnCompoundObject 'get ' : 
  Methods:
    SetVertexRef(VertexRef, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetVertexRef(): PrivateScope, Public, HideBySig
    get_DependentOnCompoundObject(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.AssocCompoundActionParam: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocActionParam
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId Item [Int32] 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection OwnedParams 'get ' : 
    Int32 ParamCount 'get ' : 
  Methods:
    RemoveAllParams(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_ParamCount(): PrivateScope, Public, HideBySig, SpecialName
    get_OwnedParams(): PrivateScope, Public, HideBySig, SpecialName
    AddParam(ObjectId): PrivateScope, Public, HideBySig
    RemoveParam(ObjectId, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ParamsAtName(String): PrivateScope, Public, HideBySig
    ParamAtName(String, Int32): PrivateScope, Public, HideBySig
    ParamAtName(String): PrivateScope, Public, HideBySig
    ParamAtIndex(Int32): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.AssocPathActionParam: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocCompoundActionParam
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetEdgeRefArray(): PrivateScope, Public, HideBySig
    SetEdgeRefArray(EdgeRef[]): PrivateScope, Public, HideBySig
    UpdateEdgeRef(Int32, EdgeRef): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AssocParamBasedActionBody: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocActionBody
Class Autodesk.AutoCAD.DatabaseServices.AssocSurfaceActionBody: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocParamBasedActionBody
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsSemiAssociative 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ResultingSurface 'get set' : 
  Methods:
    ResultingSurfaceDep(Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ResultingSurfaceDep(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_ResultingSurface(): PrivateScope, Public, HideBySig, SpecialName
    set_ResultingSurface(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    SetResultingSurface(ObjectId, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_IsSemiAssociative(): PrivateScope, Public, HideBySig, SpecialName
    EvaluateOverride(): PrivateScope, Public, Virtual, HideBySig
    FindActionsThatAffectedTopologicalSubentity(Entity, SubentityId): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AssocPathBasedSurfaceActionBody: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocSurfaceActionBody
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection InputVertexParams 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection InputPathParams 'get ' : 
  Methods:
    RemoveAllPathParams(): PrivateScope, Public, HideBySig
    get_InputPathParams(): PrivateScope, Public, HideBySig, SpecialName
    RemoveAllVertexParams(): PrivateScope, Public, HideBySig
    get_InputVertexParams(): PrivateScope, Public, HideBySig, SpecialName
    GetInputPaths(EdgeRef[][][]&(Out)): PrivateScope, Public, HideBySig
    SetInputPaths(PathRef[]): PrivateScope, Public, HideBySig
    SetInputPaths(EdgeRef[][]): PrivateScope, Public, HideBySig
    UpdateInputPath(Int32, PathRef): PrivateScope, Public, HideBySig
    SetInputPoints(VertexRef[]): PrivateScope, Public, HideBySig
    GetInputPoints(): PrivateScope, Public, HideBySig
    MakeInputPathsDrawOnTopOfResultingSurface(): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.BlendOptions+DriveModeType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DriveModeType DriveModeFirst = 0 : Public, Static, Literal, HasDefault
    DriveModeType DriveModeSecond = 1 : Public, Static, Literal, HasDefault
    DriveModeType DriveModeBoth = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.BlendOptionsBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.BlendOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    DriveModeType DriveMode 'get set' : 
    System.Nullable`1[Autodesk.AutoCAD.Geometry.Vector3d] CoplanarDirection 'get set' : 
    System.Nullable`1[Autodesk.AutoCAD.Geometry.Point3d] CoplanarPoint 'get set' : 
    UInt32 Quality 'get set' : 
    Boolean Solid 'get set' : 
    Boolean Simplify 'get set' : 
  Methods:
    get_Simplify(): PrivateScope, Public, HideBySig, SpecialName
    set_Simplify(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Solid(): PrivateScope, Public, HideBySig, SpecialName
    set_Solid(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Quality(): PrivateScope, Public, HideBySig, SpecialName
    set_Quality(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_CoplanarPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_CoplanarPoint(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_CoplanarDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_CoplanarDirection(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_DriveMode(): PrivateScope, Public, HideBySig, SpecialName
    set_DriveMode(DriveModeType): PrivateScope, Public, HideBySig, SpecialName
    ToBlendOptions(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AssocBlendSurfaceActionBody: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocPathBasedSurfaceActionBody
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.BlendOptions BlendOption 'get set' : 
    Double EndEdgeBulge 'get set' : 
    Double StartEdgeBulge 'get set' : 
    Int16 EndEdgeContinuity 'get set' : 
    Int16 StartEdgeContinuity 'get set' : 
  Methods:
    get_StartEdgeContinuity(): PrivateScope, Public, HideBySig, SpecialName
    set_StartEdgeContinuity(Int16): PrivateScope, Public, HideBySig, SpecialName
    GetStartEdgeContinuity(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetStartEdgeContinuity(Int16, String, String): PrivateScope, Public, HideBySig
    get_EndEdgeContinuity(): PrivateScope, Public, HideBySig, SpecialName
    set_EndEdgeContinuity(Int16): PrivateScope, Public, HideBySig, SpecialName
    GetEndEdgeContinuity(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetEndEdgeContinuity(Int16, String, String): PrivateScope, Public, HideBySig
    get_StartEdgeBulge(): PrivateScope, Public, HideBySig, SpecialName
    set_StartEdgeBulge(Double): PrivateScope, Public, HideBySig, SpecialName
    GetStartEdgeBulge(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetStartEdgeBulge(Double, String, String): PrivateScope, Public, HideBySig
    get_EndEdgeBulge(): PrivateScope, Public, HideBySig, SpecialName
    set_EndEdgeBulge(Double): PrivateScope, Public, HideBySig, SpecialName
    GetEndEdgeBulge(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetEndEdgeBulge(Double, String, String): PrivateScope, Public, HideBySig
    GetContinuityGripPoints(Point3d&(Out), Point3d&(Out)): PrivateScope, Public, HideBySig
    GetProfiles(LoftProfile&(Out), LoftProfile&(Out)): PrivateScope, Public, HideBySig
    get_BlendOption(): PrivateScope, Public, HideBySig, SpecialName
    set_BlendOption(BlendOptions): PrivateScope, Public, HideBySig, SpecialName
    CreateInstance(ObjectId, LoftProfile, LoftProfile, BlendOptions, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AssocExtendSurfaceActionBody: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocPathBasedSurfaceActionBody
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Distance 'get set' : 
  Methods:
    get_Distance(): PrivateScope, Public, HideBySig, SpecialName
    set_Distance(Double): PrivateScope, Public, HideBySig, SpecialName
    GetDistance(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetDistance(Double, String, String): PrivateScope, Public, HideBySig
    CreateInstance(ObjectId, EdgeRef[], Double, EdgeExtensionType, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AssocExtrudedSurfaceActionBody: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocPathBasedSurfaceActionBody
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Height 'get set' : 
    Double TaperAngle 'get set' : 
  Methods:
    get_TaperAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_TaperAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    GetTaperAngle(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetTaperAngle(Double, String, String): PrivateScope, Public, HideBySig
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Double): PrivateScope, Public, HideBySig, SpecialName
    GetHeight(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetHeight(Double, String, String): PrivateScope, Public, HideBySig
    CreateInstance(ObjectId, PathRef, Vector3d, SweepOptions, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AssocLoftedSurfaceActionBody: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocPathBasedSurfaceActionBody
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetContinuity(ProfileType, String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    GetContinuity(ProfileType): PrivateScope, Public, HideBySig
    SetContinuity(ProfileType, Int32, String, String): PrivateScope, Public, HideBySig
    SetContinuity(ProfileType, Int32): PrivateScope, Public, HideBySig
    GetBulge(ProfileType, String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    GetBulge(ProfileType): PrivateScope, Public, HideBySig
    SetBulge(ProfileType, Double, String, String): PrivateScope, Public, HideBySig
    SetBulge(ProfileType, Double): PrivateScope, Public, HideBySig
    CreateInstance(ObjectId, SubentRef[], PathRef[], PathRef, LoftOptions, Int32[], Double[], Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.AssocLoftedSurfaceActionBody+ProfileType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ProfileType StartCrossSection = 1 : Public, Static, Literal, HasDefault
    ProfileType EndCrossSection = 2 : Public, Static, Literal, HasDefault
    ProfileType StartGuide = 4 : Public, Static, Literal, HasDefault
    ProfileType EndGuide = 8 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.AssocOffsetSurfaceActionBody: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocSurfaceActionBody
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Distance 'get set' : 
  Methods:
    get_Distance(): PrivateScope, Public, HideBySig, SpecialName
    set_Distance(Double): PrivateScope, Public, HideBySig, SpecialName
    GetDistance(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetDistance(Double, String, String): PrivateScope, Public, HideBySig
    CreateInstance(ObjectId, ObjectId, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AssocPatchSurfaceActionBody: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocPathBasedSurfaceActionBody
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d ContinuityGripPoint 'get ' : 
    Double Bulge 'get set' : 
    Int32 Continuity 'get set' : 
  Methods:
    get_Continuity(): PrivateScope, Public, HideBySig, SpecialName
    set_Continuity(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetContinuity(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetContinuity(Int32, String, String): PrivateScope, Public, HideBySig
    get_Bulge(): PrivateScope, Public, HideBySig, SpecialName
    set_Bulge(Double): PrivateScope, Public, HideBySig, SpecialName
    GetBulge(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetBulge(Double, String, String): PrivateScope, Public, HideBySig
    SetConstraintPoints(VertexRef[]): PrivateScope, Public, HideBySig
    SetConstraintCurves(EdgeRef[]): PrivateScope, Public, HideBySig
    get_ContinuityGripPoint(): PrivateScope, Public, HideBySig, SpecialName
    CreateInstance(ObjectId, EdgeRef[], EdgeRef[], VertexRef[], Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    CreateInstance(ObjectId, EdgeRef[], EdgeRef[], VertexRef[], Int32, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AssocPlaneSurfaceActionBody: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocPathBasedSurfaceActionBody
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CreateInstance(ObjectId, PathRef, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AssocRevolvedSurfaceActionBody: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocPathBasedSurfaceActionBody
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double RevolveAngle 'get set' : 
  Methods:
    get_RevolveAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_RevolveAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    GetRevolveAngle(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetRevolveAngle(Double, String, String): PrivateScope, Public, HideBySig
    CreateInstance(ObjectId, PathRef, PathRef, Double, Double, RevolveOptions, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AssocSweptSurfaceActionBody: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocPathBasedSurfaceActionBody
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double TwistAngle 'get set' : 
    Double AlignAngle 'get set' : 
    Double ScaleFactor 'get set' : 
  Methods:
    get_ScaleFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_ScaleFactor(Double): PrivateScope, Public, HideBySig, SpecialName
    GetScaleFactor(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetScaleFactor(Double, String, String): PrivateScope, Public, HideBySig
    get_AlignAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_AlignAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    GetAlignAngle(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetAlignAngle(Double, String, String): PrivateScope, Public, HideBySig
    get_TwistAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_TwistAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    GetTwistAngle(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetTwistAngle(Double, String, String): PrivateScope, Public, HideBySig
    CreateInstance(ObjectId, PathRef, PathRef, SweepOptions, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AssocTrimSurfaceActionBody: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocPathBasedSurfaceActionBody
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double TrimmedArea 'get ' : 
  Methods:
    SetTrimInfo(SurfaceTrimInfo[], Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    MakeTrimPermanent(): PrivateScope, Public, HideBySig
    Untrim(): PrivateScope, Public, HideBySig
    get_TrimmedArea(): PrivateScope, Public, HideBySig, SpecialName
    CreateInstance(ObjectId, SurfaceTrimInfo[], Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.SurfaceTrimInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Vector3d ProjVector 'get set' : 
    TrimRelation Relation 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.CompoundObjectId ToolBodyId 'get set' : 
    Boolean IsCurve 'get ' : 
  Methods:
    SetTrimInfo(CompoundObjectId, TrimRelation, SubentityId): PrivateScope, Public, HideBySig
    SetTrimInfo(CompoundObjectId, Vector3d, TrimRelation): PrivateScope, Public, HideBySig
    get_IsCurve(): PrivateScope, Public, HideBySig, SpecialName
    get_ToolBodyId(): PrivateScope, Public, HideBySig, SpecialName
    set_ToolBodyId(CompoundObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_Relation(): PrivateScope, Public, HideBySig, SpecialName
    set_Relation(TrimRelation): PrivateScope, Public, HideBySig, SpecialName
    get_ProjVector(): PrivateScope, Public, HideBySig, SpecialName
    set_ProjVector(Vector3d): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.AssocNetworkSurfaceActionBody: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocPathBasedSurfaceActionBody
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetContinuity(ProfileType, String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    GetContinuity(ProfileType): PrivateScope, Public, HideBySig
    SetContinuity(ProfileType, Int32, String, String): PrivateScope, Public, HideBySig
    SetContinuity(ProfileType, Int32): PrivateScope, Public, HideBySig
    GetBulge(ProfileType, String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    GetBulge(ProfileType): PrivateScope, Public, HideBySig
    SetBulge(ProfileType, Double, String, String): PrivateScope, Public, HideBySig
    SetBulge(ProfileType, Double): PrivateScope, Public, HideBySig
    CreateInstance(ObjectId, PathRef[], PathRef[], Int32[], Double[], Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AssocFilletSurfaceActionBody: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocSurfaceActionBody
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.FilletTrimMode TrimMode 'get set' : 
    Double Radius 'get set' : 
  Methods:
    GetHintPoints(): PrivateScope, Public, HideBySig
    SetHintPoints(Point3d[], Vector3d): PrivateScope, Public, HideBySig
    get_Radius(): PrivateScope, Public, HideBySig, SpecialName
    set_Radius(Double): PrivateScope, Public, HideBySig, SpecialName
    GetRadius(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetRadius(Double, String, String): PrivateScope, Public, HideBySig
    get_TrimMode(): PrivateScope, Public, HideBySig, SpecialName
    set_TrimMode(FilletTrimMode): PrivateScope, Public, HideBySig, SpecialName
    GetFilletHandleData(Point3d&(Out), Vector3d&(Out), Point3d&(Out), Vector3d&(Out)): PrivateScope, Public, HideBySig
    CreateInstance(ObjectId, ObjectId, Point3d, ObjectId, Point3d, Double, FilletTrimMode, Vector3d, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AssocEdgeFilletActionBody: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocSurfaceActionBody
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Radius 'get set' : 
  Methods:
    get_Radius(): PrivateScope, Public, HideBySig, SpecialName
    set_Radius(Double): PrivateScope, Public, HideBySig, SpecialName
    GetRadius(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetRadius(Double, String, String): PrivateScope, Public, HideBySig
    CreateInstance(FullSubentityPath[], Double, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AssocEdgeChamferActionBody: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocPathBasedSurfaceActionBody
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double OtherDistance 'get set' : 
    Double BaseDistance 'get set' : 
  Methods:
    get_BaseDistance(): PrivateScope, Public, HideBySig, SpecialName
    set_BaseDistance(Double): PrivateScope, Public, HideBySig, SpecialName
    GetBaseDistance(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetBaseDistance(Double, String, String): PrivateScope, Public, HideBySig
    get_OtherDistance(): PrivateScope, Public, HideBySig, SpecialName
    set_OtherDistance(Double): PrivateScope, Public, HideBySig, SpecialName
    GetOtherDistance(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetOtherDistance(Double, String, String): PrivateScope, Public, HideBySig
    CreateInstance(FullSubentityPath[], SubentityId IsConst, Double, Double, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.ItemLocator: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 LevelIndex 'get set' : 
    Int32 RowIndex 'get set' : 
    Int32 ItemIndex 'get set' : 
  Methods:
    get_ItemIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemIndex(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_RowIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_RowIndex(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_LevelIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_LevelIndex(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.AssocArray: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectIdCollection SourceEntities 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId EntityId 'get ' : 
  Methods:
    CreateArray(ObjectIdCollection, VertexRef, AssocArrayParameters): PrivateScope, Public, Static, HideBySig
    IsAssociativeArray(ObjectId): PrivateScope, Public, Static, HideBySig
    GetAssociativeArray(ObjectId): PrivateScope, Public, Static, HideBySig
    get_EntityId(): PrivateScope, Public, HideBySig, SpecialName
    get_SourceEntities(): PrivateScope, Public, HideBySig, SpecialName
    GetParameters(): PrivateScope, Public, HideBySig
    AddSourceEntity(ObjectId, Point3d): PrivateScope, Public, HideBySig
    RemoveSourceEntity(ObjectId): PrivateScope, Public, HideBySig
    TransformItemBy(ItemLocator, Matrix3d): PrivateScope, Public, HideBySig
    GetItemTransform(ItemLocator): PrivateScope, Public, HideBySig
    DeleteItem(ItemLocator, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ReplaceItems(ItemLocator[], ObjectIdCollection, VertexRef): PrivateScope, Public, HideBySig
    ResetItems(): PrivateScope, Public, HideBySig
    getItemLocators(FullSubentityPath[]): PrivateScope, Public, Static, HideBySig
    Explode(ObjectId): PrivateScope, Public, Static, HideBySig
    getItems(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    IsErased(ItemLocator): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.AssocArrayParameters: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.RXObject
  Properties:
    Autodesk.AutoCAD.DatabaseServices.AssocArray Owner 'get ' : 
  Methods:
    Commit(): PrivateScope, Public, HideBySig
    get_Owner(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.AssocArrayCommonParameters: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocArrayParameters
  Properties:
    Autodesk.AutoCAD.DatabaseServices.VertexRef BasePoint 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d BaseNormal 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.FaceRef BasePlane 'get set' : 
    Double LevelSpacing 'get set' : 
    Int32 LevelCount 'get set' : 
    Double RowElevation 'get set' : 
    Double RowSpacing 'get set' : 
    Int32 RowCount 'get set' : 
  Methods:
    get_RowCount(): PrivateScope, Public, HideBySig, SpecialName
    set_RowCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetRowCount(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetRowCount(Int32, String, String): PrivateScope, Public, HideBySig
    get_RowSpacing(): PrivateScope, Public, HideBySig, SpecialName
    set_RowSpacing(Double): PrivateScope, Public, HideBySig, SpecialName
    GetRowSpacing(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetRowSpacing(Double, String, String): PrivateScope, Public, HideBySig
    get_RowElevation(): PrivateScope, Public, HideBySig, SpecialName
    set_RowElevation(Double): PrivateScope, Public, HideBySig, SpecialName
    GetRowElevation(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetRowElevation(Double, String, String): PrivateScope, Public, HideBySig
    get_LevelCount(): PrivateScope, Public, HideBySig, SpecialName
    set_LevelCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetLevelCount(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetLevelCount(Int32, String, String): PrivateScope, Public, HideBySig
    get_LevelSpacing(): PrivateScope, Public, HideBySig, SpecialName
    set_LevelSpacing(Double): PrivateScope, Public, HideBySig, SpecialName
    GetLevelSpacing(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetLevelSpacing(Double, String, String): PrivateScope, Public, HideBySig
    get_BasePlane(): PrivateScope, Public, HideBySig, SpecialName
    set_BasePlane(FaceRef): PrivateScope, Public, HideBySig, SpecialName
    get_BaseNormal(): PrivateScope, Public, HideBySig, SpecialName
    set_BaseNormal(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_BasePoint(): PrivateScope, Public, HideBySig, SpecialName
    set_BasePoint(VertexRef): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.AssocArrayRectangularParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocArrayCommonParameters
    Void .ctor(Double, Double, Double, Int32, Int32, Int32, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Vector3d YAxisDirection 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d XAxisDirection 'get set' : 
    Double AxesAngle 'get set' : 
    Double ColumnSpacing 'get set' : 
    Int32 ColumnCount 'get set' : 
  Methods:
    get_ColumnCount(): PrivateScope, Public, HideBySig, SpecialName
    set_ColumnCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetColumnCount(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetColumnCount(Int32, String, String): PrivateScope, Public, HideBySig
    get_ColumnSpacing(): PrivateScope, Public, HideBySig, SpecialName
    set_ColumnSpacing(Double): PrivateScope, Public, HideBySig, SpecialName
    GetColumnSpacing(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetColumnSpacing(Double, String, String): PrivateScope, Public, HideBySig
    get_AxesAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_AxesAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    GetAxesAngle(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetAxesAngle(Double, String, String): PrivateScope, Public, HideBySig
    get_XAxisDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_XAxisDirection(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_YAxisDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_YAxisDirection(Vector3d): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.AssocArrayPolarParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocArrayCommonParameters
    Void .ctor(Double, Double, Double, Int32, Int32, Int32, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean RotateItems 'get set' : 
    Double Radius 'get set' : 
    ArcDirection Direction 'get set' : 
    Double StartAngle 'get set' : 
    Double FillAngle 'get set' : 
    Double AngleBetweenItems 'get set' : 
    Int32 ItemCount 'get set' : 
  Methods:
    get_ItemCount(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetItemCount(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetItemCount(Int32, String, String): PrivateScope, Public, HideBySig
    get_AngleBetweenItems(): PrivateScope, Public, HideBySig, SpecialName
    set_AngleBetweenItems(Double): PrivateScope, Public, HideBySig, SpecialName
    GetAngleBetweenItems(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetAngleBetweenItems(Double, String, String): PrivateScope, Public, HideBySig
    get_FillAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_FillAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    GetFillAngle(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetFillAngle(Double, String, String): PrivateScope, Public, HideBySig
    get_StartAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_StartAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    GetStartAngle(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetStartAngle(Double, String, String): PrivateScope, Public, HideBySig
    get_Direction(): PrivateScope, Public, HideBySig, SpecialName
    set_Direction(ArcDirection): PrivateScope, Public, HideBySig, SpecialName
    get_Radius(): PrivateScope, Public, HideBySig, SpecialName
    set_Radius(Double): PrivateScope, Public, HideBySig, SpecialName
    GetRadius(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetRadius(Double, String, String): PrivateScope, Public, HideBySig
    get_RotateItems(): PrivateScope, Public, HideBySig, SpecialName
    set_RotateItems(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.AssocArrayPolarParameters+ArcDirection: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ArcDirection Clockwise = 0 : Public, Static, Literal, HasDefault
    ArcDirection CounterClockwise = 1 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.AssocArrayPathParameters: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.AssocArrayCommonParameters
    Void .ctor(Double, Double, Double, Int32, Int32, Int32, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean PathDirection 'set' : 
    Double EndOffset 'get set' : 
    Double StartOffset 'get set' : 
    Boolean AlignItems 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.EdgeRef Path 'get set' : 
    Double ItemSpacing 'get set' : 
    Int32 ItemCount 'get set' : 
    MethodType Method 'get set' : 
  Methods:
    get_Method(): PrivateScope, Public, HideBySig, SpecialName
    set_Method(MethodType): PrivateScope, Public, HideBySig, SpecialName
    get_ItemCount(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemCount(Int32): PrivateScope, Public, HideBySig, SpecialName
    GetItemCount(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetItemCount(Int32, String, String): PrivateScope, Public, HideBySig
    get_ItemSpacing(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemSpacing(Double): PrivateScope, Public, HideBySig, SpecialName
    GetItemSpacing(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetItemSpacing(Double, String, String): PrivateScope, Public, HideBySig
    get_Path(): PrivateScope, Public, HideBySig, SpecialName
    set_Path(EdgeRef): PrivateScope, Public, HideBySig, SpecialName
    get_AlignItems(): PrivateScope, Public, HideBySig, SpecialName
    set_AlignItems(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_StartOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_StartOffset(Double): PrivateScope, Public, HideBySig, SpecialName
    GetStartOffset(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetStartOffset(Double, String, String): PrivateScope, Public, HideBySig
    get_EndOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_EndOffset(Double): PrivateScope, Public, HideBySig, SpecialName
    GetEndOffset(String&(Out), String&(Out)): PrivateScope, Public, HideBySig
    SetEndOffset(Double, String, String): PrivateScope, Public, HideBySig
    set_PathDirection(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.AssocArrayPathParameters+MethodType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MethodType Divide = 0 : Public, Static, Literal, HasDefault
    MethodType Measure = 1 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.GripMode: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String CommandString 'get set' : 
    ActionType Action 'get set' : 
    CursorType Cursor 'get set' : 
    System.String CLIKeywordList 'get set' : 
    System.String CLIPromptString 'get set' : 
    System.String CLIDisplayString 'get set' : 
    System.String ToolTip 'get set' : 
    System.String DisplayString 'get set' : 
    UInt32 ModeId 'get set' : 
  Methods:
    get_ModeId(): PrivateScope, Public, HideBySig, SpecialName
    set_ModeId(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayString(): PrivateScope, Public, HideBySig, SpecialName
    set_DisplayString(String): PrivateScope, Public, HideBySig, SpecialName
    get_ToolTip(): PrivateScope, Public, HideBySig, SpecialName
    set_ToolTip(String): PrivateScope, Public, HideBySig, SpecialName
    get_CLIDisplayString(): PrivateScope, Public, HideBySig, SpecialName
    set_CLIDisplayString(String): PrivateScope, Public, HideBySig, SpecialName
    get_CLIPromptString(): PrivateScope, Public, HideBySig, SpecialName
    set_CLIPromptString(String): PrivateScope, Public, HideBySig, SpecialName
    get_CLIKeywordList(): PrivateScope, Public, HideBySig, SpecialName
    set_CLIKeywordList(String): PrivateScope, Public, HideBySig, SpecialName
    get_Cursor(): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(CursorType): PrivateScope, Public, HideBySig, SpecialName
    get_Action(): PrivateScope, Public, HideBySig, SpecialName
    set_Action(ActionType): PrivateScope, Public, HideBySig, SpecialName
    get_CommandString(): PrivateScope, Public, HideBySig, SpecialName
    set_CommandString(String): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.GripMode+ModeIdentifier: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ModeIdentifier None = 0 : Public, Static, Literal, HasDefault
    ModeIdentifier Move = 1 : Public, Static, Literal, HasDefault
    ModeIdentifier CustomStart = 100 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.GripMode+ActionType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ActionType DragOn = 0 : Public, Static, Literal, HasDefault
    ActionType Immediate = 1 : Public, Static, Literal, HasDefault
    ActionType Command = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.GripMode+CursorType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CursorType CursorNone = 0 : Public, Static, Literal, HasDefault
    CursorType CursorCrosshairPlus = 1 : Public, Static, Literal, HasDefault
    CursorType CursorCrosshairMinus = 2 : Public, Static, Literal, HasDefault
    CursorType CursorCrosshairCurve = 3 : Public, Static, Literal, HasDefault
    CursorType CursorCrosshairLine = 4 : Public, Static, Literal, HasDefault
    CursorType CursorCrosshairAngle = 5 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.GripModeCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.ICollection`1[Autodesk.AutoCAD.DatabaseServices.GripMode]
    System.Collections.Generic.IEnumerable`1[Autodesk.AutoCAD.DatabaseServices.GripMode]
    System.Collections.IEnumerable
  Properties:
    Autodesk.AutoCAD.DatabaseServices.GripMode Item [Int32] 'get ' : 
    Boolean IsReadOnly 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Add(GripMode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(GripMode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(GripMode[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(GripMode): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.MultiModesGripPE+GripType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    GripType Primary = 0 : Public, Static, Literal, HasDefault
    GripType Secondary = 1 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.PointCloud: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    RegenPointClouds(): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.PointCloudEx: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.Extents3d NativeExtents 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Extents3d GeomExtents 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId PointCloudDefExId 'get set' : 
    Boolean ShowCropped 'get set' : 
    Boolean CroppingInverted 'get set' : 
    System.String ActiveFileName 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d Location 'get set' : 
    Double Rotation 'get set' : 
    Double Scale 'get set' : 
    System.Tuple`2[System.Double,System.Double] LimitBoxBound 'get ' : 
    Boolean ElevationGradient 'get set' : 
    Boolean IntensityGradient 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.PointCloudStylizationType Stylization 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.PointCloudDispOptionOutOfRange ElevationOutOfRangeBehavior 'get set' : 
    Boolean ElevationApplyToFixedRange 'get set' : 
    System.Tuple`2[System.Double,System.Double] MinMaxElevation 'get set' : 
    System.String CurrentColorScheme 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.PointCloudDispOptionOutOfRange IntensityOutOfRangeBehavior 'get set' : 
    System.Tuple`2[System.Int32,System.Int32] MinMaxIntensity 'get set' : 
  Methods:
    set_MinMaxIntensity(Tuple`2): PrivateScope, Public, HideBySig, SpecialName
    get_MinMaxIntensity(): PrivateScope, Public, HideBySig, SpecialName
    set_IntensityOutOfRangeBehavior(PointCloudDispOptionOutOfRange): PrivateScope, Public, HideBySig, SpecialName
    get_IntensityOutOfRangeBehavior(): PrivateScope, Public, HideBySig, SpecialName
    set_CurrentColorScheme(String): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentColorScheme(): PrivateScope, Public, HideBySig, SpecialName
    set_MinMaxElevation(Tuple`2): PrivateScope, Public, HideBySig, SpecialName
    get_MinMaxElevation(): PrivateScope, Public, HideBySig, SpecialName
    set_ElevationApplyToFixedRange(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ElevationApplyToFixedRange(): PrivateScope, Public, HideBySig, SpecialName
    set_ElevationOutOfRangeBehavior(PointCloudDispOptionOutOfRange): PrivateScope, Public, HideBySig, SpecialName
    get_ElevationOutOfRangeBehavior(): PrivateScope, Public, HideBySig, SpecialName
    set_Stylization(PointCloudStylizationType): PrivateScope, Public, HideBySig, SpecialName
    get_Stylization(): PrivateScope, Public, HideBySig, SpecialName
    set_IntensityGradient(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IntensityGradient(): PrivateScope, Public, HideBySig, SpecialName
    set_ElevationGradient(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ElevationGradient(): PrivateScope, Public, HideBySig, SpecialName
    get_LimitBoxBound(): PrivateScope, Public, HideBySig, SpecialName
    set_Scale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Scale(): PrivateScope, Public, HideBySig, SpecialName
    set_Rotation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Rotation(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    get_ActiveFileName(): PrivateScope, Public, HideBySig, SpecialName
    set_CroppingInverted(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_CroppingInverted(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowCropped(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ShowCropped(): PrivateScope, Public, HideBySig, SpecialName
    set_PointCloudDefExId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_PointCloudDefExId(): PrivateScope, Public, HideBySig, SpecialName
    get_GeomExtents(): PrivateScope, Public, HideBySig, SpecialName
    get_NativeExtents(): PrivateScope, Public, HideBySig, SpecialName
    GetColorSchemeForStylization(PointCloudStylizationType): PrivateScope, Public, HideBySig
    SetColorSchemeForStylization(String, PointCloudStylizationType): PrivateScope, Public, HideBySig
    HasProperty(PointCloudProperty): PrivateScope, Public, HideBySig
    findScanItem(String): PrivateScope, Public, HideBySig
    findRegionItem(Int32): PrivateScope, Public, HideBySig
    setScanVisibility(String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    setRegionVisibility(Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    setAllScansVisibility(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    setAllRegionsVisibility(Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    getPointCloudDataList(): PrivateScope, Public, HideBySig
    getCroppingCount(): PrivateScope, Public, HideBySig
    getPointCloudCropping(Int32): PrivateScope, Public, HideBySig
    addCroppingBoundary(PointCloudCrop): PrivateScope, Public, HideBySig
    clearCropping(): PrivateScope, Public, HideBySig
    removeLastCropping(): PrivateScope, Public, HideBySig
    TransformBy(Matrix3d): PrivateScope, Public, HideBySig
    GetScanViewInfo(String, ValueType&(Out), ValueType&(Out)): PrivateScope, Public, HideBySig
    AttachPointCloud(String, Point3d, Double, Double, Database): PrivateScope, Public, Static, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.PointCloudDispOptionOutOfRange: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.PointCloudDispOptionOutOfRange UseMinMaxColors = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PointCloudDispOptionOutOfRange UseRGBScanColors = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PointCloudDispOptionOutOfRange HidePoints = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.PointCloudStylizationType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.PointCloudStylizationType TrueColor = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PointCloudStylizationType SingleColor = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PointCloudStylizationType NormalRamp = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PointCloudStylizationType HeightRamp = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PointCloudStylizationType IntensityRamp = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PointCloudStylizationType ClassificationRamp = 6 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.PointCloudPropertyState: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.PointCloudPropertyState None = -1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PointCloudPropertyState Some = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PointCloudPropertyState All = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.PointCloudProperty: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.PointCloudProperty Color = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PointCloudProperty Intensity = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PointCloudProperty Classification = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PointCloudProperty Normal = 4 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.PointCloudItem: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Notifier
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.ValueType CurrentAdsName 'get set' PCAdsName IsBoxed : 
    Autodesk.AutoCAD.DatabaseServices.PointCloudItemType CategoryId 'get set' : 
    Boolean Visibility 'get set' : 
    System.String Guid 'get set' : 
    System.String ProjectName 'get set' : 
    System.String Name 'get set' : 
    Int32 ItemId 'get set' : 
  Methods:
    Clone(): PrivateScope, Public, HideBySig
    CompareTo(PointCloudItem): PrivateScope, Public, HideBySig
    ToCmdString(): PrivateScope, Public, HideBySig
    CreatePointCloudDataItemCollection(IntPtr): PrivateScope, Public, Static, HideBySig
    get_ItemId(): PrivateScope, Public, HideBySig, SpecialName
    set_ItemId(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_ProjectName(): PrivateScope, Public, HideBySig, SpecialName
    set_ProjectName(String): PrivateScope, Public, HideBySig, SpecialName
    get_Guid(): PrivateScope, Public, HideBySig, SpecialName
    set_Guid(String): PrivateScope, Public, HideBySig, SpecialName
    get_Visibility(): PrivateScope, Public, HideBySig, SpecialName
    set_Visibility(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_CategoryId(): PrivateScope, Public, HideBySig, SpecialName
    set_CategoryId(PointCloudItemType): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentAdsName(): PrivateScope, Public, HideBySig, SpecialName
    set_CurrentAdsName(ValueType PCAdsName IsBoxed): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.PointCloudCrop: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    Boolean Inverted 'get set' : 
    Boolean Inside 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.PointCloudCropType CropType 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3dCollection Vertices 'get set' : 
    Autodesk.AutoCAD.Geometry.Plane CropPlane 'get set' : 
  Methods:
    Create(IntPtr): PrivateScope, Public, Static, HideBySig
    set_CropPlane(Plane): PrivateScope, Public, HideBySig, SpecialName
    get_CropPlane(): PrivateScope, Public, HideBySig, SpecialName
    set_Vertices(Point3dCollection): PrivateScope, Public, HideBySig, SpecialName
    get_Vertices(): PrivateScope, Public, HideBySig, SpecialName
    set_CropType(PointCloudCropType): PrivateScope, Public, HideBySig, SpecialName
    get_CropType(): PrivateScope, Public, HideBySig, SpecialName
    set_Inside(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Inside(): PrivateScope, Public, HideBySig, SpecialName
    set_Inverted(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Inverted(): PrivateScope, Public, HideBySig, SpecialName
    IsValid(): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.PCAdsName: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int64 name1 : Public
    Int64 name2 : Public
Class Autodesk.AutoCAD.DatabaseServices.Notifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ComponentModel.INotifyPropertyChanged
  Events:
    System.ComponentModel.PropertyChangedEventHandler PropertyChanged: SpecialName
  Methods:
    add_PropertyChanged(PropertyChangedEventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_PropertyChanged(PropertyChangedEventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    OnPropertyChanged(String): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.PointCloudItemType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.PointCloudItemType LegacyPointCloud = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PointCloudItemType PointCloudProject = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PointCloudItemType IndividualScan = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PointCloudItemType Scan = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PointCloudItemType Region = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PointCloudItemType ScanRootGroup = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PointCloudItemType RegionRootGroup = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PointCloudItemType UnassignedPoint = 7 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.PointCloudDefEx: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.Extents3d extents 'get ' : 
    Double defaultHeight 'get ' : 
    Double defaultLength 'get ' : 
    Double defaultWidth 'get ' : 
    Int32 totalScansCount 'get ' : 
    Int32 totalRegionsCount 'get ' : 
    Int64 totalPointsCount 'get ' : 
    System.String FileType 'get ' : 
    System.String ActiveFileName 'get set' : 
    System.String SourceFileName 'get set' : 
    Int32 EntityCount 'get ' : 
  Methods:
    get_EntityCount(): PrivateScope, Public, HideBySig, SpecialName
    get_SourceFileName(): PrivateScope, Public, HideBySig, SpecialName
    set_SourceFileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_ActiveFileName(): PrivateScope, Public, HideBySig, SpecialName
    set_ActiveFileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_FileType(): PrivateScope, Public, HideBySig, SpecialName
    get_totalPointsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_totalRegionsCount(): PrivateScope, Public, HideBySig, SpecialName
    get_totalScansCount(): PrivateScope, Public, HideBySig, SpecialName
    get_defaultWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_defaultLength(): PrivateScope, Public, HideBySig, SpecialName
    get_defaultHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_extents(): PrivateScope, Public, HideBySig, SpecialName
    classVersion(): PrivateScope, Public, Static, HideBySig
    load(): PrivateScope, Public, HideBySig
    unload(): PrivateScope, Public, HideBySig
    getRcsFilePath(String): PrivateScope, Public, HideBySig
    getAllRcsFilePaths(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.PointCloudColorRamp: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    Int32 NumColors 'get set' : 
  Methods:
    set_NumColors(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_NumColors(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Color(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetColor(Int32, EntityColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visibility(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetVisibility(Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetFrom(PointCloudColorRamp): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.PointCloudClassificationColorRamp: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    Int32 NumColors 'get ' : 
  Methods:
    get_NumColors(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Color(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetColor(Int32, EntityColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Visibility(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetVisibility(Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetFrom(PointCloudClassificationColorRamp): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    set_Name(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Name(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.PointCloudColorMap: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
  Properties:
    System.String[] ClassificationSchemeGUIDs 'get ' : 
    System.String[] ColorSchemeGUIDs 'get ' : 
    System.String DefaultClassificationColorScheme 'get set' : 
    System.String DefaultElevationColorScheme 'get set' : 
    System.String DefaultIntensityColorScheme 'get set' : 
  Events:
    Autodesk.AutoCAD.DatabaseServices.PointCloudColorSchemeChangedEventHandler PointCloudColorSchemeChanged: SpecialName
  Methods:
    GetColorMapId(Database): PrivateScope, Public, Static, HideBySig
    add_PointCloudColorSchemeChanged(PointCloudColorSchemeChangedEventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    remove_PointCloudColorSchemeChanged(PointCloudColorSchemeChangedEventHandler): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DefaultIntensityColorScheme(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DefaultIntensityColorScheme(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DefaultElevationColorScheme(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DefaultElevationColorScheme(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_DefaultClassificationColorScheme(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_DefaultClassificationColorScheme(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ColorSchemeGUIDs(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ColorScheme(String, PointCloudColorRamp&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasColorScheme(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetColorScheme(String, PointCloudColorRamp): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeleteColorScheme(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_ClassificationSchemeGUIDs(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ClassificationScheme(String, PointCloudClassificationColorRamp&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    HasClassificationScheme(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetClassificationScheme(String, PointCloudClassificationColorRamp): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DeleteClassificationScheme(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ColorSchemeInUse(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ClassificationColorSchemeInUse(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.ViewBorder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 ShadedDPI 'get ' : 
    Double Scale 'get ' : 
    Double RotationAngle 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ViewportId 'get ' : 
    Boolean IsFirstAngleProjection 'get ' : 
    System.String InventorFileReference 'get ' : 
    Double Width 'get ' : 
    Double Height 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d InsertionPoint 'get ' : 
  Methods:
    get_InsertionPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    GetSourceType(): PrivateScope, Public, HideBySig
    get_InventorFileReference(): PrivateScope, Public, HideBySig, SpecialName
    get_IsFirstAngleProjection(): PrivateScope, Public, HideBySig, SpecialName
    get_ViewportId(): PrivateScope, Public, HideBySig, SpecialName
    get_RotationAngle(): PrivateScope, Public, HideBySig, SpecialName
    GetViewStyleType(): PrivateScope, Public, HideBySig
    get_Scale(): PrivateScope, Public, HideBySig, SpecialName
    get_ShadedDPI(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.SourceType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.SourceType SourceNotDefined = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SourceType InventorSource = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SourceType FusionSource = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SourceType ModelSpaceSource = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.ViewStyleType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.ViewStyleType FromBase = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ViewStyleType WireframeVisibleEdges = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ViewStyleType WireframeHiddenEdges = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ViewStyleType ShadedVisibleEdges = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ViewStyleType ShadedHiddenEdges = 4 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.ViewRepBlockReference: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.BlockReference
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId OwnerViewportId 'get ' : 
  Methods:
    get_OwnerViewportId(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.SectionViewStyle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean ShowHatching 'get set' : 
    Boolean ShowEndAndBendLines 'get set' : 
    Boolean ShowAllBendIndentifiers 'get set' : 
    Boolean ShowAllPlaneLines 'get set' : 
    Boolean ShowViewLabel 'get set' : 
    Boolean ShowArrowheads 'get set' : 
    Boolean IsContinuousLabeling 'get set' : 
    Autodesk.AutoCAD.Colors.Transparency HatchTransparency 'get set' : 
    Autodesk.AutoCAD.Geometry.DoubleCollection HatchAngles 'get set' : 
    Double HatchScale 'get set' : 
    Autodesk.AutoCAD.Colors.Color HatchBackgroundColor 'get set' : 
    Autodesk.AutoCAD.Colors.Color HatchColor 'get set' : 
    System.String HatchPattern 'get set' : 
    System.String ViewLabelPattern 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ModelDocViewLabelAlignmentType ViewLabelAlignment 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ModelDocViewLabelAttachmentPoint ViewLabelAttachment 'get set' : 
    Double ViewLabelOffset 'get set' : 
    Double ViewLabelTextHeight 'get set' : 
    Autodesk.AutoCAD.Colors.Color ViewLabelTextColor 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ViewLabelTextStyleId 'get set' : 
    Double EndLineLength 'get set' : 
    Double BendLineLength 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId BendLineTypeId 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LineWeight BendLineWeight 'get set' : 
    Autodesk.AutoCAD.Colors.Color BendLineColor 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId PlaneLineTypeId 'get set' : 
    Autodesk.AutoCAD.Colors.Color PlaneLineColor 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LineWeight PlaneLineWeight 'get set' : 
    Double ArrowSymbolExtensionLength 'get set' : 
    Double ArrowSymbolSize 'get set' : 
    Autodesk.AutoCAD.Colors.Color ArrowSymbolColor 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ArrowEndSymbolId 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ArrowStartSymbolId 'get set' : 
    Double EndLineOvershoot 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.SectionViewArrowDirection ArrowPosition 'get set' : 
    Double IdentifierOffset 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.SectionViewIdentifierPosition IdentifierPosition 'get set' : 
    System.String IdentifierExcludeCharacters 'get set' : 
    Double IdentifierHeight 'get set' : 
    Autodesk.AutoCAD.Colors.Color IdentifierColor 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId IdentifierStyleId 'get set' : 
    Boolean IsModifiedForRecompute 'get ' : 
    System.String Description 'get set' : 
    System.String Name 'get set' : 
  Methods:
    get_ShowEndAndBendLines(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowEndAndBendLines(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ShowHatching(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowHatching(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    GetViewLabelPattern(Field): PrivateScope, Public, HideBySig
    SetViewLabelPattern(String, Field): PrivateScope, Public, HideBySig
    SetDatabaseDefaults(Database): PrivateScope, Public, HideBySig
    PostViewStyleToDb(Database, String): PrivateScope, Public, HideBySig
    DefaultViewName(Int32): PrivateScope, Public, HideBySig
    ValidateViewName(String): PrivateScope, Public, HideBySig
    ValidateIdentifierExcludeCharacters(String): PrivateScope, Public, HideBySig
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    set_Description(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsModifiedForRecompute(): PrivateScope, Public, HideBySig, SpecialName
    get_IdentifierStyleId(): PrivateScope, Public, HideBySig, SpecialName
    set_IdentifierStyleId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_IdentifierColor(): PrivateScope, Public, HideBySig, SpecialName
    set_IdentifierColor(Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IdentifierHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_IdentifierHeight(Double): PrivateScope, Public, HideBySig, SpecialName
    get_IdentifierExcludeCharacters(): PrivateScope, Public, HideBySig, SpecialName
    set_IdentifierExcludeCharacters(String): PrivateScope, Public, HideBySig, SpecialName
    get_IdentifierPosition(): PrivateScope, Public, HideBySig, SpecialName
    set_IdentifierPosition(SectionViewIdentifierPosition): PrivateScope, Public, HideBySig, SpecialName
    get_IdentifierOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_IdentifierOffset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ArrowPosition(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrowPosition(SectionViewArrowDirection): PrivateScope, Public, HideBySig, SpecialName
    get_EndLineOvershoot(): PrivateScope, Public, HideBySig, SpecialName
    set_EndLineOvershoot(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ArrowStartSymbolId(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrowStartSymbolId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_ArrowEndSymbolId(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrowEndSymbolId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_ArrowSymbolColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrowSymbolColor(Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ArrowSymbolSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrowSymbolSize(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ArrowSymbolExtensionLength(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrowSymbolExtensionLength(Double): PrivateScope, Public, HideBySig, SpecialName
    get_PlaneLineWeight(): PrivateScope, Public, HideBySig, SpecialName
    set_PlaneLineWeight(LineWeight): PrivateScope, Public, HideBySig, SpecialName
    get_PlaneLineColor(): PrivateScope, Public, HideBySig, SpecialName
    set_PlaneLineColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_PlaneLineTypeId(): PrivateScope, Public, HideBySig, SpecialName
    set_PlaneLineTypeId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_BendLineColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BendLineColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BendLineWeight(): PrivateScope, Public, HideBySig, SpecialName
    set_BendLineWeight(LineWeight): PrivateScope, Public, HideBySig, SpecialName
    get_BendLineTypeId(): PrivateScope, Public, HideBySig, SpecialName
    set_BendLineTypeId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_BendLineLength(): PrivateScope, Public, HideBySig, SpecialName
    set_BendLineLength(Double): PrivateScope, Public, HideBySig, SpecialName
    get_EndLineLength(): PrivateScope, Public, HideBySig, SpecialName
    set_EndLineLength(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ViewLabelTextStyleId(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewLabelTextStyleId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_ViewLabelTextColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewLabelTextColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ViewLabelTextHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewLabelTextHeight(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ViewLabelOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewLabelOffset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ViewLabelAttachment(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewLabelAttachment(ModelDocViewLabelAttachmentPoint): PrivateScope, Public, HideBySig, SpecialName
    get_ViewLabelAlignment(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewLabelAlignment(ModelDocViewLabelAlignmentType): PrivateScope, Public, HideBySig, SpecialName
    get_ViewLabelPattern(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewLabelPattern(String): PrivateScope, Public, HideBySig, SpecialName
    get_HatchPattern(): PrivateScope, Public, HideBySig, SpecialName
    set_HatchPattern(String): PrivateScope, Public, HideBySig, SpecialName
    get_HatchColor(): PrivateScope, Public, HideBySig, SpecialName
    set_HatchColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_HatchBackgroundColor(): PrivateScope, Public, HideBySig, SpecialName
    set_HatchBackgroundColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_HatchScale(): PrivateScope, Public, HideBySig, SpecialName
    set_HatchScale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_HatchAngles(): PrivateScope, Public, HideBySig, SpecialName
    set_HatchAngles(DoubleCollection): PrivateScope, Public, HideBySig, SpecialName
    get_HatchTransparency(): PrivateScope, Public, HideBySig, SpecialName
    set_HatchTransparency(Transparency): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsContinuousLabeling(): PrivateScope, Public, HideBySig, SpecialName
    set_IsContinuousLabeling(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ShowArrowheads(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowArrowheads(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ShowViewLabel(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowViewLabel(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ShowAllPlaneLines(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowAllPlaneLines(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ShowAllBendIndentifiers(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowAllBendIndentifiers(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.SectionViewIdentifierPosition: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.SectionViewIdentifierPosition EndCuttingPlane = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SectionViewIdentifierPosition AboveDirectionArrowLine = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SectionViewIdentifierPosition AboveDirectionArrowSymbol = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SectionViewIdentifierPosition StartDirectionArrow = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SectionViewIdentifierPosition EndDirectionArrow = 4 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.SectionViewArrowDirection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.SectionViewArrowDirection TowardsCuttingPlane = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SectionViewArrowDirection AwayFromCuttingPlane = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.ModelDocViewLabelAttachmentPoint: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.ModelDocViewLabelAttachmentPoint AboveView = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ModelDocViewLabelAttachmentPoint BelowView = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.ModelDocViewLabelAlignmentType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.ModelDocViewLabelAlignmentType AlignmentLeft = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ModelDocViewLabelAlignmentType AlignmentCenter = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ModelDocViewLabelAlignmentType AlignmentRight = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.DetailViewStyle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.DBObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId BorderLineTypeId 'get set' : 
    Autodesk.AutoCAD.Colors.Color BorderLineColor 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LineWeight BorderLineWeight 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.DetailViewModelEdge ModelEdge 'get set' : 
    Boolean ShowViewLabel 'get set' : 
    System.String ViewLabelPattern 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ModelDocViewLabelAlignmentType ViewLabelAlignment 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ModelDocViewLabelAttachmentPoint ViewLabelAttachment 'get set' : 
    Double ViewLabelOffset 'get set' : 
    Double ViewLabelTextHeight 'get set' : 
    Autodesk.AutoCAD.Colors.Color ViewLabelTextColor 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ViewLabelTextStyleId 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ConnectionLineTypeId 'get set' : 
    Autodesk.AutoCAD.Colors.Color ConnectionLineColor 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LineWeight ConnectionLineWeight 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId BoundaryLineTypeId 'get set' : 
    Autodesk.AutoCAD.Colors.Color BoundaryLineColor 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LineWeight BoundaryLineWeight 'get set' : 
    Boolean ShowArrowheads 'get set' : 
    Double ArrowSymbolSize 'get set' : 
    Autodesk.AutoCAD.Colors.Color ArrowSymbolColor 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ArrowSymbolId 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.DetailViewIdentifierPlacement IdentifierPlacement 'get set' : 
    Double IdentifierOffset 'get set' : 
    Double IdentifierHeight 'get set' : 
    Autodesk.AutoCAD.Colors.Color IdentifierColor 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId IdentifierStyleId 'get set' : 
    Boolean IsModifiedForRecompute 'get ' : 
    System.String Description 'get set' : 
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    set_Description(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsModifiedForRecompute(): PrivateScope, Public, HideBySig, SpecialName
    get_IdentifierStyleId(): PrivateScope, Public, HideBySig, SpecialName
    set_IdentifierStyleId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_IdentifierColor(): PrivateScope, Public, HideBySig, SpecialName
    set_IdentifierColor(Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IdentifierHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_IdentifierHeight(Double): PrivateScope, Public, HideBySig, SpecialName
    get_IdentifierOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_IdentifierOffset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_IdentifierPlacement(): PrivateScope, Public, HideBySig, SpecialName
    set_IdentifierPlacement(DetailViewIdentifierPlacement): PrivateScope, Public, HideBySig, SpecialName
    get_ArrowSymbolId(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrowSymbolId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_ArrowSymbolColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrowSymbolColor(Color): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ArrowSymbolSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ArrowSymbolSize(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ShowArrowheads(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowArrowheads(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_BoundaryLineWeight(): PrivateScope, Public, HideBySig, SpecialName
    set_BoundaryLineWeight(LineWeight): PrivateScope, Public, HideBySig, SpecialName
    get_BoundaryLineColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BoundaryLineColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BoundaryLineTypeId(): PrivateScope, Public, HideBySig, SpecialName
    set_BoundaryLineTypeId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_ConnectionLineWeight(): PrivateScope, Public, HideBySig, SpecialName
    set_ConnectionLineWeight(LineWeight): PrivateScope, Public, HideBySig, SpecialName
    get_ConnectionLineColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ConnectionLineColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ConnectionLineTypeId(): PrivateScope, Public, HideBySig, SpecialName
    set_ConnectionLineTypeId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_ViewLabelTextStyleId(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewLabelTextStyleId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_ViewLabelTextColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewLabelTextColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ViewLabelTextHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewLabelTextHeight(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ViewLabelOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewLabelOffset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ViewLabelAttachment(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewLabelAttachment(ModelDocViewLabelAttachmentPoint): PrivateScope, Public, HideBySig, SpecialName
    get_ViewLabelAlignment(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewLabelAlignment(ModelDocViewLabelAlignmentType): PrivateScope, Public, HideBySig, SpecialName
    get_ViewLabelPattern(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewLabelPattern(String): PrivateScope, Public, HideBySig, SpecialName
    get_ShowViewLabel(): PrivateScope, Public, HideBySig, SpecialName
    set_ShowViewLabel(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ModelEdge(): PrivateScope, Public, HideBySig, SpecialName
    set_ModelEdge(DetailViewModelEdge): PrivateScope, Public, HideBySig, SpecialName
    get_BorderLineWeight(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderLineWeight(LineWeight): PrivateScope, Public, HideBySig, SpecialName
    get_BorderLineColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderLineColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BorderLineTypeId(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderLineTypeId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    GetViewLabelPattern(Field): PrivateScope, Public, HideBySig
    SetViewLabelPattern(String, Field): PrivateScope, Public, HideBySig
    DefaultViewName(Int32): PrivateScope, Public, HideBySig
    ValidateViewName(String): PrivateScope, Public, HideBySig
    SetDatabaseDefaults(Database): PrivateScope, Public, HideBySig
    PostViewStyleToDb(Database, String): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.DetailViewIdentifierPlacement: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.DetailViewIdentifierPlacement OutsideBoundary = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DetailViewIdentifierPlacement OutsideBoundaryWithLeader = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DetailViewIdentifierPlacement OnBoundary = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DetailViewIdentifierPlacement OnBoundaryWithLeader = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.DetailViewModelEdge: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.DetailViewModelEdge Smooth = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DetailViewModelEdge SmoothWithBorder = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DetailViewModelEdge SmoothWithConnectionLine = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DetailViewModelEdge Jagged = 3 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.DetailSymbol: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d IdentifierPosition 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d ModelEdgeDirection 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d ModelEdgeOrigin 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector2d BoundarySize 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Direction 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d Origin 'get ' : 
    Double DetailViewScale 'get ' : 
    Double OwningViewScale 'get ' : 
    Boolean DisplayIdentifier 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.DetailViewModelEdge ModelEdgeType 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.DetailSymbolBoundaryType BoundaryType 'get ' : 
    System.String Identifier 'get set' : 
    Double Scale 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId SymbolStyleId 'get set' : 
  Methods:
    get_SymbolStyleId(): PrivateScope, Public, HideBySig, SpecialName
    set_SymbolStyleId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_Scale(): PrivateScope, Public, HideBySig, SpecialName
    set_Scale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Identifier(): PrivateScope, Public, HideBySig, SpecialName
    set_Identifier(String): PrivateScope, Public, HideBySig, SpecialName
    get_BoundaryType(): PrivateScope, Public, HideBySig, SpecialName
    get_ModelEdgeType(): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayIdentifier(): PrivateScope, Public, HideBySig, SpecialName
    get_OwningViewScale(): PrivateScope, Public, HideBySig, SpecialName
    get_DetailViewScale(): PrivateScope, Public, HideBySig, SpecialName
    get_Origin(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Direction(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BoundarySize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ModelEdgeOrigin(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ModelEdgeDirection(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IdentifierPosition(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    IsOverriddenProperty(DetailSymbolOverriddenProperty): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.DetailSymbolBoundaryType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.DetailSymbolBoundaryType CircularBoundary = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DetailSymbolBoundaryType RectangularBoundary = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DetailSymbolBoundaryType CustomBoundary = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.DetailSymbolOverriddenProperty: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.DetailSymbolOverriddenProperty ModelEdge = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.DetailSymbolOverriddenProperty IdentifierPosition = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.SectionSymbol: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 SectionPointsCount 'get ' : 
    Boolean IsHalfSection 'get set' : 
    Boolean IsViewDirectionLeft 'get set' : 
    System.String Identifier 'get set' : 
    Double Scale 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId SymbolStyleId 'get set' : 
  Methods:
    get_SymbolStyleId(): PrivateScope, Public, HideBySig, SpecialName
    set_SymbolStyleId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_Scale(): PrivateScope, Public, HideBySig, SpecialName
    set_Scale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Identifier(): PrivateScope, Public, HideBySig, SpecialName
    set_Identifier(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsViewDirectionLeft(): PrivateScope, Public, HideBySig, SpecialName
    set_IsViewDirectionLeft(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsHalfSection(): PrivateScope, Public, HideBySig, SpecialName
    set_IsHalfSection(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SectionPointsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetSectionPointAt(Int32): PrivateScope, Public, HideBySig
    GetBulgeAt(Int32): PrivateScope, Public, HideBySig
    GetSectionPoints(): PrivateScope, Public, HideBySig
    SetSectionPoints(Point3dCollection, DoubleCollection): PrivateScope, Public, HideBySig
    SetSectionPoints(Point3dCollection): PrivateScope, Public, HideBySig
    AddSectionPoint(Point3d, Double): PrivateScope, Public, HideBySig
    RemoveSectionPointAt(Int32): PrivateScope, Public, HideBySig
    SetSectionPointAt(Int32, Point3d, Double): PrivateScope, Public, HideBySig
    GetLabelNameAt(Int32): PrivateScope, Public, HideBySig
    SetLabelNameAt(Int32, String): PrivateScope, Public, HideBySig
    GetLabelOffsetAt(Int32): PrivateScope, Public, HideBySig
    SetLabelOffsetAt(Int32, Vector3d): PrivateScope, Public, HideBySig
    GetLabelOffsets(): PrivateScope, Public, HideBySig
    SetLabelOffsets(Vector3dCollection): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.GeomapImage: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.RasterImage
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Byte Fade  'get set' : 
    Byte Contrast 'get set' : 
    Byte Brightness 'get set' : 
    Boolean IsOutOfDate 'get ' : 
    GeomapType MapType 'get set' : 
    UInt32 LOD 'get ' : 
    GeomapResolution Resolution 'get set' : 
    Double ImageWidth 'get ' : 
    Double ImageHeight 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d ImageBottomLeftPoint 'get ' : 
    Double Width 'get ' : 
    Double Height 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d BottomLeftPoint 'get ' : 
  Methods:
    get_BottomLeftPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_ImageBottomLeftPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_ImageHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_ImageWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_Resolution(): PrivateScope, Public, HideBySig, SpecialName
    set_Resolution(GeomapResolution): PrivateScope, Public, HideBySig, SpecialName
    get_LOD(): PrivateScope, Public, HideBySig, SpecialName
    get_MapType(): PrivateScope, Public, HideBySig, SpecialName
    set_MapType(GeomapType): PrivateScope, Public, HideBySig, SpecialName
    get_IsOutOfDate(): PrivateScope, Public, HideBySig, SpecialName
    GetVertices(): PrivateScope, Public, Virtual, HideBySig
    GetImageVertices(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ImageSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    UpdateMapImage(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    set_Brightness(Byte): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Brightness(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Contrast(Byte): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Contrast(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Fade(Byte): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Fade(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct GeomapResolution: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    GeomapResolution Coarse = -1 : Public, Static, Literal, HasDefault
    GeomapResolution Optimal = 0 : Public, Static, Literal, HasDefault
    GeomapResolution Fine = 1 : Public, Static, Literal, HasDefault
    GeomapResolution Finer = 2 : Public, Static, Literal, HasDefault
Struct GeomapType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    GeomapType NoMap = 0 : Public, Static, Literal, HasDefault
    GeomapType Aerial = 1 : Public, Static, Literal, HasDefault
    GeomapType Road = 2 : Public, Static, Literal, HasDefault
    GeomapType Hybrid = 3 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.GeoPositionMarker: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.Entity
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId TextStyle 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d GeoPosition 'get set' : 
    System.String Notes 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.TextAlignment TextAlignmentType 'get set' : 
    Boolean EnableFrameText 'get set' : 
    Boolean MTextVisible 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.MText MText 'get set' : 
    System.String Text 'get set' : 
    Double LandingGap 'get set' : 
    Double Radius 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d Position 'get set' : 
  Methods:
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    set_Position(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_Radius(): PrivateScope, Public, HideBySig, SpecialName
    set_Radius(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LandingGap(): PrivateScope, Public, HideBySig, SpecialName
    set_LandingGap(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_MText(): PrivateScope, Public, HideBySig, SpecialName
    set_MText(MText): PrivateScope, Public, HideBySig, SpecialName
    get_MTextVisible(): PrivateScope, Public, HideBySig, SpecialName
    set_MTextVisible(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_EnableFrameText(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableFrameText(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_TextAlignmentType(): PrivateScope, Public, HideBySig, SpecialName
    set_TextAlignmentType(TextAlignment): PrivateScope, Public, HideBySig, SpecialName
    get_Notes(): PrivateScope, Public, HideBySig, SpecialName
    set_Notes(String): PrivateScope, Public, HideBySig, SpecialName
    get_GeoPosition(): PrivateScope, Public, HideBySig, SpecialName
    set_GeoPosition(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TextStyle(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.TextAlignment: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.TextAlignment LeftAlignment = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TextAlignment CenterAlignment = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TextAlignment RightAlignment = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.Runtime.RuntimeSystem: AutoLayout, AnsiClass, Class, Public, Sealed
  Methods:
    Initialize(HostApplicationServices, Int32): PrivateScope, Public, Static, HideBySig
    Terminate(): PrivateScope, Public, Static, HideBySig
    Main(String): PrivateScope, Public, Static, HideBySig
Struct Autodesk.AutoCAD.Geometry.ExternalEntityKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.Geometry.ExternalEntityKind AcisEntity = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.ExternalEntityKind ExternalEntityUndefined = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.Geometry.ClipError: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.Geometry.ClipError OK = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.ClipError InvalidClipBoundary = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.ClipError NotInitialized = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.Geometry.ClipCondition: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.Geometry.ClipCondition Invalid = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.ClipCondition AllSegmentsInside = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.ClipCondition SegmentsIntersect = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.ClipCondition AllSegmentsOutsideZeroWinds = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.ClipCondition AllSegmentsOutsideOddWinds = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.ClipCondition AllSegmentsOutsideEvenWinds = 5 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.XrefNotificationStatus: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.XrefNotificationStatus None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.XrefNotificationStatus ResolvedMatch = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.XrefNotificationStatus ResolvedElsewhere = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.XrefNotificationStatus ResolvedWithUpdate = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.XrefNotificationStatus ResolvedUpdateAvailable = 4 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.MergeCellStyleOption: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.MergeCellStyleOption None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MergeCellStyleOption CopyDuplicates = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MergeCellStyleOption OverwriteDuplicates = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MergeCellStyleOption ConvertDuplicatesToOverrrides = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.MergeCellStyleOption IgnoreNewStyles = 8 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.ReservedStringEnumType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.ReservedStringEnumType ByLayer = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ReservedStringEnumType ByBlock = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ReservedStringEnumType None = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ReservedStringEnumType Continuous = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ReservedStringEnumType Standard = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ReservedStringEnumType Normal = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ReservedStringEnumType DefPoints = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ReservedStringEnumType Default = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ReservedStringEnumType Missing = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ReservedStringEnumType ByColor = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ReservedStringEnumType Model = 10 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ReservedStringEnumType Global = 11 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ReservedStringEnumType VS2DWireframe = 12 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ReservedStringEnumType VS3DWireframe = 13 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ReservedStringEnumType VS3DHidden = 14 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ReservedStringEnumType VSRealistic = 15 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ReservedStringEnumType VSConceptual = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ReservedStringEnumType Title = 17 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ReservedStringEnumType Header = 18 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ReservedStringEnumType Data = 19 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ReservedStringEnumType VSShadesOfGray = 20 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ReservedStringEnumType VSSketchy = 21 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ReservedStringEnumType VSXRay = 22 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ReservedStringEnumType VSShadedWithEdges = 23 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.ReservedStringEnumType VSShaded = 24 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.IndexCreation: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.IndexCreation NoIndex = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.IndexCreation IndexByLayer = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.IndexCreation IndexSpatially = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.LayerEvaluation: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.LayerEvaluation NoNewLayerEvaluation = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LayerEvaluation EvalNewXrefLayers = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LayerEvaluation EvalAllNewLayers = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.NewLayerNotification: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.NewLayerNotification NoNewLayerNotification = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.NewLayerNotification NotifyOnPlot = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.NewLayerNotification NotifyOnOpen = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.NewLayerNotification NotifyOnXrefAttachAndReload = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.NewLayerNotification NotifyOnLayerStateRestore = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.NewLayerNotification NotifyOnSave = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.NewLayerNotification NotifyOnInsert = 32 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.DrawableAttributes: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.DrawableAttributes None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableAttributes IsAnEntity = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableAttributes UsesNesting = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableAttributes IsCompoundObject = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableAttributes ViewIndependentViewportDraw = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableAttributes IsInvisible = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableAttributes HasAttributes = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableAttributes RegenTypeDependentGeometry = 64 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableAttributes IsDimension = 133 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableAttributes RegenDraw = 256 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableAttributes StandardDisplaySingleLOD = 512 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableAttributes ShadedDisplaySingleLOD = 1024 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableAttributes ViewDependentViewportDraw = 2048 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableAttributes BlockDependentViewportDraw = 4096 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableAttributes IsExternalReference = 8192 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawableAttributes NotPlottable = 16384 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.Geometry.ErrorCondition: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.Geometry.ErrorCondition OK = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.ErrorCondition This = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.ErrorCondition Arg1 = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.ErrorCondition Arg2 = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.ErrorCondition PerpendicularArg1Arg2 = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.ErrorCondition EqualArg1Arg2 = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.ErrorCondition EqualArg1Arg3 = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.ErrorCondition EqualArg2Arg3 = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.ErrorCondition LinearlyDependentArg1Arg2Arg3 = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.ErrorCondition Arg1TooBig = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.ErrorCondition Arg1OnThis = 10 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.ErrorCondition Arg1InsideThis = 11 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.LightingUnits: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.LightingUnits LightingUnitsGeneric = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LightingUnits LightingUnitsAmerican = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LightingUnits LightingUnitsInternational = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.EraseFlags: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.EraseFlags ZeroLengthCurve = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.EraseFlags EmptyText = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.EraseFlags AllEmptyObj = -1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.Planarity: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.Planarity NonPlanar = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Planarity Planar = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Planarity Linear = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.EntityVisualStyleType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.EntityVisualStyleType FullVisualStyle = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.EntityVisualStyleType FaceVisualStyle = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.EntityVisualStyleType EdgeVisualStyle = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.Runtime.LispDataType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.Runtime.LispDataType None = 5000 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.LispDataType Double = 5001 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.LispDataType Point2d = 5002 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.LispDataType Int16 = 5003 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.LispDataType Angle = 5004 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.LispDataType Text = 5005 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.LispDataType ObjectId = 5006 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.LispDataType SelectionSet = 5007 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.LispDataType Orientation = 5008 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.LispDataType Point3d = 5009 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.LispDataType Int32 = 5010 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.LispDataType Void = 5014 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.LispDataType ListBegin = 5016 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.LispDataType ListEnd = 5017 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.LispDataType DottedPair = 5018 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.LispDataType Nil = 5019 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.LispDataType T_atom = 5021 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.DrawFlags: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.DrawFlags None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawFlags DrawBackfaces = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawFlags DrawNoLineWeight = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawFlags DrawFillTextBoundaryStart = 256 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.DrawFlags DrawFillTextBoundaryEnd = 512 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.HatchEdgeType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.HatchEdgeType Line = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.HatchEdgeType CircularArc = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.HatchEdgeType EllipticalArc = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.HatchEdgeType Spline = 4 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.ProceduralTextureType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.ProceduralTextureType Wood = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ProceduralTextureType Marble = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.ProceduralTextureType Generic = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.TableStyleFlags: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.TableStyleFlags HorizontalInsideLineFirst = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleFlags HorizontalInsideLineSecond = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleFlags HorizontalInsideLineThird = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.TableStyleFlags TableStyleModified = 8 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.VSFaceLightingModel: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.VSFaceLightingModel Invisible = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSFaceLightingModel Constant = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSFaceLightingModel Phong = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSFaceLightingModel Gooch = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.VSFaceLightingQuality: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.VSFaceLightingQuality NoLighting = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSFaceLightingQuality PerFaceLighting = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSFaceLightingQuality PerVertexLighting = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSFaceLightingQuality PerPixelLighting = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.VSFaceColorMode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.VSFaceColorMode None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSFaceColorMode ObjectColor = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSFaceColorMode BackgroundColor = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSFaceColorMode Mono = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSFaceColorMode Tint = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSFaceColorMode Desaturate = 5 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.VSFaceModifiers: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.VSFaceModifiers None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSFaceModifiers FaceOpacityFlag = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSFaceModifiers SpecularFlag = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.VSEdgeModel: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeModel NoEdges = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeModel Isolines = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeModel FacetEdges = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.VSEdgeStyles: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeStyles None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeStyles VisibleFlag = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeStyles SilhouetteFlag = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeStyles ObscuredFlag = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeStyles IntersectionFlag = 8 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.VSEdgeModifiers: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeModifiers None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeModifiers EdgeOverhangFlag = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeModifiers EdgeJitterFlag = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeModifiers EdgeWidthFlag = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeModifiers EdgeColorFlag = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeModifiers EdgeHaloGapFlag = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeModifiers AlwaysOnTopFlag = 64 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeModifiers EdgeOpacityFlag = 128 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.VSEdgeJitterAmount: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeJitterAmount JitterLow = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeJitterAmount JitterMedium = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeJitterAmount JitterHigh = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.VSEdgeLinePattern: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeLinePattern Solid = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeLinePattern Dashed = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeLinePattern Dotted = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeLinePattern ShortDash = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeLinePattern MediumDash = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeLinePattern LongDash = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeLinePattern DoubleShortDash = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeLinePattern DoubleMediumDash = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeLinePattern DoubleLongDash = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeLinePattern MediumLongDash = 10 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSEdgeLinePattern SparseDot = 11 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.VSDisplayStyles: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.VSDisplayStyles None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSDisplayStyles BackgroundsFlag = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSDisplayStyles LightingFlag = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSDisplayStyles MaterialsFlag = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSDisplayStyles TexturesFlag = 8 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsInterface.VSDisplayShadowType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.VSDisplayShadowType None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSDisplayShadowType GroundPlane = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSDisplayShadowType Full = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.VSDisplayShadowType FullAndGround = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.GsMarkType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.GsMarkType None = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GsMarkType ArrowMark = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GsMarkType LeaderLineMark = 5001 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GsMarkType DoglegMark = 10001 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GsMarkType BlockMark = 15004 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GsMarkType MTextMark = 15001 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GsMarkType MTextUnderLineMark = 15002 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GsMarkType ToleranceMark = 15003 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.RigidSetTypeInfo: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.RigidSetTypeInfo NotRigidSet = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.RigidSetTypeInfo ScalableRigidSet = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.RigidSetTypeInfo NonScalableRigidSet = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.AssocConstraintType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.AssocConstraintType NoneAssocConstraintType = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AssocConstraintType DistanceAssocConstraintType = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AssocConstraintType HorizontalDistanceAssocConstraintType = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AssocConstraintType VerticalDistanceAssocConstraintType = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AssocConstraintType Angle0AssocConstraintType = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AssocConstraintType Angle1AssocConstraintType = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AssocConstraintType Angle2AssocConstraintType = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AssocConstraintType Angle3AssocConstraintType = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AssocConstraintType RadiusAssocConstraintType = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AssocConstraintType DiameterAssocConstraintType = 9 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.Runtime.Registry: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Properties:
    Autodesk.AutoCAD.Runtime.RegistryKey CurrentConfig 'get ' : 
    Autodesk.AutoCAD.Runtime.RegistryKey ClassesRoot 'get ' : 
    Autodesk.AutoCAD.Runtime.RegistryKey CurrentUser 'get ' : 
    Autodesk.AutoCAD.Runtime.RegistryKey LocalMachine 'get ' : 
  Methods:
    get_LocalMachine(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CurrentUser(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ClassesRoot(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CurrentConfig(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Autodesk.AutoCAD.Runtime.RegistryKey: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Microsoft.Win32.RegistryKey): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Int32 ValueCount 'get ' : 
    Int32 SubKeyCount 'get ' : 
  Methods:
    Close(): PrivateScope, Public, HideBySig
    CreateSubKey(String, RegistryKeyPermissionCheck, RegistryOptions, RegistrySecurity): PrivateScope, Public, HideBySig
    CreateSubKey(String, RegistryKeyPermissionCheck, RegistrySecurity): PrivateScope, Public, HideBySig
    CreateSubKey(String, RegistryKeyPermissionCheck, RegistryOptions): PrivateScope, Public, HideBySig
    CreateSubKey(String, RegistryKeyPermissionCheck): PrivateScope, Public, HideBySig
    CreateSubKey(String): PrivateScope, Public, HideBySig
    DeleteSubKey(String): PrivateScope, Public, HideBySig
    DeleteSubKeyTree(String): PrivateScope, Public, HideBySig
    DeleteValue(String): PrivateScope, Public, HideBySig
    GetBaseKey(RegistryHive): PrivateScope, Public, Static, HideBySig
    GetSubKeyNames(): PrivateScope, Public, HideBySig
    GetValue(String, Object, RegistryValueOptions): PrivateScope, Public, HideBySig
    GetValue(String, Object): PrivateScope, Public, HideBySig
    GetValue(String): PrivateScope, Public, HideBySig
    GetValueKind(String): PrivateScope, Public, HideBySig
    GetValueNames(): PrivateScope, Public, HideBySig
    OpenBaseKey(RegistryHive, RegistryView): PrivateScope, Public, Static, HideBySig
    OpenSubKey(String, RegistryKeyPermissionCheck, RegistryRights): PrivateScope, Public, HideBySig
    OpenSubKey(String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    OpenSubKey(String, RegistryKeyPermissionCheck): PrivateScope, Public, HideBySig
    OpenSubKey(String): PrivateScope, Public, HideBySig
    SetValue(String, Object, RegistryValueKind): PrivateScope, Public, HideBySig
    SetValue(String, Object): PrivateScope, Public, HideBySig
    get_SubKeyCount(): PrivateScope, Public, HideBySig, SpecialName
    get_ValueCount(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Struct Autodesk.AutoCAD.Geometry.Matrix2dInfo: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Autodesk.AutoCAD.Geometry.Vector2d Reflex 'get ' : 
    Boolean IsMirror 'get ' : 
    Double Angle 'get ' : 
    Double Scale 'get ' : 
  Methods:
    get_Scale(): PrivateScope, Public, HideBySig, SpecialName
    get_Angle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsMirror(): PrivateScope, Public, HideBySig, SpecialName
    get_Reflex(): PrivateScope, Public, HideBySig, SpecialName
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    IsEqualTo(Matrix2dInfo): PrivateScope, Public, HideBySig
    IsEqualTo(Matrix2dInfo, Tolerance): PrivateScope, Public, HideBySig
    op_Inequality(Matrix2dInfo, Matrix2dInfo): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(Matrix2dInfo, Matrix2dInfo): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Struct Autodesk.AutoCAD.Geometry.CoordinateSystem2d: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2d, Autodesk.AutoCAD.Geometry.Vector2d, Autodesk.AutoCAD.Geometry.Vector2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IFormattable
  Properties:
    Autodesk.AutoCAD.Geometry.Vector2d Yaxis 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector2d Xaxis 'get ' : 
    Autodesk.AutoCAD.Geometry.Point2d Origin 'get ' : 
  Methods:
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    get_Xaxis(): PrivateScope, Public, HideBySig, SpecialName
    get_Yaxis(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    IsEqualTo(CoordinateSystem2d): PrivateScope, Public, HideBySig
    IsEqualTo(CoordinateSystem2d, Tolerance): PrivateScope, Public, HideBySig
    op_Inequality(CoordinateSystem2d, CoordinateSystem2d): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(CoordinateSystem2d, CoordinateSystem2d): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.Geometry.Matrix2dBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.Geometry.Matrix2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double ElementAt [Int32, Int32] 'get set' : 
  Methods:
    get_ElementAt(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    set_ElementAt(Int32, Int32, Double): PrivateScope, Public, HideBySig, SpecialName
    ToMatrix2d(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.Internal.FieldEngine: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 EvaluationOption 'get set' : 
  Methods:
    get_EvaluationOption(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_EvaluationOption(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
Class Autodesk.AutoCAD.Runtime.LenientResourceManager: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Resources.ResourceManager
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.Runtime.Marshaler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Methods:
    BitmapInfoToBitmap(IntPtr): PrivateScope, Public, Static, HideBySig
    BitmapToBitmapInfo(Bitmap): PrivateScope, Public, Static, HideBySig
    CopyToUnmanagedFullSubentityPath(FullSubentityPath, IntPtr): PrivateScope, Public, Static, HideBySig
    CopyToManagedFullSubentityPath(IntPtr): PrivateScope, Public, Static, HideBySig
    GetInternalArray(Vector3dCollection): PrivateScope, Public, Static, HideBySig
    GetInternalArray(Vector2dCollection): PrivateScope, Public, Static, HideBySig
    GetInternalArray(Point2dCollection): PrivateScope, Public, Static, HideBySig
    GetInternalArray(IntegerCollection): PrivateScope, Public, Static, HideBySig
    GetInternalArray(DoubleCollection): PrivateScope, Public, Static, HideBySig
    SetInternalArray(Vector3dCollection, Vector3d[], Int32): PrivateScope, Public, Static, HideBySig
    SetInternalArray(Vector2dCollection, Vector2d[], Int32): PrivateScope, Public, Static, HideBySig
    SetInternalArray(Point2dCollection, Point2d[], Int32): PrivateScope, Public, Static, HideBySig
    SetInternalArray(IntegerCollection, Int32[], Int32): PrivateScope, Public, Static, HideBySig
    SetInternalArray(DoubleCollection, Double[], Int32): PrivateScope, Public, Static, HideBySig
    ObjectToAcValue(Object, IntPtr): PrivateScope, Public, Static, HideBySig
    AcValueToObject(IntPtr): PrivateScope, Public, Static, HideBySig
    TypedValuesToResbuf(TypedValue[]): PrivateScope, Public, Static, HideBySig
    ResbufToTypedValues(IntPtr): PrivateScope, Public, Static, HideBySig
    ResbufToObject(IntPtr): PrivateScope, Public, Static, HideBySig
    ObjectToResbuf(Object): PrivateScope, Public, Static, HideBySig
    ObjectToResbuf(Object, IntPtr): PrivateScope, Public, Static, HideBySig
    ObjectsToResbuf(Object[]): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.Geometry.Point2dCollectionEnumerator: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2dCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    Autodesk.AutoCAD.Geometry.Point2d Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.Geometry.Vector2dCollectionEnumerator: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.Geometry.Vector2dCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    Autodesk.AutoCAD.Geometry.Vector2d Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.GeoCoordinateCategory: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Properties:
    System.String ID 'get ' : 
  Methods:
    get_ID(): PrivateScope, Public, HideBySig, SpecialName
    NumOfCoordinate(): PrivateScope, Public, HideBySig
    GetCoordinateAt(Int32): PrivateScope, Public, HideBySig
    CreateAll(): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.GeoCoordinateSystem: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Properties:
    System.String WktRepresentation 'get ' : 
    System.String XmlRepresentation 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Extents2d GeodeticExtents 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Extents2d CartesianExtents 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector2d Offset 'get ' : 
    GeoEllipsoid Ellipsoid 'get ' : 
    GeoDatum Datum 'get ' : 
    Double UnitScale 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit GeoUnit 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.UnitsValue Unit 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode ProjectionCode 'get ' : 
    System.String Description 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.GeoCSType Type 'get ' : 
    Int32 EPSGcode 'get ' : 
    System.String ID 'get ' : 
  Methods:
    get_ID(): PrivateScope, Public, HideBySig, SpecialName
    get_EPSGcode(): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    get_ProjectionCode(): PrivateScope, Public, HideBySig, SpecialName
    get_Unit(): PrivateScope, Public, HideBySig, SpecialName
    get_GeoUnit(): PrivateScope, Public, HideBySig, SpecialName
    get_UnitScale(): PrivateScope, Public, HideBySig, SpecialName
    get_Datum(): PrivateScope, Public, HideBySig, SpecialName
    get_Ellipsoid(): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    get_CartesianExtents(): PrivateScope, Public, HideBySig, SpecialName
    get_GeodeticExtents(): PrivateScope, Public, HideBySig, SpecialName
    get_XmlRepresentation(): PrivateScope, Public, HideBySig, SpecialName
    get_WktRepresentation(): PrivateScope, Public, HideBySig, SpecialName
    GetProjectionParamList(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    CreateAll(GeoCoordinateCategory): PrivateScope, Public, Static, HideBySig
    CreateAll(ValueType Point3d IsBoxed): PrivateScope, Public, Static, HideBySig
    CreateAll(): PrivateScope, Public, Static, HideBySig
    Create(String): PrivateScope, Public, Static, HideBySig
Struct GeoDatum: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.String Id : Public
    System.String Desc : Public
Struct GeoEllipsoid: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.String Id : Public
    System.String Desc : Public
    Double PolarRadius : Public
    Double Eccentricity : Public
Struct GeoProjectionParam: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.String Name : Public
    Double Value : Public
Struct Autodesk.AutoCAD.DatabaseServices.GeoCSType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.GeoCSType Unknown = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSType Arbitrary = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSType Geographic = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSType Projected = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Unknown = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Alber = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Azede = 59 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Azmea = 11 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Azmed = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Bipolar = 31 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Bonne = 24 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Cassini = 22 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Eckert4 = 25 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Eckert6 = 26 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Edcnc = 12 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Edcyl = 20 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode GaussK = 46 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Gnomonic = 19 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Goode = 28 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Hom1uv = 1281 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Hom1xy = 1282 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Hom2uv = 1283 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Hom2xy = 1284 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Krovak = 47 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Krvk95 = 51 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode LL = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Lm1sp = 36 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Lm2sp = 37 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Lmblg = 38 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Lmtan = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Miller = 13 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Mndotl = 41 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Mndott = 42 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Modpc = 10 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Mollweid = 27 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Mrcat = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode MrcatK = 49 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Mstero = 15 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Neacyl = 29 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Nerth = 55 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Nzealand = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode OblqM = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Obqcyl = 56 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Ortho = 18 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Ostn02 = 60 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Ostn97 = 58 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Ostro = 34 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Plycn = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Pstro = 33 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Pstrosl = 53 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Rskew = 1285 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Rskewc = 1286 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Rskewo = 1287 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Robinson = 23 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Sinus = 17 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Sotrm = 43 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Sstro = 35 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Swiss = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Sys34 = 57 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Sys34_99 = 61 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Teacyl = 30 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Tm = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Trmeraf = 54 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Trmrkrg = 62 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Trmrs = 45 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Vdgrntn = 21 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Wccsl = 39 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Wccst = 40 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Utm = 44 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Winkl = 63 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Nrthsrt = 64 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Lmbrtaf = 65 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode Sys34_01 = 66 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode EdcylE = 67 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode PlateCarree = 68 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSProjectionCode PvMercator = 69 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.GeoCSUnit: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Unknown = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Meter = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Foot = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Inch = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit IFoot = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit ClarkeFoot = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit IInch = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Centimeter = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Kilometer = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Yard = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit SearsYard = 10 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Mile = 11 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit IYard = 12 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit IMile = 13 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Knot = 14 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit NautM = 15 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Lat66 = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Lat83 = 17 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Decimeter = 18 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Millimeter = 19 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Dekameter = 20 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Hectometer = 21 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit GermanMeter = 22 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit CaGrid = 23 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit ClarkeChain = 24 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit GunterChain = 25 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit BenoitChain = 26 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit SearsChain = 27 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit ClarkeLink = 28 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit GunterLink = 29 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit BenoitLink = 30 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit SearsLink = 31 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Rod = 32 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Perch = 33 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Pole = 34 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Furlong = 35 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Rood = 36 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit CapeRood = 37 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Brealey = 38 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit SearsFoot = 39 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit GoldCoastFoot = 40 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit MicroInch = 41 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit IndianYard = 42 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit IndianFoot = 43 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit IndianFt37 = 44 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit IndianFt62 = 45 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit IndianFt75 = 46 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit IndianYd37 = 47 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Decameter = 48 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit InternationalChain = 49 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit InternationalLink = 50 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Degree = 1001 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Grad = 1002 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Grade = 1003 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit MapInfo = 1004 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Mil = 1005 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Minute = 1006 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Radian = 1007 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Second = 1008 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Decisec = 1009 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Centisec = 1010 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.GeoCSUnit Millisec = 1011 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.GeoCoordinateTransformer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Properties:
    System.String TargetCSid 'get ' : 
    System.String SourceCSid 'get ' : 
  Methods:
    get_SourceCSid(): PrivateScope, Public, HideBySig, SpecialName
    get_TargetCSid(): PrivateScope, Public, HideBySig, SpecialName
    TransformPoint(String, String, Point3d): PrivateScope, Public, Static, HideBySig
    TransformPoint(Point3d): PrivateScope, Public, HideBySig
    TransformPoints(String, String, Point3dCollection): PrivateScope, Public, Static, HideBySig
    TransformPoints(Point3dCollection): PrivateScope, Public, HideBySig
    Create(String, String): PrivateScope, Public, Static, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.PointCloudCropType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.PointCloudCropType Invalid = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PointCloudCropType Rectangular = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PointCloudCropType Polygonal = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.PointCloudCropType Circular = 3 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.Geometry.PointOnSurface: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.PointEntity3d
    Void .ctor(Autodesk.AutoCAD.Geometry.Surface, Autodesk.AutoCAD.Geometry.Point2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point2d Parameter 'get set' : 
    Autodesk.AutoCAD.Geometry.Surface Surface 'get set' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_Surface(): PrivateScope, Public, HideBySig, SpecialName
    set_Surface(Surface): PrivateScope, Public, HideBySig, SpecialName
    get_Parameter(): PrivateScope, Public, HideBySig, SpecialName
    set_Parameter(Point2d): PrivateScope, Public, HideBySig, SpecialName
    GetPoint(Surface, Point2d): PrivateScope, Public, Static, HideBySig
    GetPoint(Point2d): PrivateScope, Public, HideBySig
    GetNormal(Surface, Point2d): PrivateScope, Public, Static, HideBySig
    GetNormal(Point2d): PrivateScope, Public, HideBySig
    GetNormal(): PrivateScope, Public, HideBySig
    GetUDerivative(Int32, Surface, Point2d): PrivateScope, Public, Static, HideBySig
    GetUDerivative(Int32, Point2d): PrivateScope, Public, HideBySig
    GetUDerivative(Int32): PrivateScope, Public, HideBySig
    GetVDerivative(Int32, Surface, Point2d): PrivateScope, Public, Static, HideBySig
    GetVDerivative(Int32, Point2d): PrivateScope, Public, HideBySig
    GetVDerivative(Int32): PrivateScope, Public, HideBySig
    GetMixedPartial(Surface, Point2d): PrivateScope, Public, Static, HideBySig
    GetMixedPartial(Point2d): PrivateScope, Public, HideBySig
    GetMixedPartial(): PrivateScope, Public, HideBySig
    GetTangentVector(Vector2d, Surface, Point2d): PrivateScope, Public, Static, HideBySig
    GetTangentVector(Vector2d, Point2d): PrivateScope, Public, HideBySig
    GetTangentVector(Vector2d): PrivateScope, Public, HideBySig
    GetInverseTangentVector(Vector3d, Surface, Point2d): PrivateScope, Public, Static, HideBySig
    GetInverseTangentVector(Vector3d, Point2d): PrivateScope, Public, HideBySig
    GetInverseTangentVector(Vector3d): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.Geometry.PlanarEquationCoefficients: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double D   'get ' : 
    Double C   'get ' : 
    Double B   'get ' : 
    Double A   'get ' : 
  Methods:
    get_A(): PrivateScope, Public, HideBySig, SpecialName
    get_B(): PrivateScope, Public, HideBySig, SpecialName
    get_C(): PrivateScope, Public, HideBySig, SpecialName
    get_D(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.Geometry.BoundedPlane: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.PlanarEntity
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Vector3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    IntersectWith(BoundedPlane): PrivateScope, Public, HideBySig
    IntersectWith(BoundedPlane, Tolerance): PrivateScope, Public, HideBySig
    IntersectWith(Plane): PrivateScope, Public, HideBySig
    IntersectWith(Plane, Tolerance): PrivateScope, Public, HideBySig
    Set(Point3d, Point3d, Point3d): PrivateScope, Public, HideBySig
    Set(Point3d, Vector3d, Vector3d): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.Int32CollectionEnumerator: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.Geometry.Int32Collection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    Int32 Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, HideBySig, SpecialName
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.UniqueString: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Methods:
    Intern(String): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.GraphicsSystem.KernelDescriptor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Autodesk.AutoCAD.UniqueString Drawing2D : Public, Static
    Autodesk.AutoCAD.UniqueString Drawing3D : Public, Static
    Autodesk.AutoCAD.UniqueString Selection3D : Public, Static
    Autodesk.AutoCAD.UniqueString RapidRTRendering3D : Public, Static
  Methods:
    addRequirement(UniqueString): PrivateScope, Public, HideBySig
    supports(UniqueString): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.GraphicsSystem.GraphicsKernel: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Autodesk.AutoCAD.Geometry.LinearEntity2d: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Curve2d
  Properties:
    Autodesk.AutoCAD.Geometry.Vector2d Direction 'get ' : 
    Autodesk.AutoCAD.Geometry.Point2d PointOnLine 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    IntersectWith(LinearEntity2d): PrivateScope, Public, HideBySig
    IntersectWith(LinearEntity2d, Tolerance): PrivateScope, Public, HideBySig
    Overlap(LinearEntity2d): PrivateScope, Public, HideBySig
    Overlap(LinearEntity2d, Tolerance): PrivateScope, Public, HideBySig
    IsParallelTo(LinearEntity2d): PrivateScope, Public, HideBySig
    IsParallelTo(LinearEntity2d, Tolerance): PrivateScope, Public, HideBySig
    IsPerpendicularTo(LinearEntity2d): PrivateScope, Public, HideBySig
    IsPerpendicularTo(LinearEntity2d, Tolerance): PrivateScope, Public, HideBySig
    IsColinearTo(LinearEntity2d): PrivateScope, Public, HideBySig
    IsColinearTo(LinearEntity2d, Tolerance): PrivateScope, Public, HideBySig
    GetPerpendicularLine(Point2d): PrivateScope, Public, HideBySig
    get_PointOnLine(): PrivateScope, Public, HideBySig, SpecialName
    get_Direction(): PrivateScope, Public, HideBySig, SpecialName
    GetLine(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Runtime.ProfileCurve2d: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(Autodesk.AutoCAD.Geometry.CircularArc2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.LineSegment2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.CircularArc2d Arc 'get set' : 
    Autodesk.AutoCAD.Geometry.LineSegment2d LineSeg 'get set' : 
    Boolean IsArc 'get ' : 
    Boolean IsSegment 'get ' : 
  Methods:
    get_IsSegment(): PrivateScope, Public, HideBySig, SpecialName
    get_IsArc(): PrivateScope, Public, HideBySig, SpecialName
    get_LineSeg(): PrivateScope, Public, HideBySig, SpecialName
    set_LineSeg(LineSegment2d): PrivateScope, Public, HideBySig, SpecialName
    get_Arc(): PrivateScope, Public, HideBySig, SpecialName
    set_Arc(CircularArc2d): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.Runtime.ExtractionType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.Runtime.ExtractionType OutLine = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ExtractionType AllLine = 1 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.Runtime.PointCloudExtractor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Extract(PointCloudEx, Vector3d, Vector3d, Point3d, ExtractOption, IPointCloudExtractionProgressCallback): PrivateScope, Public, Static, HideBySig
    AppendLineProfile(PointCloudExtractResult, ObjectId, String, Color): PrivateScope, Public, Static, HideBySig
    AppendPolylineProfile(PointCloudExtractResult, ObjectId, String, Color, Double): PrivateScope, Public, Static, HideBySig
Struct Autodesk.AutoCAD.Runtime.ProfileCurveType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.Runtime.ProfileCurveType LineSeg = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Runtime.ProfileCurveType Arc = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.DBObjectReference: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Kind 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ObjectId 'get ' : 
  Methods:
    get_ObjectId(): PrivateScope, Public, HideBySig, SpecialName
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
Struct AdsName: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int64 name1 : Public
    Int64 name2 : Public
Class Autodesk.AutoCAD.Runtime.ProgressMeter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Start(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Start(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Stop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    MeterProgress(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    SetLimit(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Autodesk.AutoCAD.DatabaseServices.AuditPass: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.AuditPass Pass1 = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.AuditPass Pass2 = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.DynamicDimensionData: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.Dimension): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.Dimension, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.Dimension, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object ApplicationData 'get set' : 
    Boolean HideIfValueIsZero 'get set' : 
    Boolean Visible 'get set' : 
    Boolean Editable 'get set' : 
    Boolean Focal 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.Dimension Dimension 'get set' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_Dimension(): PrivateScope, Public, HideBySig, SpecialName
    set_Dimension(Dimension): PrivateScope, Public, HideBySig, SpecialName
    get_Focal(): PrivateScope, Public, HideBySig, SpecialName
    set_Focal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Editable(): PrivateScope, Public, HideBySig, SpecialName
    set_Editable(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HideIfValueIsZero(): PrivateScope, Public, HideBySig, SpecialName
    set_HideIfValueIsZero(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ApplicationData(): PrivateScope, Public, HideBySig, SpecialName
    set_ApplicationData(Object): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.DynamicDimensionDataCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Autodesk.AutoCAD.DatabaseServices.DynamicDimensionData Item [Int32] 'get set' : 
    Int32 Count 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, DynamicDimensionData): PrivateScope, Public, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(DynamicDimensionData): PrivateScope, Public, HideBySig
    RemoveAt(Int32): PrivateScope, Public, HideBySig
    Clear(): PrivateScope, Public, HideBySig
    CopyTo(DynamicDimensionData[], Int32): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.DynamicDimensionChangedEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Int32, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Value 'get ' : 
    Int32 Index 'get ' : 
  Methods:
    get_Index(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.GripData+ReturnValue: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ReturnValue Ok = 0 : Public, Static, Literal, HasDefault
    ReturnValue Failure = 1 : Public, Static, Literal, HasDefault
    ReturnValue NoRedrawGrip = 2 : Public, Static, Literal, HasDefault
    ReturnValue GripHotToWarm = 3 : Public, Static, Literal, HasDefault
    ReturnValue GetNewGripPoints = 4 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.GripData+DrawType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DrawType WarmGrip = 0 : Public, Static, Literal, HasDefault
    DrawType HoverGrip = 1 : Public, Static, Literal, HasDefault
    DrawType HotGrip = 2 : Public, Static, Literal, HasDefault
    DrawType DragImageGrip = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.GripData+Context: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Context SharedGrip = 1 : Public, Static, Literal, HasDefault
    Context MultiHotGrip = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.GripData+Status: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Status GripStart = 0 : Public, Static, Literal, HasDefault
    Status GripEnd = 1 : Public, Static, Literal, HasDefault
    Status GripAbort = 2 : Public, Static, Literal, HasDefault
    Status Stretch = 3 : Public, Static, Literal, HasDefault
    Status Move = 4 : Public, Static, Literal, HasDefault
    Status Rotate = 5 : Public, Static, Literal, HasDefault
    Status Scale = 6 : Public, Static, Literal, HasDefault
    Status Mirror = 7 : Public, Static, Literal, HasDefault
    Status DimFocusChanged = 8 : Public, Static, Literal, HasDefault
    Status PopUpMenu = 9 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.GraphicsInterface.VisualStyleTraits: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.GraphicsInterface.DrawableTraits
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.VisualStyle AcGiVisualStyle 'get set' : 
  Methods:
    get_AcGiVisualStyle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_AcGiVisualStyle(VisualStyle): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.Geometry.AugmentedPolylineCurve3d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.PolylineCurve3d
    Void .ctor(Autodesk.AutoCAD.Geometry.Curve3d, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3dCollection, Autodesk.AutoCAD.Geometry.Vector3dCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.KnotCollection, Autodesk.AutoCAD.Geometry.Point3dCollection, Autodesk.AutoCAD.Geometry.Vector3dCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double ApproximateTolerance 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3dCollection D2Vectors 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3dCollection D1Vectors 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3dCollection Points 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    GetPointAt(Int32): PrivateScope, Public, HideBySig
    SetPointAt(Int32, Point3d): PrivateScope, Public, HideBySig
    get_Points(): PrivateScope, Public, HideBySig, SpecialName
    GetVectorAt(Int32): PrivateScope, Public, HideBySig
    SetVectorAt(Int32, Vector3d): PrivateScope, Public, HideBySig
    get_D1Vectors(): PrivateScope, Public, HideBySig, SpecialName
    GetD2VectorAt(Int32): PrivateScope, Public, HideBySig
    SetD2VectorAt(Int32, Vector3d): PrivateScope, Public, HideBySig
    get_D2Vectors(): PrivateScope, Public, HideBySig, SpecialName
    get_ApproximateTolerance(): PrivateScope, Public, HideBySig, SpecialName
    set_ApproximateTolerance(Double): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.Geometry.ClipBoundary2dData: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Autodesk.AutoCAD.Geometry.IntegerCollection ClippedSegmentSourceLabel 'get ' : 
    Autodesk.AutoCAD.Geometry.ClipCondition ClipCondition 'get ' : 
    Autodesk.AutoCAD.Geometry.Point2dCollection ClippedVertices 'get ' : 
  Methods:
    get_ClippedVertices(): PrivateScope, Public, HideBySig, SpecialName
    get_ClipCondition(): PrivateScope, Public, HideBySig, SpecialName
    get_ClippedSegmentSourceLabel(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    IsEqualTo(ClipBoundary2dData): PrivateScope, Public, HideBySig
    op_Inequality(ClipBoundary2dData, ClipBoundary2dData): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(ClipBoundary2dData, ClipBoundary2dData): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.Geometry.ClipBoundary2d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Entity2d
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2dCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2d, Autodesk.AutoCAD.Geometry.Point2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    Set(Point2dCollection): PrivateScope, Public, HideBySig
    Set(Point2d, Point2d): PrivateScope, Public, HideBySig
    ClipPolygon(Point2dCollection): PrivateScope, Public, HideBySig
    ClipPolyline(Point2dCollection): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.Geometry.CompositeParameter: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double LocalParameter 'get ' : 
    Int32 SegmentIndex 'get ' : 
  Methods:
    get_SegmentIndex(): PrivateScope, Public, HideBySig, SpecialName
    get_LocalParameter(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    IsEqualTo(CompositeParameter): PrivateScope, Public, HideBySig
    IsEqualTo(CompositeParameter, Tolerance): PrivateScope, Public, HideBySig
    op_Inequality(CompositeParameter, CompositeParameter): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(CompositeParameter, CompositeParameter): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.Geometry.CompositeCurve2d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Curve2d
    Void .ctor(Autodesk.AutoCAD.Geometry.Curve2d[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    GetCurves(): PrivateScope, Public, HideBySig
    SetCurves(Curve2d[]): PrivateScope, Public, HideBySig
    GlobalToLocalParameter(Double): PrivateScope, Public, HideBySig
    LocalToGlobalParameter(CompositeParameter): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.CompositeCurve3d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Curve3d
    Void .ctor(Autodesk.AutoCAD.Geometry.Curve3d[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    GetCurves(): PrivateScope, Public, HideBySig
    GlobalToLocalParameter(Double): PrivateScope, Public, HideBySig
    LocalToGlobalParameter(CompositeParameter): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.Cone: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Surface
    Void .ctor(Double, Double, Autodesk.AutoCAD.Geometry.Point3d, Double, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Interval, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Autodesk.AutoCAD.Geometry.Point3d, Double, Autodesk.AutoCAD.Geometry.Vector3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Point3d Apex 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d ReferenceAxis 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d AxisOfSymmetry 'get ' : 
    Boolean IsOuterNormal 'get ' : 
    Autodesk.AutoCAD.Geometry.Interval Height 'get set' : 
    Double HalfAngle 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d BaseCenter 'get ' : 
    Double BaseRadius 'get set' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_BaseRadius(): PrivateScope, Public, HideBySig, SpecialName
    set_BaseRadius(Double): PrivateScope, Public, HideBySig, SpecialName
    get_BaseCenter(): PrivateScope, Public, HideBySig, SpecialName
    get_HalfAngle(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Interval): PrivateScope, Public, HideBySig, SpecialName
    get_IsOuterNormal(): PrivateScope, Public, HideBySig, SpecialName
    get_AxisOfSymmetry(): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceAxis(): PrivateScope, Public, HideBySig, SpecialName
    get_Apex(): PrivateScope, Public, HideBySig, SpecialName
    GetAngles(): PrivateScope, Public, HideBySig
    GetHalfAngles(): PrivateScope, Public, HideBySig
    GetHeightAt(Double): PrivateScope, Public, HideBySig
    IsClosed(): PrivateScope, Public, HideBySig
    IsClosed(Tolerance): PrivateScope, Public, HideBySig
    SetAngles(Double, Double): PrivateScope, Public, HideBySig
    Set(Double, Double, Point3d, Double, Vector3d, Vector3d, Interval, Double, Double): PrivateScope, Public, HideBySig
    Set(Double, Double, Point3d, Double, Vector3d): PrivateScope, Public, HideBySig
    IntersectWith(LinearEntity3d): PrivateScope, Public, HideBySig
    IntersectWith(LinearEntity3d, Tolerance): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.SplineEntity2d: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Curve2d
  Properties:
    Boolean HasFitData 'get ' : 
    Autodesk.AutoCAD.Geometry.Point2d EndPoint 'get ' : 
    Autodesk.AutoCAD.Geometry.Point2d StartPoint 'get ' : 
    Double EndParameter 'get ' : 
    Double StartParameter 'get ' : 
    Int32 NumControlPoints 'get ' : 
    Autodesk.AutoCAD.Geometry.KnotCollection Knots 'get ' : 
    Int32 NumKnots 'get ' : 
    Int32 Order 'get ' : 
    Int32 Degree 'get ' : 
    Boolean IsRational 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_IsRational(): PrivateScope, Public, HideBySig, SpecialName
    get_Degree(): PrivateScope, Public, HideBySig, SpecialName
    get_Order(): PrivateScope, Public, HideBySig, SpecialName
    get_NumKnots(): PrivateScope, Public, HideBySig, SpecialName
    get_Knots(): PrivateScope, Public, HideBySig, SpecialName
    get_NumControlPoints(): PrivateScope, Public, HideBySig, SpecialName
    GetContinuityAtKnot(Int32): PrivateScope, Public, HideBySig
    GetContinuityAtKnot(Int32, Tolerance): PrivateScope, Public, HideBySig
    get_StartParameter(): PrivateScope, Public, HideBySig, SpecialName
    get_EndParameter(): PrivateScope, Public, HideBySig, SpecialName
    get_StartPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_EndPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_HasFitData(): PrivateScope, Public, HideBySig, SpecialName
    GetKnotAt(Int32): PrivateScope, Public, HideBySig
    SetKnotAt(Int32, Double): PrivateScope, Public, HideBySig
    GetControlPointAt(Int32): PrivateScope, Public, HideBySig
    SetControlPointAt(Int32, Point2d): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.CubicSplineCurve2d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.SplineEntity2d
    Void .ctor(Autodesk.AutoCAD.Geometry.KnotCollection, Autodesk.AutoCAD.Geometry.Point2dCollection, Autodesk.AutoCAD.Geometry.Vector2dCollection, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Curve2d, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2dCollection, Autodesk.AutoCAD.Geometry.Vector2d, Autodesk.AutoCAD.Geometry.Vector2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2dCollection, Autodesk.AutoCAD.Geometry.Vector2d, Autodesk.AutoCAD.Geometry.Vector2d, Autodesk.AutoCAD.Geometry.Tolerance): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2dCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2dCollection, Autodesk.AutoCAD.Geometry.Tolerance): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 NumFitPoints 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_NumFitPoints(): PrivateScope, Public, HideBySig, SpecialName
    GetFitPointAt(Int32): PrivateScope, Public, HideBySig
    SetFitPointAt(Int32, Point2d): PrivateScope, Public, HideBySig
    GetFirstDerivativeAt(Int32): PrivateScope, Public, HideBySig
    SetFirstDerivativeAt(Int32, Vector2d): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.CubicSplineCurve3d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.SplineEntity3d
    Void .ctor(Autodesk.AutoCAD.Geometry.Curve3d, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.KnotCollection, Autodesk.AutoCAD.Geometry.Point3dCollection, Autodesk.AutoCAD.Geometry.Vector3dCollection, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3dCollection, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Vector3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3dCollection, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Tolerance): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3dCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3dCollection, Autodesk.AutoCAD.Geometry.Tolerance): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 NumberOfFitPoints 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_NumberOfFitPoints(): PrivateScope, Public, HideBySig, SpecialName
    FitPointAt(Int32): PrivateScope, Public, HideBySig
    SetFitPointAt(Int32, Point3d): PrivateScope, Public, HideBySig
    FirstDerivativeAt(Int32): PrivateScope, Public, HideBySig
    SetFirstDerivativeAt(Int32, Vector3d): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.PointEntity2d: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Entity2d
  Properties:
    Autodesk.AutoCAD.Geometry.Point2d Point 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_Point(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.Geometry.EllipticalArc2d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Curve2d
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2d, Autodesk.AutoCAD.Geometry.Vector2d, Autodesk.AutoCAD.Geometry.Vector2d, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2d, Autodesk.AutoCAD.Geometry.Vector2d, Autodesk.AutoCAD.Geometry.Vector2d, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.CircularArc2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsClockWise 'get ' : 
    Autodesk.AutoCAD.Geometry.Point2d EndPoint 'get ' : 
    Autodesk.AutoCAD.Geometry.Point2d StartPoint 'get ' : 
    Double EndAngle 'get ' : 
    Double StartAngle 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector2d MajorAxis 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector2d MinorAxis 'get ' : 
    Double MajorRadius 'get set' : 
    Double MinorRadius 'get set' : 
    Autodesk.AutoCAD.Geometry.Point2d Center 'get set' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    IntersectWith(LinearEntity2d): PrivateScope, Public, HideBySig
    IntersectWith(LinearEntity2d, Tolerance): PrivateScope, Public, HideBySig
    IsCircular(): PrivateScope, Public, HideBySig
    IsCircular(Tolerance): PrivateScope, Public, HideBySig
    IsInside(Point2d): PrivateScope, Public, HideBySig
    IsInside(Point2d, Tolerance): PrivateScope, Public, HideBySig
    get_Center(): PrivateScope, Public, HideBySig, SpecialName
    set_Center(Point2d): PrivateScope, Public, HideBySig, SpecialName
    get_MinorRadius(): PrivateScope, Public, HideBySig, SpecialName
    set_MinorRadius(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MajorRadius(): PrivateScope, Public, HideBySig, SpecialName
    set_MajorRadius(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MinorAxis(): PrivateScope, Public, HideBySig, SpecialName
    get_MajorAxis(): PrivateScope, Public, HideBySig, SpecialName
    get_StartAngle(): PrivateScope, Public, HideBySig, SpecialName
    get_EndAngle(): PrivateScope, Public, HideBySig, SpecialName
    get_StartPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_EndPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_IsClockWise(): PrivateScope, Public, HideBySig, SpecialName
    SetAxes(Vector2d, Vector2d): PrivateScope, Public, HideBySig
    SetAngles(Double, Double): PrivateScope, Public, HideBySig
    Set(CircularArc2d): PrivateScope, Public, HideBySig
    Set(Point2d, Vector2d, Vector2d, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    Set(Point2d, Vector2d, Vector2d, Double, Double): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.ExternalCurve2d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Curve2d
    Void .ctor(IntPtr, Autodesk.AutoCAD.Geometry.ExternalEntityKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.NurbCurve2d NurbCurve 'get ' : 
    Boolean IsOwnerOfCurve 'get ' : 
    Autodesk.AutoCAD.Geometry.ExternalEntityKind ExternalCurveKind 'get ' : 
    IntPtr ExternalCurve 'get ' : 
    Boolean IsDefined 'get ' : 
    Boolean IsNurbCurve 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_IsNurbCurve(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDefined(): PrivateScope, Public, HideBySig, SpecialName
    get_ExternalCurve(): PrivateScope, Public, HideBySig, SpecialName
    get_ExternalCurveKind(): PrivateScope, Public, HideBySig, SpecialName
    get_IsOwnerOfCurve(): PrivateScope, Public, HideBySig, SpecialName
    get_NurbCurve(): PrivateScope, Public, HideBySig, SpecialName
    Set(IntPtr, ExternalEntityKind): PrivateScope, Public, HideBySig
    SetToOwnCurve(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.NurbCurve2d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.SplineEntity2d
    Void .ctor(Autodesk.AutoCAD.Geometry.LineSegment2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.EllipticalArc2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2dCollection, Autodesk.AutoCAD.Geometry.Vector2dCollection, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2dCollection, Autodesk.AutoCAD.Geometry.Vector2dCollection, Autodesk.AutoCAD.Geometry.Tolerance, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2dCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2dCollection, Autodesk.AutoCAD.Geometry.Tolerance): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2dCollection, Autodesk.AutoCAD.Geometry.Vector2d, Autodesk.AutoCAD.Geometry.Vector2d, Boolean, Boolean, Autodesk.AutoCAD.Geometry.KnotParameterizationEnum): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2dCollection, Autodesk.AutoCAD.Geometry.Vector2d, Autodesk.AutoCAD.Geometry.Vector2d, Boolean, Boolean, Autodesk.AutoCAD.Geometry.KnotParameterizationEnum, Autodesk.AutoCAD.Geometry.Tolerance): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2dCollection, Autodesk.AutoCAD.Geometry.Vector2d, Autodesk.AutoCAD.Geometry.Vector2d, Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2dCollection, Autodesk.AutoCAD.Geometry.Vector2d, Autodesk.AutoCAD.Geometry.Vector2d, Boolean, Boolean, Autodesk.AutoCAD.Geometry.Tolerance): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Autodesk.AutoCAD.Geometry.PolylineCurve2d, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Autodesk.AutoCAD.Geometry.KnotCollection, Autodesk.AutoCAD.Geometry.Point2dCollection, Autodesk.AutoCAD.Geometry.DoubleCollection, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Autodesk.AutoCAD.Geometry.KnotCollection, Autodesk.AutoCAD.Geometry.Point2dCollection, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.NurbCurve2dData DefinitionData 'get ' : 
    Autodesk.AutoCAD.Geometry.NurbCurve2dFitData FitData 'get ' : 
    Boolean EvalMode 'get ' : 
    Autodesk.AutoCAD.Geometry.KnotParameterizationEnum FitKnotParameterization 'get set' : 
    Int32 NumWeights 'get ' : 
    Autodesk.AutoCAD.Geometry.Tolerance FitTolerance 'get set' : 
    Int32 NumFitPoints 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_NumFitPoints(): PrivateScope, Public, HideBySig, SpecialName
    get_FitTolerance(): PrivateScope, Public, HideBySig, SpecialName
    set_FitTolerance(Tolerance): PrivateScope, Public, HideBySig, SpecialName
    GetFitTangents(): PrivateScope, Public, HideBySig
    get_NumWeights(): PrivateScope, Public, HideBySig, SpecialName
    get_FitKnotParameterization(): PrivateScope, Public, HideBySig, SpecialName
    set_FitKnotParameterization(KnotParameterizationEnum): PrivateScope, Public, HideBySig, SpecialName
    get_EvalMode(): PrivateScope, Public, HideBySig, SpecialName
    GetFitPointAt(Int32): PrivateScope, Public, HideBySig
    GetWeightAt(Int32): PrivateScope, Public, HideBySig
    GetParametersOfC1Discontinuity(): PrivateScope, Public, HideBySig
    GetParametersOfC1Discontinuity(Tolerance): PrivateScope, Public, HideBySig
    GetParametersOfG1Discontinuity(): PrivateScope, Public, HideBySig
    GetParametersOfG1Discontinuity(Tolerance): PrivateScope, Public, HideBySig
    SetFitPointAt(Int32, Point2d): PrivateScope, Public, HideBySig
    AddFitPointAt(Int32, Point2d): PrivateScope, Public, HideBySig
    DeleteFitPointAt(Int32): PrivateScope, Public, HideBySig
    get_FitData(): PrivateScope, Public, HideBySig, SpecialName
    get_DefinitionData(): PrivateScope, Public, HideBySig, SpecialName
    SetFitTangents(Vector2d, Vector2d): PrivateScope, Public, HideBySig
    SetFitData(Int32, Point2dCollection): PrivateScope, Public, HideBySig
    SetFitData(Int32, Point2dCollection, Tolerance): PrivateScope, Public, HideBySig
    SetFitData(KnotCollection, Point2dCollection, Vector2d, Vector2d, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetFitData(KnotCollection, Point2dCollection, Vector2d, Vector2d, Tolerance, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetFitData(Point2dCollection, Vector2d, Vector2d, KnotParameterizationEnum, Tolerance): PrivateScope, Public, HideBySig
    SetFitData(Point2dCollection, Vector2d, Vector2d): PrivateScope, Public, HideBySig
    SetFitData(Point2dCollection, Vector2d, Vector2d, Tolerance): PrivateScope, Public, HideBySig
    PurgeFitData(): PrivateScope, Public, HideBySig
    AddKnot(Double): PrivateScope, Public, HideBySig
    InsertKnot(Double): PrivateScope, Public, HideBySig
    SetWeightAt(Int32, Double): PrivateScope, Public, HideBySig
    SetEvaluateMode(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    JoinWith(NurbCurve2d): PrivateScope, Public, HideBySig
    HardTrimByParams(Double, Double): PrivateScope, Public, HideBySig
    MakeRational(Double): PrivateScope, Public, HideBySig
    MakeClosed(): PrivateScope, Public, HideBySig
    MakePeriodic(): PrivateScope, Public, HideBySig
    MakeNonPeriodic(): PrivateScope, Public, HideBySig
    MakeOpen(): PrivateScope, Public, HideBySig
    ElevateDegree(Int32): PrivateScope, Public, HideBySig
    AddControlPointAt(Double, Point2d, Double): PrivateScope, Public, HideBySig
    DeleteControlPointAt(Int32): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.OffsetCurve2d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Curve2d
    Void .ctor(Autodesk.AutoCAD.Geometry.Curve2d, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Matrix2d Transformation 'get ' : 
    Boolean ParameterDirection 'get ' : 
    Double OffsetDistance 'get set' : 
    Autodesk.AutoCAD.Geometry.Curve2d Curve 'get set' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_Curve(): PrivateScope, Public, HideBySig, SpecialName
    set_Curve(Curve2d): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetDistance(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetDistance(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ParameterDirection(): PrivateScope, Public, HideBySig, SpecialName
    get_Transformation(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.Geometry.PointEntity3d: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Entity3d
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    GetPoint(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.OffsetCurve3d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Curve3d
    Void .ctor(Autodesk.AutoCAD.Geometry.Curve3d, Autodesk.AutoCAD.Geometry.Vector3d, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Matrix3d Transformation 'get ' : 
    Boolean ParameterDirection 'get ' : 
    Double OffsetDistance 'get set' : 
    Autodesk.AutoCAD.Geometry.Vector3d Normal 'get set' : 
    Autodesk.AutoCAD.Geometry.Curve3d Curve 'get set' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_Curve(): PrivateScope, Public, HideBySig, SpecialName
    set_Curve(Curve3d): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    set_Normal(Vector3d): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetDistance(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetDistance(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ParameterDirection(): PrivateScope, Public, HideBySig, SpecialName
    get_Transformation(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.Geometry.ExternalCurve3d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Curve3d
  Properties:
    Autodesk.AutoCAD.Geometry.ExternalEntityKind ExternalCurveKind 'get ' : 
    Autodesk.AutoCAD.Geometry.Curve3d NativeCurve 'get ' : 
    Boolean IsNativeCurve 'get ' : 
    Boolean IsDefined 'get ' : 
    Boolean IsNurbCurve 'get ' : 
    Boolean IsEllipticalArc 'get ' : 
    Boolean IsCircularArc 'get ' : 
    Boolean IsLineSegment 'get ' : 
    Boolean IsRay 'get ' : 
    Boolean IsLine 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_IsLine(): PrivateScope, Public, HideBySig, SpecialName
    get_IsRay(): PrivateScope, Public, HideBySig, SpecialName
    get_IsLineSegment(): PrivateScope, Public, HideBySig, SpecialName
    get_IsCircularArc(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEllipticalArc(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNurbCurve(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDefined(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNativeCurve(): PrivateScope, Public, HideBySig, SpecialName
    get_NativeCurve(): PrivateScope, Public, HideBySig, SpecialName
    get_ExternalCurveKind(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.Geometry.Position3d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.PointEntity3d
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    Set(Double, Double, Double): PrivateScope, Public, HideBySig
    Set(Point3d): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.Geometry.CurveBoundaryData: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Boolean Orientation2d 'get ' : 
    Boolean Orientation3d 'get ' : 
  Methods:
    GetCurve3ds(): PrivateScope, Public, HideBySig
    GetCurve2ds(): PrivateScope, Public, HideBySig
    get_Orientation3d(): PrivateScope, Public, HideBySig, SpecialName
    get_Orientation2d(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    IsEqualTo(CurveBoundaryData): PrivateScope, Public, HideBySig
    op_Inequality(CurveBoundaryData, CurveBoundaryData): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(CurveBoundaryData, CurveBoundaryData): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.Geometry.CurveBoundary: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(Int32, Autodesk.AutoCAD.Geometry.Curve3d[], Autodesk.AutoCAD.Geometry.Curve2d[], Boolean, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
  Properties:
    Boolean IsOwnerOfCurves 'get ' : 
    Autodesk.AutoCAD.Geometry.CurveBoundaryData Contour 'get set' : 
    Int32 NumElements 'get ' : 
    Autodesk.AutoCAD.Geometry.Curve2d DegenerateCurve 'get ' : 
    Autodesk.AutoCAD.Geometry.Position3d DegeneratePosition 'get ' : 
    Boolean IsDegenerate 'get ' : 
  Methods:
    Clone(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_IsDegenerate(): PrivateScope, Public, HideBySig, SpecialName
    get_DegeneratePosition(): PrivateScope, Public, HideBySig, SpecialName
    get_DegenerateCurve(): PrivateScope, Public, HideBySig, SpecialName
    get_NumElements(): PrivateScope, Public, HideBySig, SpecialName
    get_Contour(): PrivateScope, Public, HideBySig, SpecialName
    set_Contour(CurveBoundaryData): PrivateScope, Public, HideBySig, SpecialName
    Set(Int32, Entity3d[], Curve2d[], Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_IsOwnerOfCurves(): PrivateScope, Public, HideBySig, SpecialName
    SetToOwnCurves(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.CurveCurveIntersector2d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Entity2d
    Void .ctor(Autodesk.AutoCAD.Geometry.Curve2d, Autodesk.AutoCAD.Geometry.Curve2d, Autodesk.AutoCAD.Geometry.Interval, Autodesk.AutoCAD.Geometry.Interval): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Curve2d, Autodesk.AutoCAD.Geometry.Curve2d, Autodesk.AutoCAD.Geometry.Interval, Autodesk.AutoCAD.Geometry.Interval, Autodesk.AutoCAD.Geometry.Tolerance): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Curve2d, Autodesk.AutoCAD.Geometry.Curve2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Curve2d, Autodesk.AutoCAD.Geometry.Curve2d, Autodesk.AutoCAD.Geometry.Tolerance): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean OverlapDirection 'get ' : 
    Int32 OverlapCount 'get ' : 
    Int32 NumberOfIntersectionPoints 'get ' : 
    Autodesk.AutoCAD.Geometry.Tolerance Tolerance 'get ' : 
    Autodesk.AutoCAD.Geometry.Curve2d Curve2 'get ' : 
    Autodesk.AutoCAD.Geometry.Curve2d Curve1 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_Curve1(): PrivateScope, Public, HideBySig, SpecialName
    get_Curve2(): PrivateScope, Public, HideBySig, SpecialName
    GetIntersectionRanges(): PrivateScope, Public, HideBySig
    get_Tolerance(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfIntersectionPoints(): PrivateScope, Public, HideBySig, SpecialName
    GetIntersectionPoint(Int32): PrivateScope, Public, HideBySig
    GetIntersectionParameters(Int32): PrivateScope, Public, HideBySig
    GetPointOnCurve1(Int32): PrivateScope, Public, HideBySig
    GetPointOnCurve2(Int32): PrivateScope, Public, HideBySig
    IsTangential(Int32): PrivateScope, Public, HideBySig
    IsTransversal(Int32): PrivateScope, Public, HideBySig
    GetIntersectionPointTolerance(Int32): PrivateScope, Public, HideBySig
    get_OverlapCount(): PrivateScope, Public, HideBySig, SpecialName
    get_OverlapDirection(): PrivateScope, Public, HideBySig, SpecialName
    GetOverlapRanges(Int32): PrivateScope, Public, HideBySig
    ChangeCurveOrder(): PrivateScope, Public, HideBySig
    OrderWithRegardsTo1(): PrivateScope, Public, HideBySig
    OrderWithRegardsTo2(): PrivateScope, Public, HideBySig
    Set(Curve2d, Curve2d, Interval, Interval): PrivateScope, Public, HideBySig
    Set(Curve2d, Curve2d, Interval, Interval, Tolerance): PrivateScope, Public, HideBySig
    Set(Curve2d, Curve2d): PrivateScope, Public, HideBySig
    Set(Curve2d, Curve2d, Tolerance): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.CurveCurveIntersector3d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Entity3d
    Void .ctor(Autodesk.AutoCAD.Geometry.Curve3d, Autodesk.AutoCAD.Geometry.Curve3d, Autodesk.AutoCAD.Geometry.Interval, Autodesk.AutoCAD.Geometry.Interval, Autodesk.AutoCAD.Geometry.Vector3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Curve3d, Autodesk.AutoCAD.Geometry.Curve3d, Autodesk.AutoCAD.Geometry.Interval, Autodesk.AutoCAD.Geometry.Interval, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Tolerance): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Curve3d, Autodesk.AutoCAD.Geometry.Curve3d, Autodesk.AutoCAD.Geometry.Vector3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Curve3d, Autodesk.AutoCAD.Geometry.Curve3d, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Tolerance): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 NumberOfIntersectionPoints 'get ' : 
    Autodesk.AutoCAD.Geometry.Tolerance Tolerance 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d PlaneNormal 'get ' : 
    Autodesk.AutoCAD.Geometry.Curve3d Curve2 'get ' : 
    Autodesk.AutoCAD.Geometry.Curve3d Curve1 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_Curve1(): PrivateScope, Public, HideBySig, SpecialName
    get_Curve2(): PrivateScope, Public, HideBySig, SpecialName
    GetIntersectionRanges(): PrivateScope, Public, HideBySig
    get_PlaneNormal(): PrivateScope, Public, HideBySig, SpecialName
    get_Tolerance(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfIntersectionPoints(): PrivateScope, Public, HideBySig, SpecialName
    GetIntersectionPoint(Int32): PrivateScope, Public, HideBySig
    GetIntersectionParameters(Int32): PrivateScope, Public, HideBySig
    GetPointOnCurve1(Int32): PrivateScope, Public, HideBySig
    GetPointOnCurve2(Int32): PrivateScope, Public, HideBySig
    IsTangential(Int32): PrivateScope, Public, HideBySig
    IsTransversal(Int32): PrivateScope, Public, HideBySig
    GetIntersectionPointTolerance(Int32): PrivateScope, Public, HideBySig
    OverlapCount(): PrivateScope, Public, HideBySig
    OverlapDirection(): PrivateScope, Public, HideBySig
    GetOverlapRanges(Int32): PrivateScope, Public, HideBySig
    ChangeCurveOrder(): PrivateScope, Public, HideBySig
    OrderWithRegardsTo1(): PrivateScope, Public, HideBySig
    OrderWithRegardsTo2(): PrivateScope, Public, HideBySig
    Set(Curve3d, Curve3d, Interval, Interval, Vector3d): PrivateScope, Public, HideBySig
    Set(Curve3d, Curve3d, Interval, Interval, Vector3d, Tolerance): PrivateScope, Public, HideBySig
    Set(Curve3d, Curve3d, Vector3d): PrivateScope, Public, HideBySig
    Set(Curve3d, Curve3d, Vector3d, Tolerance): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.Cylinder: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Surface
    Void .ctor(Double, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Interval, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Vector3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Interval Height 'get set' : 
    Boolean IsOuterNormal 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d ReferenceAxis 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d AxisOfSymmetry 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d Origin 'get ' : 
    Double Radius 'get set' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_Radius(): PrivateScope, Public, HideBySig, SpecialName
    set_Radius(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    get_AxisOfSymmetry(): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceAxis(): PrivateScope, Public, HideBySig, SpecialName
    get_IsOuterNormal(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Interval): PrivateScope, Public, HideBySig, SpecialName
    GetAngles(): PrivateScope, Public, HideBySig
    GetHeightAt(Double): PrivateScope, Public, HideBySig
    IsClosed(): PrivateScope, Public, HideBySig
    IsClosed(Tolerance): PrivateScope, Public, HideBySig
    SetAngles(Double, Double): PrivateScope, Public, HideBySig
    Set(Double, Point3d, Vector3d, Vector3d, Interval, Double, Double): PrivateScope, Public, HideBySig
    Set(Double, Point3d, Vector3d): PrivateScope, Public, HideBySig
    IntersectWith(LinearEntity3d): PrivateScope, Public, HideBySig
    IntersectWith(LinearEntity3d, Tolerance): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.ExternalSurface: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Surface
    Void .ctor(IntPtr, Autodesk.AutoCAD.Geometry.ExternalEntityKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsOwnerOfSurface 'get ' : 
    Autodesk.AutoCAD.Geometry.Surface nativeSurface 'get ' : 
    Boolean IsNativeSurface 'get ' : 
    Boolean IsDefined 'get ' : 
    Boolean IsNurbSurface 'get ' : 
    Boolean IsTorus 'get ' : 
    Boolean IsCone 'get ' : 
    Boolean IsCylinder 'get ' : 
    Boolean IsSphere 'get ' : 
    Boolean IsPlane 'get ' : 
    Autodesk.AutoCAD.Geometry.ExternalEntityKind ExternalSurfaceKind 'get ' : 
    IntPtr ExternalSurfaceDefiniton 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_ExternalSurfaceDefiniton(): PrivateScope, Public, HideBySig, SpecialName
    get_ExternalSurfaceKind(): PrivateScope, Public, HideBySig, SpecialName
    get_IsPlane(): PrivateScope, Public, HideBySig, SpecialName
    get_IsSphere(): PrivateScope, Public, HideBySig, SpecialName
    get_IsCylinder(): PrivateScope, Public, HideBySig, SpecialName
    get_IsCone(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTorus(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNurbSurface(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDefined(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNativeSurface(): PrivateScope, Public, HideBySig, SpecialName
    get_nativeSurface(): PrivateScope, Public, HideBySig, SpecialName
    Set(IntPtr, ExternalEntityKind): PrivateScope, Public, HideBySig
    get_IsOwnerOfSurface(): PrivateScope, Public, HideBySig, SpecialName
    SetToOwnSurface(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.ExternalBoundedSurface: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Surface
    Void .ctor(IntPtr, Autodesk.AutoCAD.Geometry.ExternalEntityKind): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsOwnerOfSurface 'get ' : 
    Int32 NumContours 'get ' : 
    Boolean IsExternalSurface 'get ' : 
    Boolean IsNurbs 'get ' : 
    Boolean IsTorus 'get ' : 
    Boolean IsCone 'get ' : 
    Boolean IsCylinder 'get ' : 
    Boolean IsSphere 'get ' : 
    Boolean IsPlane 'get ' : 
    Autodesk.AutoCAD.Geometry.ExternalSurface ExternalBaseSurface 'get ' : 
    Autodesk.AutoCAD.Geometry.Surface BaseSurface 'get ' : 
    IntPtr ExternalSurfaceDefinition 'get ' : 
    Boolean IsDefined 'get ' : 
    Autodesk.AutoCAD.Geometry.ExternalEntityKind ExternalSurfaceKind 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_ExternalSurfaceKind(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDefined(): PrivateScope, Public, HideBySig, SpecialName
    get_ExternalSurfaceDefinition(): PrivateScope, Public, HideBySig, SpecialName
    get_BaseSurface(): PrivateScope, Public, HideBySig, SpecialName
    get_ExternalBaseSurface(): PrivateScope, Public, HideBySig, SpecialName
    get_IsPlane(): PrivateScope, Public, HideBySig, SpecialName
    get_IsSphere(): PrivateScope, Public, HideBySig, SpecialName
    get_IsCylinder(): PrivateScope, Public, HideBySig, SpecialName
    get_IsCone(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTorus(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNurbs(): PrivateScope, Public, HideBySig, SpecialName
    get_IsExternalSurface(): PrivateScope, Public, HideBySig, SpecialName
    get_NumContours(): PrivateScope, Public, HideBySig, SpecialName
    GetContours(): PrivateScope, Public, HideBySig
    Set(IntPtr, ExternalEntityKind): PrivateScope, Public, HideBySig
    get_IsOwnerOfSurface(): PrivateScope, Public, HideBySig, SpecialName
    SetToOwnSurface(): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.Geometry.NurbCurve2dFitData: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Autodesk.AutoCAD.Geometry.KnotParameterizationEnum KnotParam 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector2d EndTangent 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector2d StartTangent 'get ' : 
    Boolean TangentsExist 'get ' : 
    Autodesk.AutoCAD.Geometry.Tolerance FitTolerance 'get ' : 
    Int32 Degree 'get ' : 
    Autodesk.AutoCAD.Geometry.Point2dCollection FitPoints 'get ' : 
  Methods:
    get_FitPoints(): PrivateScope, Public, HideBySig, SpecialName
    get_Degree(): PrivateScope, Public, HideBySig, SpecialName
    get_FitTolerance(): PrivateScope, Public, HideBySig, SpecialName
    get_TangentsExist(): PrivateScope, Public, HideBySig, SpecialName
    get_StartTangent(): PrivateScope, Public, HideBySig, SpecialName
    get_EndTangent(): PrivateScope, Public, HideBySig, SpecialName
    get_KnotParam(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    IsEqualTo(NurbCurve2dFitData): PrivateScope, Public, HideBySig
    op_Inequality(NurbCurve2dFitData, NurbCurve2dFitData): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(NurbCurve2dFitData, NurbCurve2dFitData): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Struct Autodesk.AutoCAD.Geometry.NurbCurve2dData: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Autodesk.AutoCAD.Geometry.DoubleCollection Weights 'get ' : 
    Autodesk.AutoCAD.Geometry.KnotCollection Knots 'get ' : 
    Autodesk.AutoCAD.Geometry.Point2dCollection ControlPoints 'get ' : 
    Boolean Periodic 'get ' : 
    Boolean Rational 'get ' : 
    Int32 Degree 'get ' : 
  Methods:
    get_Degree(): PrivateScope, Public, HideBySig, SpecialName
    get_Rational(): PrivateScope, Public, HideBySig, SpecialName
    get_Periodic(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlPoints(): PrivateScope, Public, HideBySig, SpecialName
    get_Knots(): PrivateScope, Public, HideBySig, SpecialName
    get_Weights(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    IsEqualTo(NurbCurve2dData): PrivateScope, Public, HideBySig
    op_Inequality(NurbCurve2dData, NurbCurve2dData): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(NurbCurve2dData, NurbCurve2dData): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.Geometry.PolylineCurve2d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.SplineEntity2d
    Void .ctor(Autodesk.AutoCAD.Geometry.Curve2d, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.KnotCollection, Autodesk.AutoCAD.Geometry.Point2dCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2dCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 NumberOfFitPoints 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_NumberOfFitPoints(): PrivateScope, Public, HideBySig, SpecialName
    FitPointAt(Int32): PrivateScope, Public, HideBySig
    SetFitPointAt(Int32, Point2d): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.Ray2d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.LinearEntity2d
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2d, Autodesk.AutoCAD.Geometry.Point2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2d, Autodesk.AutoCAD.Geometry.Vector2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    Set(Point2d, Point2d): PrivateScope, Public, HideBySig
    Set(Point2d, Vector2d): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.Ray3d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.LinearEntity3d
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Point3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Vector3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    Set(Point3d, Point3d): PrivateScope, Public, HideBySig
    Set(Point3d, Vector3d): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.Geometry.NurbSurfaceDefinition: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Int32 NumberOfControlPointsInV 'get ' : 
    Int32 NumberOfControlPointsInU 'get ' : 
    Int32 PropertiesInV 'get ' : 
    Int32 PropertiesInU 'get ' : 
    Int32 DegreeInV 'get ' : 
    Int32 DegreeInU 'get ' : 
    Autodesk.AutoCAD.Geometry.KnotCollection VKnots 'get ' : 
    Autodesk.AutoCAD.Geometry.KnotCollection UKnots 'get ' : 
    Autodesk.AutoCAD.Geometry.DoubleCollection Weights 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3dCollection ControlPoints 'get ' : 
  Methods:
    get_ControlPoints(): PrivateScope, Public, HideBySig, SpecialName
    get_Weights(): PrivateScope, Public, HideBySig, SpecialName
    get_UKnots(): PrivateScope, Public, HideBySig, SpecialName
    get_VKnots(): PrivateScope, Public, HideBySig, SpecialName
    get_DegreeInU(): PrivateScope, Public, HideBySig, SpecialName
    get_DegreeInV(): PrivateScope, Public, HideBySig, SpecialName
    get_PropertiesInU(): PrivateScope, Public, HideBySig, SpecialName
    get_PropertiesInV(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfControlPointsInU(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfControlPointsInV(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    IsEqualTo(NurbSurfaceDefinition): PrivateScope, Public, HideBySig
    op_Inequality(NurbSurfaceDefinition, NurbSurfaceDefinition): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(NurbSurfaceDefinition, NurbSurfaceDefinition): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.Geometry.NurbSurface: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Surface
    Void .ctor(Int32, Int32, Int32, Int32, Int32, Int32, Autodesk.AutoCAD.Geometry.Point3dCollection, Autodesk.AutoCAD.Geometry.DoubleCollection, Autodesk.AutoCAD.Geometry.KnotCollection, Autodesk.AutoCAD.Geometry.KnotCollection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Int32, Int32, Autodesk.AutoCAD.Geometry.Point3dCollection, Autodesk.AutoCAD.Geometry.DoubleCollection, Autodesk.AutoCAD.Geometry.KnotCollection, Autodesk.AutoCAD.Geometry.KnotCollection, Autodesk.AutoCAD.Geometry.Tolerance): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.KnotCollection VKnots 'get ' : 
    Int32 NumKnotsInV 'get ' : 
    Autodesk.AutoCAD.Geometry.KnotCollection UKnots 'get ' : 
    Int32 NumKnotsInU 'get ' : 
    Double PeriodicInV 'get ' : 
    Double PeriodicInU 'get ' : 
    Boolean IsPeriodicInV 'get ' : 
    Boolean IsPeriodicInU 'get ' : 
    Autodesk.AutoCAD.Geometry.DoubleCollection Weights 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3dCollection ControlPoints 'get ' : 
    Int32 NumControlPointsInV 'get ' : 
    Int32 DegreeInV 'get ' : 
    Int32 NumControlPointsInU 'get ' : 
    Int32 DegreeInU 'get ' : 
    Int32 SingularityInV 'get ' : 
    Int32 SingularityInU 'get ' : 
    Boolean IsRationalInV 'get ' : 
    Boolean IsRationalInU 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_IsRationalInU(): PrivateScope, Public, HideBySig, SpecialName
    get_IsRationalInV(): PrivateScope, Public, HideBySig, SpecialName
    get_SingularityInU(): PrivateScope, Public, HideBySig, SpecialName
    get_SingularityInV(): PrivateScope, Public, HideBySig, SpecialName
    get_DegreeInU(): PrivateScope, Public, HideBySig, SpecialName
    get_NumControlPointsInU(): PrivateScope, Public, HideBySig, SpecialName
    get_DegreeInV(): PrivateScope, Public, HideBySig, SpecialName
    get_NumControlPointsInV(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlPoints(): PrivateScope, Public, HideBySig, SpecialName
    get_Weights(): PrivateScope, Public, HideBySig, SpecialName
    get_IsPeriodicInU(): PrivateScope, Public, HideBySig, SpecialName
    get_IsPeriodicInV(): PrivateScope, Public, HideBySig, SpecialName
    get_PeriodicInU(): PrivateScope, Public, HideBySig, SpecialName
    get_PeriodicInV(): PrivateScope, Public, HideBySig, SpecialName
    get_NumKnotsInU(): PrivateScope, Public, HideBySig, SpecialName
    get_UKnots(): PrivateScope, Public, HideBySig, SpecialName
    get_NumKnotsInV(): PrivateScope, Public, HideBySig, SpecialName
    get_VKnots(): PrivateScope, Public, HideBySig, SpecialName
    GetDefinition(): PrivateScope, Public, HideBySig
    Set(Int32, Int32, Int32, Int32, Int32, Int32, Point3dCollection, DoubleCollection, KnotCollection, KnotCollection): PrivateScope, Public, HideBySig
    Set(Int32, Int32, Int32, Int32, Int32, Int32, Point3dCollection, DoubleCollection, KnotCollection, KnotCollection, Tolerance): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.OffsetSurface: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Surface
    Void .ctor(Autodesk.AutoCAD.Geometry.Surface, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double OffsetDist 'get ' : 
    Autodesk.AutoCAD.Geometry.Surface ConstructionSurface 'get ' : 
    Autodesk.AutoCAD.Geometry.Surface OriginalSurface 'get ' : 
    Boolean IsTorus 'get ' : 
    Boolean IsCone 'get ' : 
    Boolean IsCylinder 'get ' : 
    Boolean IsSphere 'get ' : 
    Boolean IsBoundedPlane 'get ' : 
    Boolean IsPlane 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_IsPlane(): PrivateScope, Public, HideBySig, SpecialName
    get_IsBoundedPlane(): PrivateScope, Public, HideBySig, SpecialName
    get_IsSphere(): PrivateScope, Public, HideBySig, SpecialName
    get_IsCylinder(): PrivateScope, Public, HideBySig, SpecialName
    get_IsCone(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTorus(): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalSurface(): PrivateScope, Public, HideBySig, SpecialName
    get_ConstructionSurface(): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetDist(): PrivateScope, Public, HideBySig, SpecialName
    Set(Surface, Double): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.Position2d: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.PointEntity2d
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Point2d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    Set(Double, Double): PrivateScope, Public, HideBySig
    Set(Point2d): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.Sphere: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Surface
    Void .ctor(Double, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Vector3d, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Autodesk.AutoCAD.Geometry.Point3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsOuterNormal 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d SouthPole 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d NorthPole 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d ReferenceAxis 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d NorthAxis 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d Center 'get ' : 
    Double Radius 'get set' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_Radius(): PrivateScope, Public, HideBySig, SpecialName
    set_Radius(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Center(): PrivateScope, Public, HideBySig, SpecialName
    GetAnglesInU(): PrivateScope, Public, HideBySig
    GetAnglesInV(): PrivateScope, Public, HideBySig
    get_NorthAxis(): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceAxis(): PrivateScope, Public, HideBySig, SpecialName
    get_NorthPole(): PrivateScope, Public, HideBySig, SpecialName
    get_SouthPole(): PrivateScope, Public, HideBySig, SpecialName
    get_IsOuterNormal(): PrivateScope, Public, HideBySig, SpecialName
    IsClosed(): PrivateScope, Public, HideBySig
    IsClosed(Tolerance): PrivateScope, Public, HideBySig
    SetAnglesInU(Double, Double): PrivateScope, Public, HideBySig
    SetAnglesInV(Double, Double): PrivateScope, Public, HideBySig
    Set(Double, Point3d, Vector3d, Vector3d, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    Set(Double, Point3d): PrivateScope, Public, HideBySig
    IntersectWith(LinearEntity3d): PrivateScope, Public, HideBySig
    IntersectWith(LinearEntity3d, Tolerance): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.Torus: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Surface
    Void .ctor(Double, Double, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Vector3d, Autodesk.AutoCAD.Geometry.Vector3d, Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Autodesk.AutoCAD.Geometry.Point3d, Autodesk.AutoCAD.Geometry.Vector3d): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsHollow 'get ' : 
    Boolean IsDegenerate 'get ' : 
    Boolean IsDoughnut 'get ' : 
    Boolean IsVortex 'get ' : 
    Boolean IsApple 'get ' : 
    Boolean IsLemon 'get ' : 
    Boolean IsOuterNormal 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d ReferenceAxis 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d AxisOfSymmetry 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d Center 'get ' : 
    Double MinorRadius 'get set' : 
    Double MajorRadius 'get set' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_MajorRadius(): PrivateScope, Public, HideBySig, SpecialName
    set_MajorRadius(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MinorRadius(): PrivateScope, Public, HideBySig, SpecialName
    set_MinorRadius(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Center(): PrivateScope, Public, HideBySig, SpecialName
    get_AxisOfSymmetry(): PrivateScope, Public, HideBySig, SpecialName
    get_ReferenceAxis(): PrivateScope, Public, HideBySig, SpecialName
    get_IsOuterNormal(): PrivateScope, Public, HideBySig, SpecialName
    get_IsLemon(): PrivateScope, Public, HideBySig, SpecialName
    get_IsApple(): PrivateScope, Public, HideBySig, SpecialName
    get_IsVortex(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDoughnut(): PrivateScope, Public, HideBySig, SpecialName
    get_IsDegenerate(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHollow(): PrivateScope, Public, HideBySig, SpecialName
    GetAnglesInU(): PrivateScope, Public, HideBySig
    GetAnglesInV(): PrivateScope, Public, HideBySig
    SetAnglesInU(Double, Double): PrivateScope, Public, HideBySig
    SetAnglesInV(Double, Double): PrivateScope, Public, HideBySig
    Set(Double, Double, Point3d, Vector3d, Vector3d, Double, Double, Double, Double): PrivateScope, Public, HideBySig
    Set(Double, Double, Point3d, Vector3d): PrivateScope, Public, HideBySig
    IntersectWith(LinearEntity3d): PrivateScope, Public, HideBySig
    IntersectWith(LinearEntity3d, Tolerance): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfigurations: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Int32 Dimension 'get ' : 
    Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorType IntersectionType 'get ' : 
    Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfiguration Surface2Right 'get ' : 
    Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfiguration Surface1Right 'get ' : 
    Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfiguration Surface2Left 'get ' : 
    Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfiguration Surface1Left 'get ' : 
  Methods:
    get_Surface1Left(): PrivateScope, Public, HideBySig, SpecialName
    get_Surface2Left(): PrivateScope, Public, HideBySig, SpecialName
    get_Surface1Right(): PrivateScope, Public, HideBySig, SpecialName
    get_Surface2Right(): PrivateScope, Public, HideBySig, SpecialName
    get_IntersectionType(): PrivateScope, Public, HideBySig, SpecialName
    get_Dimension(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    IsEqualTo(SurfaceSurfaceIntersectorConfigurations): PrivateScope, Public, HideBySig
    op_Inequality(SurfaceSurfaceIntersectorConfigurations, SurfaceSurfaceIntersectorConfigurations): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(SurfaceSurfaceIntersectorConfigurations, SurfaceSurfaceIntersectorConfigurations): PrivateScope, Public, Static, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Final, Virtual, HideBySig
Struct Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfiguration: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfiguration Unknown = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfiguration Out = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfiguration In = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorConfiguration Coincident = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorType Transverse = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorType Tangent = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersectorType AntiTangent = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.Geometry.SurfaceSurfaceIntersector: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Geometry.Entity3d
    Void .ctor(Autodesk.AutoCAD.Geometry.Surface, Autodesk.AutoCAD.Geometry.Surface): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.Geometry.Surface, Autodesk.AutoCAD.Geometry.Surface, Autodesk.AutoCAD.Geometry.Tolerance): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Tolerance Tolerance 'get ' : 
    Int32 NumResults 'get ' : 
    Autodesk.AutoCAD.Geometry.Surface Surface2 'get ' : 
    Autodesk.AutoCAD.Geometry.Surface Surface1 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_Surface1(): PrivateScope, Public, HideBySig, SpecialName
    get_Surface2(): PrivateScope, Public, HideBySig, SpecialName
    get_NumResults(): PrivateScope, Public, HideBySig, SpecialName
    get_Tolerance(): PrivateScope, Public, HideBySig, SpecialName
    IntersectCurve(Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    IntersectParameterCurve(Int32, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    IntersectPoint(Int32): PrivateScope, Public, HideBySig
    GetIntersectPointParameters(Int32): PrivateScope, Public, HideBySig
    GetIntersectionConfigurations(Int32): PrivateScope, Public, HideBySig
    GetDimension(Int32): PrivateScope, Public, HideBySig
    GetType(Int32): PrivateScope, Public, HideBySig
    Set(Surface, Surface): PrivateScope, Public, HideBySig
    Set(Surface, Surface, Tolerance): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.Geometry.Curve3dCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Autodesk.AutoCAD.Geometry.Curve3d Item [Int32] 'get set' : 
    Boolean IsReadOnly 'get ' : 
    Boolean IsFixedSize 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsFixedSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Curve3d): PrivateScope, Public, HideBySig, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    RemoveAt(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(Curve3d[], Int32): PrivateScope, Public, HideBySig
    Insert(Int32, Curve3d): PrivateScope, Public, HideBySig
    Remove(Curve3d): PrivateScope, Public, HideBySig
    Contains(Curve3d): PrivateScope, Public, HideBySig
    IndexOf(Curve3d): PrivateScope, Public, HideBySig
    Add(Curve3d): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.GraphicsInterface.TransientManager: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.TransientManager CurrentTransientManager 'get set' : 
  Methods:
    get_CurrentTransientManager(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_CurrentTransientManager(TransientManager): PrivateScope, Public, Static, HideBySig, SpecialName
    AddTransient(Drawable, TransientDrawingMode, Int32, IntegerCollection): PrivateScope, Public, HideBySig
    EraseTransient(Drawable, IntegerCollection): PrivateScope, Public, HideBySig
    EraseTransients(TransientDrawingMode, Int32, IntegerCollection): PrivateScope, Public, HideBySig
    UpdateTransient(Drawable, IntegerCollection): PrivateScope, Public, HideBySig
    AddChildTransient(Drawable, Drawable): PrivateScope, Public, HideBySig
    EraseChildTransient(Drawable, Drawable): PrivateScope, Public, HideBySig
    UpdateChildTransient(Drawable, Drawable): PrivateScope, Public, HideBySig
    GetFreeSubDrawingMode(TransientDrawingMode, IntegerCollection, Int32&(In, Out)): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.GraphicsInterface.TransientDrawingMode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsInterface.TransientDrawingMode Main = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.TransientDrawingMode Sprite = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.TransientDrawingMode DirectShortTerm = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.TransientDrawingMode Highlight = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.TransientDrawingMode DirectTopmost = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.TransientDrawingMode Contrast = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsInterface.TransientDrawingMode Count = 6 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.RevolveOptionsCheckRevolveCurveOut: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Planar 'get ' : 
    Boolean EndPointsOnAxis 'get ' : 
    Boolean Closed 'get ' : 
  Methods:
    get_Closed(): PrivateScope, Public, HideBySig, SpecialName
    get_EndPointsOnAxis(): PrivateScope, Public, HideBySig, SpecialName
    get_Planar(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.RevolveOptionsBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.RevolveOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean CloseToAxis 'get set' : 
    Double TwistAngle 'get set' : 
    Double DraftAngle 'get set' : 
  Methods:
    get_DraftAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_DraftAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TwistAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_TwistAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_CloseToAxis(): PrivateScope, Public, HideBySig, SpecialName
    set_CloseToAxis(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    ToRevolveOptions(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.SweepOptionsCheckSweepCurveOut: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double ApproximateArcLength 'get ' : 
    Boolean Closed 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d Vector 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d Point 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Planarity Planarity 'get ' : 
  Methods:
    get_Planarity(): PrivateScope, Public, HideBySig, SpecialName
    get_Point(): PrivateScope, Public, HideBySig, SpecialName
    get_Vector(): PrivateScope, Public, HideBySig, SpecialName
    get_Closed(): PrivateScope, Public, HideBySig, SpecialName
    get_ApproximateArcLength(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.SweepOptionsAlignOption: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.SweepOptionsAlignOption NoAlignment = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SweepOptionsAlignOption AlignSweepEntityToPath = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SweepOptionsAlignOption TranslateSweepEntityToPath = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.SweepOptionsAlignOption TranslatePathToSweepEntity = 3 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.SweepOptionsBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.SweepOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.Geometry.Matrix3d PathEntityTransform 'get set' : 
    Autodesk.AutoCAD.Geometry.Matrix3d SweepEntityTransform 'get set' : 
    Boolean CheckIntersections 'get set' : 
    Boolean Bank 'get set' : 
    Autodesk.AutoCAD.Geometry.Point3d BasePoint 'get set' : 
    Boolean AlignStart 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.SweepOptionsAlignOption Align 'get set' : 
    Double AlignAngle 'get set' : 
    Double ScaleFactor 'get set' : 
    Double TwistAngle 'get set' : 
    Double EndDraftDist 'get set' : 
    Double StartDraftDist 'get set' : 
    Double DraftAngle 'get set' : 
  Methods:
    get_DraftAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_DraftAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_StartDraftDist(): PrivateScope, Public, HideBySig, SpecialName
    set_StartDraftDist(Double): PrivateScope, Public, HideBySig, SpecialName
    get_EndDraftDist(): PrivateScope, Public, HideBySig, SpecialName
    set_EndDraftDist(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TwistAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_TwistAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ScaleFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_ScaleFactor(Double): PrivateScope, Public, HideBySig, SpecialName
    get_AlignAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_AlignAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Align(): PrivateScope, Public, HideBySig, SpecialName
    set_Align(SweepOptionsAlignOption): PrivateScope, Public, HideBySig, SpecialName
    get_AlignStart(): PrivateScope, Public, HideBySig, SpecialName
    set_AlignStart(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_BasePoint(): PrivateScope, Public, HideBySig, SpecialName
    set_BasePoint(Point3d): PrivateScope, Public, HideBySig, SpecialName
    get_Bank(): PrivateScope, Public, HideBySig, SpecialName
    set_Bank(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_CheckIntersections(): PrivateScope, Public, HideBySig, SpecialName
    set_CheckIntersections(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SweepEntityTransform(): PrivateScope, Public, HideBySig, SpecialName
    set_SweepEntityTransform(Matrix3d): PrivateScope, Public, HideBySig, SpecialName
    get_PathEntityTransform(): PrivateScope, Public, HideBySig, SpecialName
    set_PathEntityTransform(Matrix3d): PrivateScope, Public, HideBySig, SpecialName
    SetSweepEntityTransform(Entity[], Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetPathEntityTransform(Entity, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    ToSweepOptions(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.LoftOptionsCheckCurvesOut: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean AllPlanar 'get ' : 
    Boolean AllClosed 'get ' : 
    Boolean AllOpen 'get ' : 
  Methods:
    get_AllOpen(): PrivateScope, Public, HideBySig, SpecialName
    get_AllClosed(): PrivateScope, Public, HideBySig, SpecialName
    get_AllPlanar(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.LoftOptionsNormalOption: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.LoftOptionsNormalOption NoNormal = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LoftOptionsNormalOption FirstNormal = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LoftOptionsNormalOption LastNormal = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LoftOptionsNormalOption EndsNormal = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LoftOptionsNormalOption AllNormal = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.LoftOptionsNormalOption UseDraftAngles = 5 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.LoftOptionsBuilder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.LoftOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.LoftOptionsNormalOption NormalOption 'get set' : 
    Boolean VirtualGuide 'get set' : 
    Boolean Ruled 'get set' : 
    Boolean Closed 'get set' : 
    Boolean Simplify 'get set' : 
    Boolean AlignDirection 'get set' : 
    Boolean NoTwist 'get set' : 
    Boolean ArcLengthParam 'get set' : 
    Double DraftEndMag 'get set' : 
    Double DraftStartMag 'get set' : 
    Double DraftEnd 'get set' : 
    Double DraftStart 'get set' : 
  Methods:
    get_DraftStart(): PrivateScope, Public, HideBySig, SpecialName
    set_DraftStart(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DraftEnd(): PrivateScope, Public, HideBySig, SpecialName
    set_DraftEnd(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DraftStartMag(): PrivateScope, Public, HideBySig, SpecialName
    set_DraftStartMag(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DraftEndMag(): PrivateScope, Public, HideBySig, SpecialName
    set_DraftEndMag(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ArcLengthParam(): PrivateScope, Public, HideBySig, SpecialName
    set_ArcLengthParam(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_NoTwist(): PrivateScope, Public, HideBySig, SpecialName
    set_NoTwist(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_AlignDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_AlignDirection(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Simplify(): PrivateScope, Public, HideBySig, SpecialName
    set_Simplify(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Closed(): PrivateScope, Public, HideBySig, SpecialName
    set_Closed(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Ruled(): PrivateScope, Public, HideBySig, SpecialName
    set_Ruled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_VirtualGuide(): PrivateScope, Public, HideBySig, SpecialName
    set_VirtualGuide(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_NormalOption(): PrivateScope, Public, HideBySig, SpecialName
    set_NormalOption(LoftOptionsNormalOption): PrivateScope, Public, HideBySig, SpecialName
    SetOptionsFromSysvars(): PrivateScope, Public, HideBySig
    ToLoftOptions(): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.SurfaceTrimInfo+TrimRelation: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    TrimRelation OutsideTool = 1 : Public, Static, Literal, HasDefault
    TrimRelation InsideTool = 0 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.AssocObjectTransaction: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.AssocDependencyBody): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.AssocDependency): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.AssocActionBody): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.AssocAction): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    GetDBObject(ObjectId, OpenMode, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    IsSubstituteObject(DBObject): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.ObjectSnapContext: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Properties:
    Autodesk.AutoCAD.Geometry.Matrix3d ViewTransform 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d LastPoint 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d PickPoint 'get ' : 
    Int32 GraphicsSystemSelectionMark 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Entity PickedObject 'get ' : 
  Methods:
    get_PickedObject(): PrivateScope, Public, HideBySig, SpecialName
    get_GraphicsSystemSelectionMark(): PrivateScope, Public, HideBySig, SpecialName
    get_PickPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_LastPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_ViewTransform(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.ObjectSnapInfo: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Properties:
    Autodesk.AutoCAD.Geometry.Curve3dCollection SnapCurves 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3dCollection SnapPoints 'get ' : 
  Methods:
    get_SnapPoints(): PrivateScope, Public, HideBySig, SpecialName
    get_SnapCurves(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.Graph: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.GraphNode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsEmpty 'get ' : 
    Int32 NumNodes 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.GraphNode RootNode 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    Node(Int32): PrivateScope, Public, HideBySig
    get_RootNode(): PrivateScope, Public, HideBySig, SpecialName
    get_NumNodes(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    AddNode(GraphNode): PrivateScope, Public, HideBySig
    AddEdge(GraphNode, GraphNode): PrivateScope, Public, HideBySig
    DelNode(GraphNode): PrivateScope, Public, HideBySig
    Reset(): PrivateScope, Public, HideBySig
    ClearAll(Byte): PrivateScope, Public, HideBySig
    GetOutgoing(): PrivateScope, Public, HideBySig
    FindCycles(GraphNode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BreakCycleEdge(GraphNode, GraphNode): PrivateScope, Public, HideBySig
    SetNodeGrowthRate(Int32): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.GraphNode: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsCycleNode 'get ' : 
    Int32 NumCycleIn 'get ' : 
    Int32 NumCycleOut 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Graph Owner 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.GraphNode NextCycleNode 'get ' : 
    Int32 NumIn 'get ' : 
    Int32 NumOut 'get ' : 
    IntPtr Data 'get set' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_Data(): PrivateScope, Public, HideBySig, SpecialName
    set_Data(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_NumOut(): PrivateScope, Public, HideBySig, SpecialName
    get_NumIn(): PrivateScope, Public, HideBySig, SpecialName
    In(Int32): PrivateScope, Public, HideBySig
    Out(Int32): PrivateScope, Public, HideBySig
    CycleIn(Int32): PrivateScope, Public, HideBySig
    CycleOut(Int32): PrivateScope, Public, HideBySig
    get_NextCycleNode(): PrivateScope, Public, HideBySig, SpecialName
    get_Owner(): PrivateScope, Public, HideBySig, SpecialName
    AddRefTo(GraphNode): PrivateScope, Public, HideBySig
    RemoveRefTo(GraphNode): PrivateScope, Public, HideBySig
    DisconnectAll(): PrivateScope, Public, HideBySig
    IsMarkedAs(Int32): PrivateScope, Public, HideBySig
    MarkAs(Byte): PrivateScope, Public, HideBySig
    Clear(Byte): PrivateScope, Public, HideBySig
    MarkTree(Byte, GraphNodeCollection): PrivateScope, Public, HideBySig
    get_NumCycleOut(): PrivateScope, Public, HideBySig, SpecialName
    get_NumCycleIn(): PrivateScope, Public, HideBySig, SpecialName
    get_IsCycleNode(): PrivateScope, Public, HideBySig, SpecialName
    SetEdgeGrowthRate(Int32, Int32): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.GraphNodeCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IList
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.GraphNode Item [Int32] 'get set' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, GraphNode): PrivateScope, Public, HideBySig, SpecialName
    RemoveAt(Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Add(GraphNode): PrivateScope, Public, HideBySig
    IndexOf(GraphNode): PrivateScope, Public, HideBySig
    Insert(Int32, GraphNode): PrivateScope, Public, HideBySig
    Remove(GraphNode): PrivateScope, Public, HideBySig
    Contains(GraphNode): PrivateScope, Public, HideBySig
    CopyTo(GraphNode[], Int32): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.ObjectIdGraphNode: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.GraphNode
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId Id 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.XrefGraphNode: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.GraphNode
  Properties:
    Autodesk.AutoCAD.DatabaseServices.XrefNotificationStatus XrefNotificationStatus 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.XrefStatus XrefStatus 'get ' : 
    Boolean IsNested 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Database Database 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId BlockTableRecordId 'get ' : 
    System.String Name 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_BlockTableRecordId(): PrivateScope, Public, HideBySig, SpecialName
    get_Database(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNested(): PrivateScope, Public, HideBySig, SpecialName
    get_XrefStatus(): PrivateScope, Public, HideBySig, SpecialName
    get_XrefNotificationStatus(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.LayoutManager: AutoLayout, AnsiClass, Class, Public
  :Autodesk.AutoCAD.Runtime.RXObject
  Properties:
    Int32 LayoutCount 'get ' : 
    System.String CurrentLayout 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.LayoutManager Current 'get ' : 
  Events:
    System.EventHandler LayoutsRefresh: SpecialName
    System.EventHandler LayoutsReordered: SpecialName
    Autodesk.AutoCAD.DatabaseServices.PlotStyleTableChangedEventHandler PlotStyleTableChanged: SpecialName
    Autodesk.AutoCAD.DatabaseServices.LayoutEventHandler LayoutSwitched: SpecialName
    Autodesk.AutoCAD.DatabaseServices.LayoutRenamedEventHandler AbortLayoutRename: SpecialName
    Autodesk.AutoCAD.DatabaseServices.LayoutRenamedEventHandler LayoutRenamed: SpecialName
    Autodesk.AutoCAD.DatabaseServices.LayoutRenamedEventHandler LayoutToBeRenamed: SpecialName
    Autodesk.AutoCAD.DatabaseServices.LayoutEventHandler AbortLayoutCopied: SpecialName
    Autodesk.AutoCAD.DatabaseServices.LayoutCopiedEventHandler LayoutCopied: SpecialName
    Autodesk.AutoCAD.DatabaseServices.LayoutEventHandler LayoutToBeCopied: SpecialName
    Autodesk.AutoCAD.DatabaseServices.LayoutEventHandler AbortLayoutRemoved: SpecialName
    Autodesk.AutoCAD.DatabaseServices.LayoutEventHandler LayoutRemoved: SpecialName
    Autodesk.AutoCAD.DatabaseServices.LayoutEventHandler LayoutToBeRemoved: SpecialName
    Autodesk.AutoCAD.DatabaseServices.LayoutEventHandler LayoutCreated: SpecialName
  Methods:
    get_Current(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CurrentLayout(): PrivateScope, Public, HideBySig, SpecialName
    set_CurrentLayout(String): PrivateScope, Public, HideBySig, SpecialName
    SetCurrentLayoutId(ObjectId): PrivateScope, Public, HideBySig
    GetLayoutId(String): PrivateScope, Public, HideBySig
    CopyLayout(String, String): PrivateScope, Public, HideBySig
    DeleteLayout(String): PrivateScope, Public, HideBySig
    CreateLayout(String): PrivateScope, Public, HideBySig
    RenameLayout(String, String): PrivateScope, Public, HideBySig
    CloneLayout(String, String, Int32): PrivateScope, Public, HideBySig
    get_LayoutCount(): PrivateScope, Public, HideBySig, SpecialName
    GetNonRectangularViewportIdFromClipId(ObjectId): PrivateScope, Public, HideBySig
    LayoutExists(String): PrivateScope, Public, HideBySig
    add_LayoutCreated(LayoutEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_LayoutCreated(LayoutEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_LayoutToBeRemoved(LayoutEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_LayoutToBeRemoved(LayoutEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_LayoutRemoved(LayoutEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_LayoutRemoved(LayoutEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_AbortLayoutRemoved(LayoutEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_AbortLayoutRemoved(LayoutEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_LayoutToBeCopied(LayoutEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_LayoutToBeCopied(LayoutEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_LayoutCopied(LayoutCopiedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_LayoutCopied(LayoutCopiedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_AbortLayoutCopied(LayoutEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_AbortLayoutCopied(LayoutEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_LayoutToBeRenamed(LayoutRenamedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_LayoutToBeRenamed(LayoutRenamedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_LayoutRenamed(LayoutRenamedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_LayoutRenamed(LayoutRenamedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_AbortLayoutRename(LayoutRenamedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_AbortLayoutRename(LayoutRenamedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_LayoutSwitched(LayoutEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_LayoutSwitched(LayoutEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_PlotStyleTableChanged(PlotStyleTableChangedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_PlotStyleTableChanged(PlotStyleTableChangedEventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_LayoutsReordered(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_LayoutsReordered(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    add_LayoutsRefresh(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_LayoutsRefresh(EventHandler): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.ParameterValueSetList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ParameterValueSet
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.ParameterValueSetList): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ResultBuffer[] Values 'get set' : 
  Methods:
    get_Values(): PrivateScope, Public, HideBySig, SpecialName
    set_Values(ResultBuffer[]): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.ParameterValueSetMinMax: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ParameterValueSet
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.ParameterValueSetMinMax): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Maximum 'get set' : 
    Double Minimum 'get set' : 
  Methods:
    get_Minimum(): PrivateScope, Public, HideBySig, SpecialName
    set_Minimum(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Maximum(): PrivateScope, Public, HideBySig, SpecialName
    set_Maximum(Double): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.ParameterValueSetIncrement: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.ParameterValueSetMinMax
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.ParameterValueSetIncrement): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Increment 'get set' : 
  Methods:
    get_Increment(): PrivateScope, Public, HideBySig, SpecialName
    set_Increment(Double): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.PlotSettingsValidator: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Properties:
    Autodesk.AutoCAD.DatabaseServices.PlotSettingsValidator Current 'get ' : 
  Methods:
    get_Current(): PrivateScope, Public, Static, HideBySig, SpecialName
    SetPlotConfigurationName(PlotSettings, String, String): PrivateScope, Public, HideBySig
    SetCanonicalMediaName(PlotSettings, String): PrivateScope, Public, HideBySig
    SetPlotOrigin(PlotSettings, Point2d): PrivateScope, Public, HideBySig
    SetPlotPaperUnits(PlotSettings, PlotPaperUnit): PrivateScope, Public, HideBySig
    SetPlotRotation(PlotSettings, PlotRotation): PrivateScope, Public, HideBySig
    SetPlotCentered(PlotSettings, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetPlotType(PlotSettings, PlotType): PrivateScope, Public, HideBySig
    SetPlotWindowArea(PlotSettings, Extents2d): PrivateScope, Public, HideBySig
    SetPlotViewName(PlotSettings, String): PrivateScope, Public, HideBySig
    SetUseStandardScale(PlotSettings, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetCustomPrintScale(PlotSettings, CustomScale): PrivateScope, Public, HideBySig
    SetCurrentStyleSheet(PlotSettings, String): PrivateScope, Public, HideBySig
    SetStdScaleType(PlotSettings, StdScaleType): PrivateScope, Public, HideBySig
    SetStdScale(PlotSettings, Double): PrivateScope, Public, HideBySig
    GetPlotDeviceList(): PrivateScope, Public, HideBySig
    GetCanonicalMediaNameList(PlotSettings): PrivateScope, Public, HideBySig
    GetPlotStyleSheetList(): PrivateScope, Public, HideBySig
    GetLocaleMediaName(PlotSettings, Int32): PrivateScope, Public, HideBySig
    GetLocaleMediaName(PlotSettings, String): PrivateScope, Public, HideBySig
    SetClosestMediaName(PlotSettings, Double, Double, PlotPaperUnit, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    RefreshLists(PlotSettings): PrivateScope, Public, HideBySig
    SetZoomToPaperOnUpdate(PlotSettings, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    SetDefaultPlotConfig(PlotSettings): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.SymbolUtilityServices: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ViewportActiveName 'get ' : 
    System.String TextStyleStandardName 'get ' : 
    System.String RegAppAcadName 'get ' : 
    System.String LinetypeContinuousName 'get ' : 
    System.String LinetypeByLayerName 'get ' : 
    System.String LinetypeByBlockName 'get ' : 
    System.String LayerZeroName 'get ' : 
    System.String LayerDefpointsName 'get ' : 
    System.String BlockPaperSpaceName 'get ' : 
    System.String BlockModelSpaceName 'get ' : 
  Methods:
    GetLayerDefpointsId(Database): PrivateScope, Public, Static, HideBySig
    GetLayerZeroId(Database): PrivateScope, Public, Static, HideBySig
    IsCompatibilityMode(Database): PrivateScope, Public, Static, HideBySig
    ValidateCompatibleSymbolName(String, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    IsBlockLayoutName(String): PrivateScope, Public, Static, HideBySig
    IsBlockModelSpaceName(String): PrivateScope, Public, Static, HideBySig
    IsBlockPaperSpaceName(String): PrivateScope, Public, Static, HideBySig
    IsLayerDefpointsName(String): PrivateScope, Public, Static, HideBySig
    IsLayerZeroName(String): PrivateScope, Public, Static, HideBySig
    IsLinetypeByBlockName(String): PrivateScope, Public, Static, HideBySig
    IsLinetypeByLayerName(String): PrivateScope, Public, Static, HideBySig
    IsLinetypeContinuousName(String): PrivateScope, Public, Static, HideBySig
    IsRegAppAcadName(String): PrivateScope, Public, Static, HideBySig
    IsTextStyleStandardName(String): PrivateScope, Public, Static, HideBySig
    IsViewportActiveName(String): PrivateScope, Public, Static, HideBySig
    GetBlockModelSpaceId(Database): PrivateScope, Public, Static, HideBySig
    GetBlockPaperSpaceId(Database): PrivateScope, Public, Static, HideBySig
    GetLinetypeByBlockId(Database): PrivateScope, Public, Static, HideBySig
    GetLinetypeByLayerId(Database): PrivateScope, Public, Static, HideBySig
    GetLinetypeContinuousId(Database): PrivateScope, Public, Static, HideBySig
    GetRegAppAcadId(Database): PrivateScope, Public, Static, HideBySig
    GetTextStyleStandardId(Database): PrivateScope, Public, Static, HideBySig
    get_BlockModelSpaceName(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_BlockPaperSpaceName(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LayerDefpointsName(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LayerZeroName(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LinetypeByBlockName(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LinetypeByLayerName(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_LinetypeContinuousName(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_RegAppAcadName(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_TextStyleStandardName(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ViewportActiveName(): PrivateScope, Public, Static, HideBySig, SpecialName
    MakeDependentName(String, String): PrivateScope, Public, Static, HideBySig
    RepairPreExtendedSymbolName(String, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    RepairSymbolName(String, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    ValidatePreExtendedSymbolName(String, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    ValidateSymbolName(String, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    GetBlockNameFromInsertPathName(String): PrivateScope, Public, Static, HideBySig
    GetInsertPathNameFromBlockName(String): PrivateScope, Public, Static, HideBySig
    GetMaxSymbolNameLength(Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    GetPathNameFromSymbolName(String, String): PrivateScope, Public, Static, HideBySig
    GetSymbolNameFromPathName(String, String): PrivateScope, Public, Static, HideBySig
    PreValidateSymbolName(String, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.Row: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.CellRange
  Properties:
    Double MinimumHeight 'get ' : 
    Double Height 'get set' : 
  Methods:
    get_Height(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Height(Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MinimumHeight(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.Column: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.CellRange
  Properties:
    System.String Name 'get set' : 
    Double MinimumWidth 'get ' : 
    Double Width 'get set' : 
  Methods:
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Width(Double): PrivateScope, Public, HideBySig, SpecialName
    get_MinimumWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
Interface Autodesk.AutoCAD.DatabaseServices.ITextEditorSelectable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Properties:
    Autodesk.AutoCAD.DatabaseServices.TextEditorLocation EndOfText 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.TextEditorLocation StartOfText 'get ' : 
  Methods:
    get_StartOfText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_EndOfText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.TextEditorLocation: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
Class Autodesk.AutoCAD.DatabaseServices.TextEditorColumn: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Interfaces:
    Autodesk.AutoCAD.DatabaseServices.ITextEditorSelectable
  Properties:
    Double Height 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.TextEditorLocation EndOfText 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.TextEditorLocation StartOfText 'get ' : 
  Methods:
    get_StartOfText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EndOfText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Double): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.TextEditorColumns: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Properties:
    Boolean IsFlowReversed 'get set' : 
    Double TotalWidth 'get set' : 
    Double Gutter 'get set' : 
    Double Width 'get set' : 
    Boolean AutoHeight 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ColumnType Type 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.TextEditorColumn Item [Int32] 'get ' : 
    Int32 Count 'get set' : 
    Int32 MaxCount 'get ' : 
  Methods:
    get_MaxCount(): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Count(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(ColumnType): PrivateScope, Public, HideBySig, SpecialName
    get_AutoHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoHeight(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Width(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Gutter(): PrivateScope, Public, HideBySig, SpecialName
    set_Gutter(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TotalWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_TotalWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_IsFlowReversed(): PrivateScope, Public, HideBySig, SpecialName
    set_IsFlowReversed(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.TextEditorParagraphTab: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Char DecimalChar 'get set' : 
    Double Offset 'get set' : 
    ParagraphTabType Type 'get set' : 
  Methods:
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(ParagraphTabType): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DecimalChar(): PrivateScope, Public, HideBySig, SpecialName
    set_DecimalChar(Char(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.TextEditorParagraphTab+ParagraphTabType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ParagraphTabType LeftTab = 0 : Public, Static, Literal, HasDefault
    ParagraphTabType CenterTab = 1 : Public, Static, Literal, HasDefault
    ParagraphTabType RightTab = 2 : Public, Static, Literal, HasDefault
    ParagraphTabType DecimalTab = 3 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Interfaces:
    Autodesk.AutoCAD.DatabaseServices.ITextEditorSelectable
  Properties:
    Double MaxSpacingValue 'get ' : 
    Double MinSpacingValue 'get ' : 
    Double MaxLineSpacingFactor 'get ' : 
    Double MinLineSpacingFactor 'get ' : 
    Int32 TabsCount 'get ' : 
    NumberingType ParaNumberingType 'get set' : 
    Double SpaceAfter 'get set' : 
    Double SpaceBefore 'get set' : 
    Double LineSpaceFactor 'get set' : 
    LineSpacingStyle LineSpaceStyle 'get set' : 
    Double RightIndent 'get set' : 
    Double LeftIndent 'get set' : 
    Double FirstIndent 'get set' : 
    AlignmentType Alignment 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.TextEditorLocation EndOfText 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.TextEditorLocation StartOfText 'get ' : 
  Methods:
    get_StartOfText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EndOfText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Alignment(): PrivateScope, Public, HideBySig, SpecialName
    set_Alignment(AlignmentType): PrivateScope, Public, HideBySig, SpecialName
    get_FirstIndent(): PrivateScope, Public, HideBySig, SpecialName
    set_FirstIndent(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LeftIndent(): PrivateScope, Public, HideBySig, SpecialName
    set_LeftIndent(Double): PrivateScope, Public, HideBySig, SpecialName
    get_RightIndent(): PrivateScope, Public, HideBySig, SpecialName
    set_RightIndent(Double): PrivateScope, Public, HideBySig, SpecialName
    get_LineSpaceStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_LineSpaceStyle(LineSpacingStyle): PrivateScope, Public, HideBySig, SpecialName
    get_LineSpaceFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_LineSpaceFactor(Double): PrivateScope, Public, HideBySig, SpecialName
    get_SpaceBefore(): PrivateScope, Public, HideBySig, SpecialName
    set_SpaceBefore(Double): PrivateScope, Public, HideBySig, SpecialName
    get_SpaceAfter(): PrivateScope, Public, HideBySig, SpecialName
    set_SpaceAfter(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ParaNumberingType(): PrivateScope, Public, HideBySig, SpecialName
    set_ParaNumberingType(NumberingType): PrivateScope, Public, HideBySig, SpecialName
    RestartNumbering(): PrivateScope, Public, HideBySig
    ContinueNumbering(): PrivateScope, Public, HideBySig
    get_TabsCount(): PrivateScope, Public, HideBySig, SpecialName
    GetTab(Int32): PrivateScope, Public, HideBySig
    AddTab(TextEditorParagraphTab): PrivateScope, Public, HideBySig
    RemoveTab(TextEditorParagraphTab): PrivateScope, Public, HideBySig
    get_MinLineSpacingFactor(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxLineSpacingFactor(): PrivateScope, Public, HideBySig, SpecialName
    get_MinSpacingValue(): PrivateScope, Public, HideBySig, SpecialName
    get_MaxSpacingValue(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph+AlignmentType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AlignmentType AlignmentDefault = 0 : Public, Static, Literal, HasDefault
    AlignmentType AlignmentLeft = 1 : Public, Static, Literal, HasDefault
    AlignmentType AlignmentCenter = 2 : Public, Static, Literal, HasDefault
    AlignmentType AlignmentRight = 3 : Public, Static, Literal, HasDefault
    AlignmentType AlignmentJustify = 4 : Public, Static, Literal, HasDefault
    AlignmentType AlignmentDistribute = 5 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph+LineSpacingStyle: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    LineSpacingStyle LineSpacingDefault = 0 : Public, Static, Literal, HasDefault
    LineSpacingStyle LineSpacingExactly = 1 : Public, Static, Literal, HasDefault
    LineSpacingStyle LineSpacingAtLeast = 2 : Public, Static, Literal, HasDefault
    LineSpacingStyle LineSpacingMultiple = 3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph+NumberingType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    NumberingType Off = 0 : Public, Static, Literal, HasDefault
    NumberingType Bullet = 1 : Public, Static, Literal, HasDefault
    NumberingType Number = 2 : Public, Static, Literal, HasDefault
    NumberingType LetterLower = 3 : Public, Static, Literal, HasDefault
    NumberingType LetterUpper = 4 : Public, Static, Literal, HasDefault
    NumberingType NumberWide = 5 : Public, Static, Literal, HasDefault
    NumberingType LetterLowerWide = 6 : Public, Static, Literal, HasDefault
    NumberingType LetterUpperWide = 7 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.Font: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsTrueType 'get ' : 
    System.String Name 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTrueType(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Properties:
    Double MaxWidthScale 'get ' : 
    Double MinWidthScale 'get ' : 
    Double MaxTrackingFactor 'get ' : 
    Double MinTrackingFactor 'get ' : 
    Double MaxObliqueAngle 'get ' : 
    Double MinObliqueAngle 'get ' : 
    FlowAlign FlowAlignment 'get set' : 
    Double WidthScale 'get set' : 
    Double TrackingFactor 'get set' : 
    Double ObliqueAngle 'get set' : 
    Boolean Strikethrough 'get set' : 
    Boolean Overline 'get set' : 
    Boolean Underline 'get set' : 
    Autodesk.AutoCAD.Colors.Color Color 'get set' : 
    Double Height 'get set' : 
    Boolean Italic 'get set' : 
    Boolean Bold 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.Font Font 'get set' : 
    Int32 Language 'get set' : 
  Methods:
    get_Language(): PrivateScope, Public, HideBySig, SpecialName
    set_Language(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Font(): PrivateScope, Public, HideBySig, SpecialName
    set_Font(Font): PrivateScope, Public, HideBySig, SpecialName
    get_Bold(): PrivateScope, Public, HideBySig, SpecialName
    set_Bold(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Italic(): PrivateScope, Public, HideBySig, SpecialName
    set_Italic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    set_Color(Color): PrivateScope, Public, HideBySig, SpecialName
    get_Underline(): PrivateScope, Public, HideBySig, SpecialName
    set_Underline(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Overline(): PrivateScope, Public, HideBySig, SpecialName
    set_Overline(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Strikethrough(): PrivateScope, Public, HideBySig, SpecialName
    set_Strikethrough(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ObliqueAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_ObliqueAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TrackingFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_TrackingFactor(Double): PrivateScope, Public, HideBySig, SpecialName
    get_WidthScale(): PrivateScope, Public, HideBySig, SpecialName
    set_WidthScale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_FlowAlignment(): PrivateScope, Public, HideBySig, SpecialName
    set_FlowAlignment(FlowAlign): PrivateScope, Public, HideBySig, SpecialName
    get_MinObliqueAngle(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MaxObliqueAngle(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MinTrackingFactor(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MaxTrackingFactor(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MinWidthScale(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MaxWidthScale(): PrivateScope, Public, Static, HideBySig, SpecialName
    InsertSymbol(Char(HasFieldMarshal), Int32): PrivateScope, Public, HideBySig
    InsertString(String): PrivateScope, Public, HideBySig
    InsertImportedText(InsertTextType, Byte[]): PrivateScope, Public, HideBySig
    InputSpecialChar(Char(HasFieldMarshal)): PrivateScope, Public, HideBySig
    InsertColumnBreak(): PrivateScope, Public, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase+FlowAlign: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    FlowAlign FlowTop = 2 : Public, Static, Literal, HasDefault
    FlowAlign FlowBase = 0 : Public, Static, Literal, HasDefault
    FlowAlign FlowCenter = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase+InsertTextType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    InsertTextType UnicodeMTextFormat = 0 : Public, Static, Literal, HasDefault
    InsertTextType MTextFormat = 1 : Public, Static, Literal, HasDefault
    InsertTextType RichTextFormat = 2 : Public, Static, Literal, HasDefault
    InsertTextType UnicodeDTextFormat = 3 : Public, Static, Literal, HasDefault
    InsertTextType DTextFormat = 4 : Public, Static, Literal, HasDefault
    InsertTextType UnicodeTextFormat = 5 : Public, Static, Literal, HasDefault
    InsertTextType MultibyteTextFormat = 6 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.TextEditorStack: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    FlowAlign FlowAlign 'get set' : 
    Char DecimalChar 'get set' : 
    Double Scale 'get set' : 
    System.String Bottom 'get set' : 
    System.String Top 'get set' : 
    StackType Type 'get set' : 
    Double MaxStackScale 'get ' : 
    Double MinStackScale 'get ' : 
  Methods:
    get_MinStackScale(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MaxStackScale(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(StackType): PrivateScope, Public, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, HideBySig, SpecialName
    set_Top(String): PrivateScope, Public, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, HideBySig, SpecialName
    set_Bottom(String): PrivateScope, Public, HideBySig, SpecialName
    get_Scale(): PrivateScope, Public, HideBySig, SpecialName
    set_Scale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DecimalChar(): PrivateScope, Public, HideBySig, SpecialName
    set_DecimalChar(Char(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_FlowAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_FlowAlign(FlowAlign): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.TextEditorStack+StackType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    StackType HorizontalStack = 0 : Public, Static, Literal, HasDefault
    StackType DiagonalStack = 1 : Public, Static, Literal, HasDefault
    StackType ToleranceStack = 2 : Public, Static, Literal, HasDefault
    StackType DecimalStack = 3 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.TextEditorSelection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase
  Properties:
    Autodesk.AutoCAD.DatabaseServices.Field FieldObject 'get ' : 
    Boolean SingleFieldSelected 'get ' : 
    Boolean SingleStackSelected 'get ' : 
    System.String SelectionString 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.TextEditorStack StackSettings 'get set' : 
    Boolean CanChangeCase 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph[] Paragraphs 'get ' : 
    Boolean CanStack 'get ' : 
    Boolean CanUnStack 'get ' : 
  Methods:
    Stack(): PrivateScope, Public, HideBySig
    UnStack(): PrivateScope, Public, HideBySig
    get_CanUnStack(): PrivateScope, Public, HideBySig, SpecialName
    get_CanStack(): PrivateScope, Public, HideBySig, SpecialName
    get_Paragraphs(): PrivateScope, Public, HideBySig, SpecialName
    CombineParagraphs(): PrivateScope, Public, HideBySig
    RemoveCharacterFormatting(): PrivateScope, Public, HideBySig
    RemoveParagraphFormatting(): PrivateScope, Public, HideBySig
    RemoveAllFormatting(): PrivateScope, Public, HideBySig
    get_CanChangeCase(): PrivateScope, Public, HideBySig, SpecialName
    ChangeToLowercase(): PrivateScope, Public, HideBySig
    ChangeToUppercase(): PrivateScope, Public, HideBySig
    get_StackSettings(): PrivateScope, Public, HideBySig, SpecialName
    set_StackSettings(TextEditorStack): PrivateScope, Public, HideBySig, SpecialName
    get_SelectionString(): PrivateScope, Public, HideBySig, SpecialName
    CanSupportLanguage(Int32): PrivateScope, Public, HideBySig
    CanSupportFont(Font): PrivateScope, Public, HideBySig
    get_SingleStackSelected(): PrivateScope, Public, HideBySig, SpecialName
    get_SingleFieldSelected(): PrivateScope, Public, HideBySig, SpecialName
    get_FieldObject(): PrivateScope, Public, HideBySig, SpecialName
    ConvertToPlainText(): PrivateScope, Public, HideBySig
    UpdateField(): PrivateScope, Public, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.TextEditor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Interfaces:
    Autodesk.AutoCAD.DatabaseServices.ITextEditorSelectable
  Properties:
    Autodesk.AutoCAD.DatabaseServices.TextEditorLocation EndOfText 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.TextEditorLocation StartOfText 'get ' : 
    FlowAlign DefaultStackAlignment 'get set' : 
    Double DefaultStackScale 'get set' : 
    Int32 StackCount 'get ' : 
    Boolean VerticalTTF 'get ' : 
    Boolean VerticalSHX 'get ' : 
    Int32 FontCount 'get ' : 
    Boolean TabOnlyDelimiter 'get set' : 
    Boolean AutoListEnabled 'get set' : 
    Boolean NumberingEnabled 'get set' : 
    Boolean AutoCAPS 'get set' : 
    Double ActualHeight 'get ' : 
    Double ActualWidth 'get ' : 
    Double TextHeight 'get set' : 
    Double DefinedHeight 'get set' : 
    Double DefinedWidth 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.AttachmentPoint Attachment 'get set' : 
    Int32 StyleCount 'get ' : 
    Boolean IsAnnotativeStyle 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId Style 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph[] Paragraphs 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.TextEditorWipeout Wipeout 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.TextEditorCursor Cursor 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.TextEditorSelection Selection 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.TextEditorColumns Columns 'get ' : 
  Methods:
    CreateTextEditor(MText): PrivateScope, Public, Static, HideBySig
    Close(ExitStatus): PrivateScope, Public, HideBySig
    get_Columns(): PrivateScope, Public, HideBySig, SpecialName
    get_Selection(): PrivateScope, Public, HideBySig, SpecialName
    get_Cursor(): PrivateScope, Public, HideBySig, SpecialName
    get_Wipeout(): PrivateScope, Public, HideBySig, SpecialName
    get_Paragraphs(): PrivateScope, Public, HideBySig, SpecialName
    ClearSelection(): PrivateScope, Public, HideBySig
    MakeSelection(TextEditorLocation, TextEditorLocation): PrivateScope, Public, HideBySig
    SelectAll(): PrivateScope, Public, HideBySig
    Redraw(): PrivateScope, Public, HideBySig
    FindTextW(String, TextFindFlags, TextEditorLocation&(In, Out), TextEditorLocation&(In, Out)): PrivateScope, Public, HideBySig
    get_Style(): PrivateScope, Public, HideBySig, SpecialName
    set_Style(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_IsAnnotativeStyle(): PrivateScope, Public, HideBySig, SpecialName
    get_StyleCount(): PrivateScope, Public, HideBySig, SpecialName
    get_Attachment(): PrivateScope, Public, HideBySig, SpecialName
    set_Attachment(AttachmentPoint): PrivateScope, Public, HideBySig, SpecialName
    get_DefinedWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_DefinedWidth(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DefinedHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_DefinedHeight(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TextHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_TextHeight(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ActualWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_ActualHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_AutoCAPS(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoCAPS(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_NumberingEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_NumberingEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_AutoListEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoListEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_TabOnlyDelimiter(): PrivateScope, Public, HideBySig, SpecialName
    set_TabOnlyDelimiter(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_FontCount(): PrivateScope, Public, HideBySig, SpecialName
    GetFont(Int32): PrivateScope, Public, HideBySig
    get_VerticalSHX(): PrivateScope, Public, HideBySig, SpecialName
    get_VerticalTTF(): PrivateScope, Public, HideBySig, SpecialName
    get_StackCount(): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultStackScale(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultStackScale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultStackAlignment(): PrivateScope, Public, HideBySig, SpecialName
    set_DefaultStackAlignment(FlowAlign): PrivateScope, Public, HideBySig, SpecialName
    get_StartOfText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_EndOfText(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.TextEditorCursor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.TextEditorSelectionbase
  Properties:
    Autodesk.AutoCAD.DatabaseServices.TextEditorColumn Column 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.TextEditorParagraph Paragraph 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.TextEditorLocation Location 'get set' : 
  Methods:
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(TextEditorLocation): PrivateScope, Public, HideBySig, SpecialName
    get_Paragraph(): PrivateScope, Public, HideBySig, SpecialName
    get_Column(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.TextEditorWipeout: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Properties:
    Autodesk.AutoCAD.Colors.Color BackgroundFillColor 'get set' : 
    Double BackgroundScaleFactor 'get set' : 
    Boolean UseBackgroundColor 'get set' : 
    Boolean BackgroundFillEnabled 'get set' : 
    Double MaxBackgroundScaleFactor 'get ' : 
    Double MinBackgroundScaleFactor 'get ' : 
  Methods:
    get_MinBackgroundScaleFactor(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MaxBackgroundScaleFactor(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_BackgroundFillEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_BackgroundFillEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_UseBackgroundColor(): PrivateScope, Public, HideBySig, SpecialName
    set_UseBackgroundColor(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_BackgroundScaleFactor(): PrivateScope, Public, HideBySig, SpecialName
    set_BackgroundScaleFactor(Double): PrivateScope, Public, HideBySig, SpecialName
    get_BackgroundFillColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BackgroundFillColor(Color): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.DatabaseServices.TextEditor+ExitStatus: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ExitStatus ExitQuit = 0 : Public, Static, Literal, HasDefault
    ExitStatus ExitSave = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.DatabaseServices.TextEditor+TextFindFlags: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    TextFindFlags MatchCase = 1 : Public, Static, Literal, HasDefault
    TextFindFlags WholeWord = 2 : Public, Static, Literal, HasDefault
    TextFindFlags HalfFullForm = 4 : Public, Static, Literal, HasDefault
    TextFindFlags IgnoreAccent = 8 : Public, Static, Literal, HasDefault
    TextFindFlags UseWildcards = 16 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.DatabaseServices.DgnUnderlayItem: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.DatabaseServices.UnderlayItem
  Properties:
    Boolean SetShowRasterRef 'set' : 
    Boolean ShowRasterRef 'get ' : 
    Boolean UseMasterUnits 'get set' : 
  Methods:
    get_UseMasterUnits(): PrivateScope, Public, HideBySig, SpecialName
    set_UseMasterUnits(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ShowRasterRef(): PrivateScope, Public, HideBySig, SpecialName
    set_SetShowRasterRef(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.UnderlayItemCollection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Interfaces:
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.UnderlayItem Item [Int32] 'get ' : 
  Methods:
    CopyTo(UnderlayItem[], Int32): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.DatabaseServices.UnderlayFile: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Properties:
    Autodesk.AutoCAD.DatabaseServices.UnderlayItemCollection Items 'get ' : 
  Methods:
    get_Items(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.UnderlayHost: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Properties:
    Autodesk.AutoCAD.DatabaseServices.UnderlayHost PdfHost 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.UnderlayHost DgnDocHost 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.UnderlayHost DgnHost 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.UnderlayHost DwfHost 'get ' : 
  Methods:
    GetFile(String, String): PrivateScope, Public, HideBySig
    get_DwfHost(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DgnHost(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_DgnDocHost(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_PdfHost(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Autodesk.AutoCAD.Runtime.Utilities: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    TranslateReservedString(String): PrivateScope, Public, Static, HideBySig
    GetReservedString(ReservedStringEnumType, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    GetErrorStatus(ErrorStatus): PrivateScope, Public, Static, HideBySig
    GetRedirectedRegistryValue(String, String): PrivateScope, Public, Static, HideBySig
    GetRedirectedRegistryValueMap(String): PrivateScope, Public, Static, HideBySig
Struct Autodesk.AutoCAD.DatabaseServices.XrefObjectId: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId, Autodesk.AutoCAD.DatabaseServices.Handle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Autodesk.AutoCAD.DatabaseServices.ObjectId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.Handle Handle 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ObjectId 'get ' : 
    Boolean IsNull 'get ' : 
    Boolean IsXref 'get ' : 
    Boolean IsValid 'get ' : 
  Methods:
    op_Inequality(XrefObjectId, XrefObjectId): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(XrefObjectId, XrefObjectId): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Final, Virtual, HideBySig
    get_IsValid(): PrivateScope, Public, HideBySig, SpecialName
    get_IsXref(): PrivateScope, Public, HideBySig, SpecialName
    get_IsNull(): PrivateScope, Public, HideBySig, SpecialName
    get_ObjectId(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    ResolveObjectId(): PrivateScope, Public, HideBySig
    Serialize(): PrivateScope, Public, HideBySig
    Deserialize(ResultBuffer, ResultBuffer&(Out)): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.CellBorder: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Properties:
    System.Nullable`1[Autodesk.AutoCAD.DatabaseServices.GridProperties] Overrides 'get set' : 
    System.Nullable`1[System.Double] Margin 'get set' : 
    System.Nullable`1[Autodesk.AutoCAD.DatabaseServices.ObjectId] Linetype 'get set' : 
    System.Nullable`1[Autodesk.AutoCAD.DatabaseServices.LineWeight] LineWeight 'get set' : 
    System.Nullable`1[System.Boolean] IsVisible 'get set' : 
    System.Nullable`1[Autodesk.AutoCAD.DatabaseServices.GridLineStyle] LineStyle 'get set' : 
    System.Nullable`1[System.Double] DoubleLineSpacing 'get set' : 
    Autodesk.AutoCAD.Colors.Color Color 'get set' : 
  Methods:
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    set_Color(Color): PrivateScope, Public, HideBySig, SpecialName
    get_DoubleLineSpacing(): PrivateScope, Public, HideBySig, SpecialName
    set_DoubleLineSpacing(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_LineStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_LineStyle(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_IsVisible(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVisible(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_LineWeight(): PrivateScope, Public, HideBySig, SpecialName
    set_LineWeight(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Linetype(): PrivateScope, Public, HideBySig, SpecialName
    set_Linetype(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Margin(): PrivateScope, Public, HideBySig, SpecialName
    set_Margin(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_Overrides(): PrivateScope, Public, HideBySig, SpecialName
    set_Overrides(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.CellContent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    Autodesk.AutoCAD.DatabaseServices.CellProperties Overrides 'get set' : 
    System.Object Value 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId TextStyleId 'get set' : 
    System.String TextString 'get set' : 
    Double TextHeight 'get set' : 
    Double Scale 'get set' : 
    Double Rotation 'get set' : 
    Boolean IsAutoScale 'get set' : 
    System.String Formula 'get set' : 
    Boolean HasFormula 'get ' : 
    System.String DataFormat 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.CellContentTypes ContentTypes 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId FieldId 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.DataTypeParameter DataType 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId BlockTableRecordId 'get set' : 
    Autodesk.AutoCAD.Colors.Color ContentColor 'get set' : 
  Methods:
    get_ContentColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ContentColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BlockTableRecordId(): PrivateScope, Public, HideBySig, SpecialName
    set_BlockTableRecordId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_DataType(): PrivateScope, Public, HideBySig, SpecialName
    set_DataType(DataTypeParameter): PrivateScope, Public, HideBySig, SpecialName
    get_FieldId(): PrivateScope, Public, HideBySig, SpecialName
    set_FieldId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    GetBlockAttributeValue(ObjectId): PrivateScope, Public, HideBySig
    SetBlockAttributeValue(ObjectId, String): PrivateScope, Public, HideBySig
    DeleteContent(): PrivateScope, Public, HideBySig
    get_ContentTypes(): PrivateScope, Public, HideBySig, SpecialName
    get_DataFormat(): PrivateScope, Public, HideBySig, SpecialName
    set_DataFormat(String): PrivateScope, Public, HideBySig, SpecialName
    get_HasFormula(): PrivateScope, Public, HideBySig, SpecialName
    get_Formula(): PrivateScope, Public, HideBySig, SpecialName
    set_Formula(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsAutoScale(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAutoScale(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Rotation(): PrivateScope, Public, HideBySig, SpecialName
    set_Rotation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Scale(): PrivateScope, Public, HideBySig, SpecialName
    set_Scale(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TextHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_TextHeight(Double): PrivateScope, Public, HideBySig, SpecialName
    get_TextString(): PrivateScope, Public, HideBySig, SpecialName
    set_TextString(String): PrivateScope, Public, HideBySig, SpecialName
    GetTextString(FormatOption): PrivateScope, Public, HideBySig
    get_TextStyleId(): PrivateScope, Public, HideBySig, SpecialName
    set_TextStyleId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Object): PrivateScope, Public, HideBySig, SpecialName
    GetValue(FormatOption): PrivateScope, Public, HideBySig
    SetValue(Object, ParseOption): PrivateScope, Public, HideBySig
    get_Overrides(): PrivateScope, Public, HideBySig, SpecialName
    set_Overrides(CellProperties): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.Runtime.VariableChangedEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Interfaces:
    System.IDisposable
  Properties:
    System.Object NewValue 'get ' : 
    System.Object OldValue 'get ' : 
  Methods:
    get_OldValue(): PrivateScope, Public, HideBySig, SpecialName
    get_NewValue(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.Runtime.VariableChangedEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, VariableChangedEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, VariableChangedEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.Runtime.VariableChangingEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.EventArgs
  Interfaces:
    System.IDisposable
  Properties:
    Boolean IsResetting 'get ' : 
    System.Object NewValue 'get set' : 
    System.Object OldValue 'get ' : 
  Methods:
    get_OldValue(): PrivateScope, Public, HideBySig, SpecialName
    get_NewValue(): PrivateScope, Public, HideBySig, SpecialName
    set_NewValue(Object): PrivateScope, Public, HideBySig, SpecialName
    Veto(String): PrivateScope, Public, HideBySig
    get_IsResetting(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class Autodesk.AutoCAD.Runtime.VariableChangingEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, VariableChangingEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, VariableChangingEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Struct Autodesk.AutoCAD.Runtime.Variable+StorageType: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    StorageType PerSession = 0 : Public, Static, Literal, HasDefault
    StorageType PerUser = 1 : Public, Static, Literal, HasDefault
    StorageType PerProfile = 2 : Public, Static, Literal, HasDefault
    StorageType PerDatabase = 3 : Public, Static, Literal, HasDefault
    StorageType PerViewport = 4 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.Runtime.Variable+SecondaryTypeInfo: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    SecondaryTypeInfo None = 0 : Public, Static, Literal, HasDefault
    SecondaryTypeInfo Boolean = 1 : Public, Static, Literal, HasDefault
    SecondaryTypeInfo SymbolName = 2 : Public, Static, Literal, HasDefault
    SecondaryTypeInfo Area = 3 : Public, Static, Literal, HasDefault
    SecondaryTypeInfo Distance = 4 : Public, Static, Literal, HasDefault
    SecondaryTypeInfo Angle = 5 : Public, Static, Literal, HasDefault
    SecondaryTypeInfo UnitlessReal = 6 : Public, Static, Literal, HasDefault
    SecondaryTypeInfo Last = 6 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.Runtime.Variable+TypeFlagsInfo: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    TypeFlagsInfo None = 0 : Public, Static, Literal, HasDefault
    TypeFlagsInfo SpacesAllowed = 1 : Public, Static, Literal, HasDefault
    TypeFlagsInfo DotMeansEmpty = 2 : Public, Static, Literal, HasDefault
    TypeFlagsInfo NoUndo = 4 : Public, Static, Literal, HasDefault
    TypeFlagsInfo Chatty = 8 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.Runtime.Variable+RangeInfo: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 UpperBound 'get set' : 
    Int32 LowerBound 'get set' : 
  Methods:
    get_LowerBound(): PrivateScope, Public, HideBySig, SpecialName
    set_LowerBound(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_UpperBound(): PrivateScope, Public, HideBySig, SpecialName
    set_UpperBound(Int32): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.GraphicsSystem.ClientViewInfo: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 ViewportObjectId 'get set' : 
    Int32 AcadWindowId 'get set' : 
    Int32 ViewportId 'get set' : 
  Methods:
    get_ViewportId(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewportId(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_AcadWindowId(): PrivateScope, Public, HideBySig, SpecialName
    set_AcadWindowId(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ViewportObjectId(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewportObjectId(Int32): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.GraphicsSystem.ViewportBorderProperties: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Drawing.Color, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Weight 'get ' : 
    System.Drawing.Color Color 'get ' : 
  Methods:
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    get_Weight(): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.GraphicsSystem.StereoParameters: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Parallax 'get ' : 
    Double Magnitude 'get ' : 
  Methods:
    get_Magnitude(): PrivateScope, Public, HideBySig, SpecialName
    get_Parallax(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.GraphicsSystem.View: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(Autodesk.AutoCAD.GraphicsSystem.ClientViewInfo, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.DatabaseServices.ObjectId BackgroundId 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.VisualStyle VisualStyle 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId VisualStyleId 'get set' : 
    Autodesk.AutoCAD.GraphicsSystem.Device Device 'get ' : 
    Autodesk.AutoCAD.GraphicsSystem.StereoParameters StereoParameters 'get set' : 
    Boolean EnableStereo 'get set' : 
    Boolean ExceededBounds 'get ' : 
    Boolean IsVisible 'get ' : 
    Boolean IsInteractive 'get ' : 
    Boolean IsValid 'get ' : 
    Autodesk.AutoCAD.Geometry.Matrix3d ObjectToDeviceMatrix 'get ' : 
    Autodesk.AutoCAD.Geometry.Matrix3d WorldToDeviceMatrix 'get ' : 
    Autodesk.AutoCAD.Geometry.Matrix3d ScreenMatrix 'get ' : 
    Autodesk.AutoCAD.Geometry.Matrix3d ProjectionMatrix 'get ' : 
    Autodesk.AutoCAD.Geometry.Matrix3d ViewingMatrix 'get ' : 
    Double BackClip 'get set' : 
    Boolean EnableBackClip 'get set' : 
    Double FrontClip 'get set' : 
    Boolean EnableFrontClip 'get set' : 
    Double FieldHeight 'get ' : 
    Double FieldWidth 'get ' : 
    Boolean IsPerspective 'get ' : 
    Autodesk.AutoCAD.Geometry.Vector3d UpVector 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d Target 'get ' : 
    Autodesk.AutoCAD.Geometry.Point3d Position 'get ' : 
    Boolean ViewportBorderVisibility 'get set' : 
    Autodesk.AutoCAD.GraphicsSystem.ViewportBorderProperties ViewportBorderProperties 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.Extents2d ViewportExtents 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId ViewportObjectId 'get ' : 
    Int32 AcadWindowId 'get ' : 
    IntPtr ViewportId 'get ' : 
  Methods:
    set_VisualStyle(VisualStyle): PrivateScope, Public, HideBySig, SpecialName
    get_BackgroundId(): PrivateScope, Public, HideBySig, SpecialName
    set_BackgroundId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    EnableDefaultLighting(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    EnableDefaultLighting(Boolean(HasFieldMarshal), DefaultLightingType): PrivateScope, Public, HideBySig
    GetNumPixelsInUnitSquare(Point3d): PrivateScope, Public, HideBySig
    GetNumPixelsInUnitSquare(Point3d, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    Create(IntPtr, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal), IntPtr): PrivateScope, Public, Static, HideBySig
    Create(IntPtr, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    get_ViewportId(): PrivateScope, Public, HideBySig, SpecialName
    get_AcadWindowId(): PrivateScope, Public, HideBySig, SpecialName
    get_ViewportObjectId(): PrivateScope, Public, HideBySig, SpecialName
    GetModel(Drawable): PrivateScope, Public, HideBySig
    GetModelList(): PrivateScope, Public, HideBySig
    get_ViewportExtents(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewportExtents(Extents2d): PrivateScope, Public, HideBySig, SpecialName
    SetViewportClipRegion(Int32, Int32[], Point[]): PrivateScope, Public, HideBySig
    RemoveViewportClipRegion(): PrivateScope, Public, HideBySig
    get_ViewportBorderProperties(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewportBorderProperties(ViewportBorderProperties): PrivateScope, Public, HideBySig, SpecialName
    get_ViewportBorderVisibility(): PrivateScope, Public, HideBySig, SpecialName
    set_ViewportBorderVisibility(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    SetView(Point3d, Point3d, Vector3d, Double, Double): PrivateScope, Public, HideBySig
    SetView(Point3d, Point3d, Vector3d, Double, Double, Projection): PrivateScope, Public, HideBySig
    get_Position(): PrivateScope, Public, HideBySig, SpecialName
    get_Target(): PrivateScope, Public, HideBySig, SpecialName
    get_UpVector(): PrivateScope, Public, HideBySig, SpecialName
    get_IsPerspective(): PrivateScope, Public, HideBySig, SpecialName
    get_FieldWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_FieldHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_EnableFrontClip(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableFrontClip(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_FrontClip(): PrivateScope, Public, HideBySig, SpecialName
    set_FrontClip(Double): PrivateScope, Public, HideBySig, SpecialName
    get_EnableBackClip(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableBackClip(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_BackClip(): PrivateScope, Public, HideBySig, SpecialName
    set_BackClip(Double): PrivateScope, Public, HideBySig, SpecialName
    get_ViewingMatrix(): PrivateScope, Public, HideBySig, SpecialName
    get_ProjectionMatrix(): PrivateScope, Public, HideBySig, SpecialName
    get_ScreenMatrix(): PrivateScope, Public, HideBySig, SpecialName
    get_WorldToDeviceMatrix(): PrivateScope, Public, HideBySig, SpecialName
    get_ObjectToDeviceMatrix(): PrivateScope, Public, HideBySig, SpecialName
    Add(Drawable, Model): PrivateScope, Public, HideBySig
    Erase(Drawable): PrivateScope, Public, HideBySig
    EraseAll(): PrivateScope, Public, HideBySig
    Invalidate(Rectangle): PrivateScope, Public, HideBySig
    Invalidate(): PrivateScope, Public, HideBySig
    get_IsValid(): PrivateScope, Public, HideBySig, SpecialName
    Update(): PrivateScope, Public, HideBySig
    BeginInteractivity(Double): PrivateScope, Public, HideBySig
    get_IsInteractive(): PrivateScope, Public, HideBySig, SpecialName
    EndInteractivity(): PrivateScope, Public, HideBySig
    Flush(): PrivateScope, Public, HideBySig
    Hide(): PrivateScope, Public, HideBySig
    Show(): PrivateScope, Public, HideBySig
    get_IsVisible(): PrivateScope, Public, HideBySig, SpecialName
    FreezeLayer(IntPtr): PrivateScope, Public, HideBySig
    FreezeLayer(Int64): PrivateScope, Public, HideBySig (Obsolete)
    ThawLayer(IntPtr): PrivateScope, Public, HideBySig
    ThawLayer(Int64): PrivateScope, Public, HideBySig (Obsolete)
    ClearFrozenLayers(): PrivateScope, Public, HideBySig
    InvalidateCachedViewportGeometry(): PrivateScope, Public, HideBySig
    Dolly(Double, Double, Double): PrivateScope, Public, HideBySig
    Dolly(Vector3d): PrivateScope, Public, HideBySig
    Roll(Double): PrivateScope, Public, HideBySig
    Orbit(Double, Double): PrivateScope, Public, HideBySig
    Zoom(Double): PrivateScope, Public, HideBySig
    ZoomExtents(Point3d, Point3d): PrivateScope, Public, HideBySig
    ZoomWindow(Point2d, Point2d): PrivateScope, Public, HideBySig
    Pan(Double, Double): PrivateScope, Public, HideBySig
    PointInView(Point3d): PrivateScope, Public, HideBySig
    ExtentsInView(Point3d, Point3d): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, HideBySig
    Clone(Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_ExceededBounds(): PrivateScope, Public, HideBySig, SpecialName
    get_EnableStereo(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableStereo(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_StereoParameters(): PrivateScope, Public, HideBySig, SpecialName
    set_StereoParameters(StereoParameters): PrivateScope, Public, HideBySig, SpecialName
    GetSnapshot(Rectangle): PrivateScope, Public, HideBySig
    RenderToImage(): PrivateScope, Public, HideBySig
    RenderToImage(Drawable, Rectangle): PrivateScope, Public, HideBySig
    RenderToImage(Drawable, Rectangle, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_Device(): PrivateScope, Public, HideBySig, SpecialName
    get_VisualStyleId(): PrivateScope, Public, HideBySig, SpecialName
    set_VisualStyleId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_VisualStyle(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.GraphicsSystem.Model: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(Autodesk.AutoCAD.GraphicsSystem.RenderType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Selectable 'get set' : 
    Double ShadowPlaneLocation 'get set' : 
    Autodesk.AutoCAD.GraphicsSystem.RenderType RenderType 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId SectioningVisualStyle 'set' : 
    Boolean EnableSectioning 'get set' : 
    Boolean LinetypesEnabled 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId BackgroundId 'get set' : 
    Autodesk.AutoCAD.GraphicsInterface.VisualStyle VisualStyle 'get set' : 
    Autodesk.AutoCAD.DatabaseServices.ObjectId VisualStyleId 'get set' : 
    Boolean ViewClippingOverride 'set' : 
    Autodesk.AutoCAD.Geometry.Matrix3d Transform 'get set' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal), IntPtr): PrivateScope, Public, Static, HideBySig
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    AddSceneGraphRoot(Drawable): PrivateScope, Public, HideBySig
    EraseSceneGraphRoot(Drawable): PrivateScope, Public, HideBySig
    OnAdded(Drawable, Int32 IsLong): PrivateScope, Public, HideBySig
    OnAdded(Drawable, Drawable): PrivateScope, Public, HideBySig
    OnModified(Drawable, Int32 IsLong): PrivateScope, Public, HideBySig
    OnModified(Drawable, Drawable): PrivateScope, Public, HideBySig
    OnErased(Drawable, Int32 IsLong): PrivateScope, Public, HideBySig
    OnErased(Drawable, Drawable): PrivateScope, Public, HideBySig
    OnPaletteModified(): PrivateScope, Public, HideBySig
    get_Transform(): PrivateScope, Public, HideBySig, SpecialName
    set_Transform(Matrix3d): PrivateScope, Public, HideBySig, SpecialName
    SetExtents(Point3d, Point3d): PrivateScope, Public, HideBySig
    Invalidate(InvalidationHint): PrivateScope, Public, HideBySig
    set_ViewClippingOverride(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_VisualStyleId(): PrivateScope, Public, HideBySig, SpecialName
    set_VisualStyleId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_VisualStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_VisualStyle(VisualStyle): PrivateScope, Public, HideBySig, SpecialName
    get_BackgroundId(): PrivateScope, Public, HideBySig, SpecialName
    set_BackgroundId(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_LinetypesEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_LinetypesEnabled(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_EnableSectioning(): PrivateScope, Public, HideBySig, SpecialName
    set_EnableSectioning(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    SetSectioning(Point3dCollection, Vector3d, Double, Double): PrivateScope, Public, HideBySig
    SetSectioning(Point3dCollection, Vector3d): PrivateScope, Public, HideBySig
    set_SectioningVisualStyle(ObjectId): PrivateScope, Public, HideBySig, SpecialName
    get_RenderType(): PrivateScope, Public, HideBySig, SpecialName
    get_ShadowPlaneLocation(): PrivateScope, Public, HideBySig, SpecialName
    set_ShadowPlaneLocation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Selectable(): PrivateScope, Public, HideBySig, SpecialName
    set_Selectable(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.GraphicsSystem.Projection: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsSystem.Projection Parallel = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.Projection Perspective = 1 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.GraphicsSystem.Device: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(IntPtr, Autodesk.AutoCAD.GraphicsSystem.DeviceType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Autodesk.AutoCAD.GraphicsSystem.RendererType DeviceRenderType 'get set' : 
    System.Drawing.Color BackgroundColor 'get set' : 
    Boolean IsValid 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal), IntPtr): PrivateScope, Public, Static, HideBySig
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    Invalidate(Rectangle): PrivateScope, Public, HideBySig
    Invalidate(): PrivateScope, Public, HideBySig
    get_IsValid(): PrivateScope, Public, HideBySig, SpecialName
    Update(Rectangle): PrivateScope, Public, HideBySig
    Update(): PrivateScope, Public, HideBySig
    OnSize(Size): PrivateScope, Public, HideBySig
    OnRealizeForegroundPalette(): PrivateScope, Public, HideBySig
    OnRealizeBackgroundPalette(): PrivateScope, Public, HideBySig
    OnDisplayChange(Int32, Int32, Int32): PrivateScope, Public, HideBySig
    Add(View): PrivateScope, Public, HideBySig
    Erase(View): PrivateScope, Public, HideBySig
    EraseAll(): PrivateScope, Public, HideBySig
    get_BackgroundColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BackgroundColor(Color): PrivateScope, Public, HideBySig, SpecialName
    SetLogicalPalette(Color[]): PrivateScope, Public, HideBySig
    SetPhysicalPalette(Color[]): PrivateScope, Public, HideBySig
    GetSnapshot(Rectangle): PrivateScope, Public, HideBySig
    get_DeviceRenderType(): PrivateScope, Public, HideBySig, SpecialName
    set_DeviceRenderType(RendererType): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.GraphicsSystem.DefaultLightingType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsSystem.DefaultLightingType OneLight = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.DefaultLightingType TwoLights = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsSystem.DriverInfo: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Boolean, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Driver 'get ' : 
    System.String Path 'get ' : 
    Boolean HardwareAccelerated 'get ' : 
  Methods:
    get_HardwareAccelerated(): PrivateScope, Public, HideBySig, SpecialName
    get_Path(): PrivateScope, Public, HideBySig, SpecialName
    get_Driver(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.GraphicsSystem.EffectStatus: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 FeatureLevel 'get set' : 
    Int32 Enabled 'get set' : 
    Int32 Recommended 'get set' : 
    Int32 Available 'get set' : 
    System.String EffectName 'get set' : 
    Autodesk.AutoCAD.UniqueString EffectUniqueString 'get set' : 
  Events:
    System.EventHandler EffectOnChanged: SpecialName
  Methods:
    get_EffectUniqueString(): PrivateScope, Public, HideBySig, SpecialName
    set_EffectUniqueString(UniqueString): PrivateScope, Public, HideBySig, SpecialName
    get_EffectName(): PrivateScope, Public, HideBySig, SpecialName
    set_EffectName(String): PrivateScope, Public, HideBySig, SpecialName
    get_Available(): PrivateScope, Public, HideBySig, SpecialName
    set_Available(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Recommended(): PrivateScope, Public, HideBySig, SpecialName
    set_Recommended(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, HideBySig, SpecialName
    set_Enabled(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_FeatureLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_FeatureLevel(Int32): PrivateScope, Public, HideBySig, SpecialName
    add_EffectOnChanged(EventHandler): PrivateScope, Public, HideBySig, SpecialName
    remove_EffectOnChanged(EventHandler): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.GraphicsSystem.CertificationData: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 HardwareID 'get set' : 
    Int32 CertificationStatus 'get set' : 
    Int32 SoftwareFeatureLevel 'get set' : 
    Int32 HardwareFeatureLevel 'get set' : 
    System.String FailedDevices 'get set' : 
    System.String TuningDate 'get set' : 
    System.String ProductDriverURL 'get set' : 
    System.String DriverVersion 'get set' : 
    System.String CardName 'get set' : 
  Methods:
    get_CardName(): PrivateScope, Public, HideBySig, SpecialName
    set_CardName(String): PrivateScope, Public, HideBySig, SpecialName
    get_DriverVersion(): PrivateScope, Public, HideBySig, SpecialName
    set_DriverVersion(String): PrivateScope, Public, HideBySig, SpecialName
    get_ProductDriverURL(): PrivateScope, Public, HideBySig, SpecialName
    set_ProductDriverURL(String): PrivateScope, Public, HideBySig, SpecialName
    get_TuningDate(): PrivateScope, Public, HideBySig, SpecialName
    set_TuningDate(String): PrivateScope, Public, HideBySig, SpecialName
    get_FailedDevices(): PrivateScope, Public, HideBySig, SpecialName
    set_FailedDevices(String): PrivateScope, Public, HideBySig, SpecialName
    get_HardwareFeatureLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_HardwareFeatureLevel(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SoftwareFeatureLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_SoftwareFeatureLevel(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CertificationStatus(): PrivateScope, Public, HideBySig, SpecialName
    set_CertificationStatus(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_HardwareID(): PrivateScope, Public, HideBySig, SpecialName
    set_HardwareID(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.GraphicsSystem.Configuration: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean GenerateVertexNormals 'get set' : 
    Autodesk.AutoCAD.GraphicsSystem.Quality Transparency 'get set' : 
    Boolean DiscardBackFaces 'get set' : 
    Autodesk.AutoCAD.GraphicsSystem.Handedness Handedness 'get set' : 
    Boolean RedrawOnWindowExpose 'get set' : 
    Boolean AdaptiveDegradation 'get set' : 
    Int32 FrameRate 'get set' : 
    Int32 CurveTessellationTolerance 'get set' : 
    Int32 SurfaceTessellationTolerance 'get set' : 
    Int32 MaxLODs 'get set' : 
    Boolean DynamicTessellation 'get set' : 
    Autodesk.AutoCAD.GraphicsSystem.DriverInfo DefaultHardwareAcceleratedDriver 'get ' : 
    Autodesk.AutoCAD.GraphicsSystem.DriverInfo HardwareAcceleratedDriver 'get set' : 
    Autodesk.AutoCAD.GraphicsSystem.DriverInfo CurrentDisplayDriver 'get ' : 
    System.String DriverSearchPath 'get set' : 
    Int32 DriverRevision 'get ' : 
    Int32 DriverVersion 'get ' : 
    System.String DriverName 'get ' : 
  Methods:
    Create(IntPtr, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    Configure(): PrivateScope, Public, HideBySig
    ShowConfigDialog(String): PrivateScope, Public, HideBySig
    IsInConfiguring(): PrivateScope, Public, HideBySig
    SaveToRegistry(): PrivateScope, Public, HideBySig
    Restore(): PrivateScope, Public, HideBySig
    get_DriverName(): PrivateScope, Public, HideBySig, SpecialName
    get_DriverVersion(): PrivateScope, Public, HideBySig, SpecialName
    get_DriverRevision(): PrivateScope, Public, HideBySig, SpecialName
    get_DriverSearchPath(): PrivateScope, Public, HideBySig, SpecialName
    set_DriverSearchPath(String): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentDisplayDriver(): PrivateScope, Public, HideBySig, SpecialName
    get_HardwareAcceleratedDriver(): PrivateScope, Public, HideBySig, SpecialName
    set_HardwareAcceleratedDriver(DriverInfo): PrivateScope, Public, HideBySig, SpecialName
    get_DefaultHardwareAcceleratedDriver(): PrivateScope, Public, HideBySig, SpecialName
    GetHardwareAcceleratedDrivers(): PrivateScope, Public, HideBySig
    get_DynamicTessellation(): PrivateScope, Public, HideBySig, SpecialName
    set_DynamicTessellation(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_MaxLODs(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxLODs(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SurfaceTessellationTolerance(): PrivateScope, Public, HideBySig, SpecialName
    set_SurfaceTessellationTolerance(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CurveTessellationTolerance(): PrivateScope, Public, HideBySig, SpecialName
    set_CurveTessellationTolerance(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_FrameRate(): PrivateScope, Public, HideBySig, SpecialName
    set_FrameRate(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_AdaptiveDegradation(): PrivateScope, Public, HideBySig, SpecialName
    set_AdaptiveDegradation(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    DegradationChainPosition(DegradationChannel): PrivateScope, Public, HideBySig
    DegradationChannelAt(Int32): PrivateScope, Public, HideBySig
    ShiftDegradationChainPosition(DegradationChannel, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetCanDegradeChannel(DegradationChannel): PrivateScope, Public, HideBySig
    SetCanDegradeChannel(DegradationChannel, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    get_RedrawOnWindowExpose(): PrivateScope, Public, HideBySig, SpecialName
    set_RedrawOnWindowExpose(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Handedness(): PrivateScope, Public, HideBySig, SpecialName
    set_Handedness(Handedness): PrivateScope, Public, HideBySig, SpecialName
    get_DiscardBackFaces(): PrivateScope, Public, HideBySig, SpecialName
    set_DiscardBackFaces(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Transparency(): PrivateScope, Public, HideBySig, SpecialName
    set_Transparency(Quality): PrivateScope, Public, HideBySig, SpecialName
    GetFeatureMode(): PrivateScope, Public, HideBySig
    GetFeatureModeAvailable(): PrivateScope, Public, HideBySig
    SetFeatureMode(FeatureModeType): PrivateScope, Public, HideBySig
    IsFeatureEnabled(UniqueString): PrivateScope, Public, HideBySig
    IsFeatureAvailable(UniqueString): PrivateScope, Public, HideBySig
    IsFeatureRecommended(UniqueString): PrivateScope, Public, HideBySig
    SetFeatureEnabled(UniqueString, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    GetFeatureUsedVal(UniqueString): PrivateScope, Public, HideBySig
    GetFeatureAvailableVal(UniqueString): PrivateScope, Public, HideBySig
    GetFeatureRecommendedVal(UniqueString): PrivateScope, Public, HideBySig
    SetFeatureUsedVal(UniqueString, Int32): PrivateScope, Public, HideBySig
    IsHardwareAccelerationEnabled(): PrivateScope, Public, HideBySig
    IsHardwareAccelerationAvailable(): PrivateScope, Public, HideBySig
    IsHardwareAccelerationRecommended(): PrivateScope, Public, HideBySig
    setHardwareAcceleration(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    IsNoHardwareOverrideEnabled(): PrivateScope, Public, HideBySig
    GetEffectList(EffectListType): PrivateScope, Public, HideBySig
    GetCertificationData(): PrivateScope, Public, HideBySig
    GetVirtualDeviceName(): PrivateScope, Public, HideBySig
    get_GenerateVertexNormals(): PrivateScope, Public, HideBySig, SpecialName
    set_GenerateVertexNormals(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Struct Autodesk.AutoCAD.GraphicsSystem.DegradationChannel: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsSystem.DegradationChannel ViewportDraw = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.DegradationChannel LineAntialias = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.DegradationChannel Lighting = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.DegradationChannel TransparencyQuality = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.DegradationChannel ShadowsFull = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.DegradationChannel Transparency = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.DegradationChannel DiscardBackfaces = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.DegradationChannel ShadowsGround = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.DegradationChannel EdgeStyles = 8 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.DegradationChannel FacetEdges = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.DegradationChannel FastSilhouette = 10 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.DegradationChannel Textures = 11 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.DegradationChannel Materials = 12 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.DegradationChannel LightingQuality = 13 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.DegradationChannel Backgrounds = 14 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.DegradationChannel IntersectEdges = 15 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.DegradationChannel Faceted = 16 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.DegradationChannel Wireframe = 17 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.DegradationChannel DegradationChannels = 18 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsSystem.Handedness: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsSystem.Handedness Left = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.Handedness Right = 1 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsSystem.Quality: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsSystem.Quality LowQuality = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.Quality MediumQuality = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.Quality HighQuality = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsSystem.FeatureModeType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsSystem.FeatureModeType kFM_Start = -3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.FeatureModeType kFM_Legacy = -3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.FeatureModeType kFM_ClassicDx9 = -2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.FeatureModeType kFM_ClassicDx11 = -1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.FeatureModeType kFM_Software = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.FeatureModeType kFM_Basic = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.FeatureModeType kFM_Medium = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.FeatureModeType kFM_Advanced = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.FeatureModeType kFM_Unknown = 65535 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsSystem.EffectListType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsSystem.EffectListType kEL_Current = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.EffectListType kEL_RegistryHardware = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.EffectListType kEL_RegistrySoftware = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.EffectListType kEL_File = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.EffectListType kEL_HardwareBasic = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.EffectListType kEL_HardwareMedium = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.EffectListType kEL_HardwareAdvanced = 6 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsSystem.ErrorStatus: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsSystem.ErrorStatus Success = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.ErrorStatus OutOfRange = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.ErrorStatus InvalidInput = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsSystem.DeviceType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsSystem.DeviceType ScreenDevice = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.DeviceType OffScreenDevice = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.DeviceType SelectionDevice = 2 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsSystem.HighlightStyle: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsSystem.HighlightStyle HighlightDashed = 0 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsSystem.LineWeight: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWt000 = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWt005 = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWt009 = 9 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWt013 = 13 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWt015 = 15 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWt018 = 18 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWt020 = 20 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWt025 = 25 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWt030 = 30 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWt035 = 35 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWt040 = 40 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWt050 = 50 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWt053 = 53 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWt060 = 60 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWt070 = 70 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWt080 = 80 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWt090 = 90 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWt100 = 100 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWt106 = 106 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWt120 = 120 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWt140 = 140 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWt158 = 158 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWt200 = 200 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWt211 = 211 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWtByLayer = -1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWtByBlock = -2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.LineWeight kLnWtByLwDefault = -3 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsSystem.RendererType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsSystem.RendererType Default = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.RendererType Software = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.RendererType SoftwareNewViewsOnly = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.RendererType FullRender = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.RendererType SelectionRender = 4 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.GraphicsSystem.Node: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Autodesk.AutoCAD.Runtime.DisposableWrapper
  Properties:
    Autodesk.AutoCAD.GraphicsInterface.Drawable Drawable 'get ' : 
  Methods:
    get_Drawable(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Autodesk.AutoCAD.GraphicsSystem.GetInterfaceFunction: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Int32 IsLong, Boolean(HasFieldMarshal)): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Int32 IsLong, Boolean(HasFieldMarshal), AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Autodesk.AutoCAD.GraphicsSystem.ReleaseInterfaceFunction: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Drawable): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Drawable, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Struct Autodesk.AutoCAD.GraphicsSystem.RenderType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsSystem.RenderType Main = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.RenderType Sprite = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.RenderType Direct = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.RenderType Highlight = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.RenderType HighlightSelection = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.RenderType DirectTopmost = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.RenderType Contrast = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.RenderType Count = 7 : Public, Static, Literal, HasDefault
Struct Autodesk.AutoCAD.GraphicsSystem.InvalidationHint: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.GraphicsSystem.InvalidationHint InvalidateNone = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.InvalidationHint InvalidateIsolines = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.InvalidationHint InvalidateViewportCache = 2 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.InvalidationHint InvalidateAll = 3 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.InvalidationHint InvalidateAllStatic = 4 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.InvalidationHint InvalidateFacets = 5 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.InvalidationHint InvalidateFills = 6 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.InvalidationHint InvalidateLinetypes = 7 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.GraphicsSystem.InvalidationHint InvalidateMaterials = 8 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.ComponentModel.PropertyProviderAttribute: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type PropertyProviderType 'get ' : 
  Methods:
    get_PropertyProviderType(): PrivateScope, Public, HideBySig, SpecialName
Interface Autodesk.AutoCAD.ComponentModel.IPropertyProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Methods:
    GetProperties(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Autodesk.AutoCAD.ComponentModel.ITypeDescriptor: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Properties:
    Boolean HasPerInstancePropertyProviders 'get ' : 
  Methods:
    ModifyPropertyCollection(PropertyDescriptorCollection, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddProperty(PropertyDescriptor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RemoveProperty(PropertyDescriptor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_HasPerInstancePropertyProviders(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetPerInstancePropertyProviders(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    AddPerInstancePropertyProvider(IPropertyProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    RemovePerInstancePropertyProvider(IPropertyProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Autodesk.AutoCAD.ComponentModel.PropertyDescriptorBase`2[TComponent,TPropertyValue]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: TComponent
  Type parameter: TPropertyValue
  :System.ComponentModel.PropertyDescriptor
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Attribute[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String DisplayName 'get ' : 
    System.Type PropertyType 'get ' : 
    Boolean IsReadOnly 'get ' : 
    System.Type ComponentType 'get ' : 
  Methods:
    get_ComponentType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsReadOnly(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_PropertyType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_DisplayName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    CanResetValue(Object): PrivateScope, Public, Virtual, HideBySig
    ResetValue(Object): PrivateScope, Public, Virtual, HideBySig
    ShouldSerializeValue(Object): PrivateScope, Public, Virtual, HideBySig
Class Autodesk.AutoCAD.ComponentModel.TypeDescriptor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Autodesk.AutoCAD.ComponentModel.ITypeDescriptor
  Properties:
    Boolean HasPerInstancePropertyProviders 'get ' : 
  Methods:
    ModifyPropertyCollection(PropertyDescriptorCollection, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddProperty(PropertyDescriptor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemoveProperty(PropertyDescriptor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_HasPerInstancePropertyProviders(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetPerInstancePropertyProviders(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    AddPerInstancePropertyProvider(IPropertyProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    RemovePerInstancePropertyProvider(IPropertyProvider): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Autodesk.AutoCAD.ComponentModel.TypeManager: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Properties:
    Autodesk.AutoCAD.ComponentModel.ITypeDescriptor Item [System.Type] 'get ' : 
    Autodesk.AutoCAD.ComponentModel.TypeManager Instance 'get ' : 
  Methods:
    get_Instance(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Item(Type): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.ComponentModel.TypeDescriptionProvider`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
  :System.ComponentModel.TypeDescriptionProvider
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetTypeDescriptor(Type, Object): PrivateScope, Public, Virtual, HideBySig
Class Autodesk.AutoCAD.DatabaseServices.Internal.ObjectDiffEventArgs: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.EventArgs
    Void .ctor(Int32, UInt64*, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 ChangeType 'get ' : 
    Int32 DrawingId 'get ' : 
    Autodesk.AutoCAD.DatabaseServices.Handle ObjHandle 'get ' : 
  Methods:
    get_ObjHandle(): PrivateScope, Public, HideBySig, SpecialName
    get_DrawingId(): PrivateScope, Public, HideBySig, SpecialName
    get_ChangeType(): PrivateScope, Public, HideBySig, SpecialName
Class Autodesk.AutoCAD.DatabaseServices.Internal.ObjectDiffEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(Object, ObjectDiffEventArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(Object, ObjectDiffEventArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Struct Autodesk.AutoCAD.DatabaseServices.Internal.CompareReturnStatus: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Autodesk.AutoCAD.DatabaseServices.Internal.CompareReturnStatus UnableToCompare = 0 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Internal.CompareReturnStatus HistoryCompare = 1 : Public, Static, Literal, HasDefault
    Autodesk.AutoCAD.DatabaseServices.Internal.CompareReturnStatus RawBinaryCompare = 2 : Public, Static, Literal, HasDefault
Class Autodesk.AutoCAD.Internal.DebugUtil: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Verify(Boolean(HasFieldMarshal), String): PrivateScope, Public, Static, HideBySig
    Verify(Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    Assert(Boolean(HasFieldMarshal), String, String): PrivateScope, Public, Static, HideBySig
    Assert(Boolean(HasFieldMarshal), String): PrivateScope, Public, Static, HideBySig
    Assert(Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
Class Autodesk.AutoCAD.Runtime.ManagedHost: AutoLayout, AnsiClass, Class, Public
    Void .ctor(): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Entry(): PrivateScope, Public
Class Autodesk.AutoCAD.Runtime.ExceptionFilter: AutoLayout, AnsiClass, Class, Public, Abstract
  Methods:
    Invoke(): PrivateScope, Public
